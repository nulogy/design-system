// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Modal Modal 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            footerContent={
              <ForwardRef(ButtonGroup)
                alignment="left"
              >
                <ForwardRef(Styled(Component))>
                  Add job to line
                </ForwardRef(Styled(Component))>
                <ForwardRef(Styled(Component))>
                  Cancel
                </ForwardRef(Styled(Component))>
              </ForwardRef(ButtonGroup)>
            }
            title="Modal Title"
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={
                <ForwardRef(ButtonGroup)
                  alignment="left"
                >
                  <ForwardRef(Styled(Component))>
                    Add job to line
                  </ForwardRef(Styled(Component))>
                  <ForwardRef(Styled(Component))>
                    Cancel
                  </ForwardRef(Styled(Component))>
                </ForwardRef(ButtonGroup)>
              }
              isOpen={true}
              maxWidth="624px"
              onAfterOpen={null}
              onRequestClose={null}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title="Modal Title"
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": "modal-title",
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="624px"
                onAfterOpen={null}
                onRequestClose={null}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": "modal-title",
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ jeTher"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="624px"
                  onAfterOpen={null}
                  onRequestClose={null}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            aria-labelledby="modal-title"
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalHeader-cvhury-1 cENoja"
                            >
                              <h2
                                class="sc-AykKH kVNmCt"
                                font-size="26px"
                                font-weight="500"
                                id="modal-title"
                              >
                                Modal Title
                              </h2>
                            </div>
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              Content Content Content
                            </div>
                            <div
                              class="Modal__ModalFooter-cvhury-2 gnCyAa"
                            >
                              <div
                                class="ButtonGroup-xkz195-0 jMubZv"
                              >
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                >
                                  Add job to line
                                </button>
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ jeTher"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="624px"
                      onAfterOpen={null}
                      onRequestClose={null}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          aria-labelledby="modal-title"
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalHeader
                              hasCloseButton={null}
                            >
                              <div
                                className="Modal__ModalHeader-cvhury-1 cENoja"
                              >
                                <styled.h2
                                  fontSize="26px"
                                  fontWeight="500"
                                  id="modal-title"
                                  lineHeight="1.23076923"
                                  mb="none"
                                  mt={0}
                                  theme={
                                    Object {
                                      "borders": Array [],
                                      "breakpoints": Object {
                                        "extraLarge": "1920px",
                                        "extraSmall": "0px",
                                        "large": "1360px",
                                        "medium": "1024px",
                                        "small": "768px",
                                      },
                                      "colors": Object {
                                        "black": "#011e38",
                                        "blackBlue": "#122b47",
                                        "blue": "#216beb",
                                        "darkBlue": "#00438f",
                                        "darkGrey": "#434d59",
                                        "green": "#008059",
                                        "grey": "#c0c8d1",
                                        "lightBlue": "#e1ebfa",
                                        "lightGreen": "#e9f7f2",
                                        "lightGrey": "#e4e7eb",
                                        "lightRed": "#fae6ea",
                                        "lightYellow": "#fcf5e3",
                                        "red": "#cc1439",
                                        "white": "#ffffff",
                                        "whiteGrey": "#f0f2f5",
                                        "yellow": "#ffbb00",
                                      },
                                      "fontSizes": Object {
                                        "large": "20px",
                                        "larger": "26px",
                                        "largest": "46px",
                                        "medium": "16px",
                                        "small": "14px",
                                        "smaller": "12px",
                                      },
                                      "fontWeights": Object {
                                        "bold": "600",
                                        "light": "300",
                                        "medium": "500",
                                        "normal": "400",
                                      },
                                      "fonts": Object {
                                        "base": "'IBM Plex Sans', sans-serif",
                                        "mono": "'IBM Plex Mono', monospace",
                                      },
                                      "lineHeights": Object {
                                        "base": "1.5",
                                        "sectionTitle": "1.23076923",
                                        "smallTextBase": "1.71428571",
                                        "smallTextCompressed": "1.14285714",
                                        "smallerText": "1.33333333",
                                        "subsectionTitle": "1.2",
                                        "title": "1.04347826",
                                      },
                                      "radii": Object {
                                        "circle": "50%",
                                        "medium": "4px",
                                        "small": "2px",
                                      },
                                      "shadows": Object {
                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                      },
                                      "space": Object {
                                        "half": "4px",
                                        "none": "0px",
                                        "x1": "8px",
                                        "x2": "16px",
                                        "x3": "24px",
                                        "x4": "32px",
                                        "x5": "40px",
                                        "x6": "48px",
                                        "x8": "64px",
                                      },
                                      "zIndex": Object {
                                        "content": 100,
                                        "overlay": 1000,
                                        "tabsBar": 210,
                                        "tabsScollIndicator": 200,
                                      },
                                    }
                                  }
                                >
                                  <h2
                                    className="sc-AykKH kVNmCt"
                                    fontSize="26px"
                                    fontWeight="500"
                                    id="modal-title"
                                  >
                                    Modal Title
                                  </h2>
                                </styled.h2>
                              </div>
                            </Modal__ModalHeader>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                Content Content Content
                              </div>
                            </Modal__ModalContent>
                            <Modal__ModalFooter>
                              <div
                                className="Modal__ModalFooter-cvhury-2 gnCyAa"
                              >
                                <ButtonGroup
                                  alignment="left"
                                >
                                  <div
                                    className="ButtonGroup-xkz195-0 jMubZv"
                                  >
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-AykKK fmyQGk"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-AykKK fmyQGk"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Add job to line
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-fzXfLP eLLQgR"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-fzXfLP eLLQgR"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Cancel
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                  </div>
                                </ButtonGroup>
                              </div>
                            </Modal__ModalFooter>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal example controlled modal 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <ModalExample>
            <div>
              <ForwardRef
                asLink={false}
                disabled={false}
                fullWidth={false}
                icon={null}
                iconSide="right"
                onClick={[Function]}
                size="medium"
              >
                <Button__WrapperButton
                  disabled={false}
                  fullWidth={false}
                  onClick={[Function]}
                  size="medium"
                >
                  <button
                    className="Button__WrapperButton-sc-1omxup2-0 kpKTNa"
                    disabled={false}
                    onClick={[Function]}
                    size="medium"
                  >
                    Open Modal
                  </button>
                </Button__WrapperButton>
              </ForwardRef>
              <Modal
                footerContent={
                  <ForwardRef(ButtonGroup)
                    alignment="left"
                  >
                    <ForwardRef(Styled(Component))
                      form="myForm"
                      type="submit"
                    >
                      Add job to line
                    </ForwardRef(Styled(Component))>
                    <ForwardRef(Styled(Component))
                      onClick={[Function]}
                    >
                      Cancel
                    </ForwardRef(Styled(Component))>
                  </ForwardRef(ButtonGroup)>
                }
                isOpen={false}
                maxWidth="456px"
                onRequestClose={[Function]}
                title="Edit Profile"
              >
                <Modal
                  ariaDescribedBy={null}
                  ariaHideApp={false}
                  ariaLabel={null}
                  footerContent={
                    <ForwardRef(ButtonGroup)
                      alignment="left"
                    >
                      <ForwardRef(Styled(Component))
                        form="myForm"
                        type="submit"
                      >
                        Add job to line
                      </ForwardRef(Styled(Component))>
                      <ForwardRef(Styled(Component))
                        onClick={[Function]}
                      >
                        Cancel
                      </ForwardRef(Styled(Component))>
                    </ForwardRef(ButtonGroup)>
                  }
                  isOpen={false}
                  maxWidth="456px"
                  onAfterOpen={null}
                  onRequestClose={[Function]}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  title="Edit Profile"
                >
                  <Styled(Modal)
                    aria={
                      Object {
                        "describedby": null,
                        "labelledby": "modal-title",
                      }
                    }
                    ariaHideApp={false}
                    contentLabel={null}
                    isOpen={false}
                    maxWidth="456px"
                    onAfterOpen={null}
                    onRequestClose={[Function]}
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                      Object {
                        "overlay": Object {
                          "alignItems": "center",
                          "backgroundColor": "rgba(18,43,71,0.5)",
                          "bottom": 0,
                          "display": "flex",
                          "justifyContent": "center",
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "zIndex": 1000,
                        },
                      }
                    }
                  >
                    <Modal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ elZbpy"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      isOpen={false}
                      maxWidth="456px"
                      onAfterOpen={null}
                      onRequestClose={[Function]}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <Portal
                        containerInfo={
                          <div
                            class="ReactModalPortal"
                          />
                        }
                      >
                        <ModalPortal
                          aria={
                            Object {
                              "describedby": null,
                              "labelledby": "modal-title",
                            }
                          }
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="sc-fzXfNJ elZbpy"
                          closeTimeoutMS={0}
                          contentLabel={null}
                          defaultStyles={
                            Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            }
                          }
                          isOpen={false}
                          maxWidth="456px"
                          onAfterOpen={null}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          role="dialog"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "overlay": Object {
                                "alignItems": "center",
                                "backgroundColor": "rgba(18,43,71,0.5)",
                                "bottom": 0,
                                "display": "flex",
                                "justifyContent": "center",
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                                "zIndex": 1000,
                              },
                            }
                          }
                        />
                      </Portal>
                    </Modal>
                  </Styled(Modal)>
                </Modal>
              </Modal>
            </div>
          </ModalExample>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal with close button 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            footerContent={
              <ForwardRef(ButtonGroup)
                alignment="left"
              >
                <ForwardRef(Styled(Component))>
                  Add job to line
                </ForwardRef(Styled(Component))>
                <ForwardRef(Styled(Component))>
                  Cancel
                </ForwardRef(Styled(Component))>
              </ForwardRef(ButtonGroup)>
            }
            onRequestClose={[Function]}
            title="Modal Title"
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={
                <ForwardRef(ButtonGroup)
                  alignment="left"
                >
                  <ForwardRef(Styled(Component))>
                    Add job to line
                  </ForwardRef(Styled(Component))>
                  <ForwardRef(Styled(Component))>
                    Cancel
                  </ForwardRef(Styled(Component))>
                </ForwardRef(ButtonGroup)>
              }
              isOpen={true}
              maxWidth="624px"
              onAfterOpen={null}
              onRequestClose={[Function]}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title="Modal Title"
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": "modal-title",
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="624px"
                onAfterOpen={null}
                onRequestClose={[Function]}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": "modal-title",
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ jeTher"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="624px"
                  onAfterOpen={null}
                  onRequestClose={[Function]}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            aria-labelledby="modal-title"
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalHeader-cvhury-1 exyldS"
                            >
                              <h2
                                class="sc-AykKH kVNmCt"
                                font-size="26px"
                                font-weight="500"
                                id="modal-title"
                              >
                                Modal Title
                              </h2>
                              <button
                                aria-label="close"
                                class="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="sc-AykKD kaUxeX"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="close"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  />
                                </svg>
                              </button>
                            </div>
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              Content Content Content
                            </div>
                            <div
                              class="Modal__ModalFooter-cvhury-2 gnCyAa"
                            >
                              <div
                                class="ButtonGroup-xkz195-0 jMubZv"
                              >
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                >
                                  Add job to line
                                </button>
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ jeTher"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="624px"
                      onAfterOpen={null}
                      onRequestClose={[Function]}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          aria-labelledby="modal-title"
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalHeader
                              hasCloseButton={[Function]}
                            >
                              <div
                                className="Modal__ModalHeader-cvhury-1 exyldS"
                              >
                                <styled.h2
                                  fontSize="26px"
                                  fontWeight="500"
                                  id="modal-title"
                                  lineHeight="1.23076923"
                                  mb="none"
                                  mt={0}
                                  theme={
                                    Object {
                                      "borders": Array [],
                                      "breakpoints": Object {
                                        "extraLarge": "1920px",
                                        "extraSmall": "0px",
                                        "large": "1360px",
                                        "medium": "1024px",
                                        "small": "768px",
                                      },
                                      "colors": Object {
                                        "black": "#011e38",
                                        "blackBlue": "#122b47",
                                        "blue": "#216beb",
                                        "darkBlue": "#00438f",
                                        "darkGrey": "#434d59",
                                        "green": "#008059",
                                        "grey": "#c0c8d1",
                                        "lightBlue": "#e1ebfa",
                                        "lightGreen": "#e9f7f2",
                                        "lightGrey": "#e4e7eb",
                                        "lightRed": "#fae6ea",
                                        "lightYellow": "#fcf5e3",
                                        "red": "#cc1439",
                                        "white": "#ffffff",
                                        "whiteGrey": "#f0f2f5",
                                        "yellow": "#ffbb00",
                                      },
                                      "fontSizes": Object {
                                        "large": "20px",
                                        "larger": "26px",
                                        "largest": "46px",
                                        "medium": "16px",
                                        "small": "14px",
                                        "smaller": "12px",
                                      },
                                      "fontWeights": Object {
                                        "bold": "600",
                                        "light": "300",
                                        "medium": "500",
                                        "normal": "400",
                                      },
                                      "fonts": Object {
                                        "base": "'IBM Plex Sans', sans-serif",
                                        "mono": "'IBM Plex Mono', monospace",
                                      },
                                      "lineHeights": Object {
                                        "base": "1.5",
                                        "sectionTitle": "1.23076923",
                                        "smallTextBase": "1.71428571",
                                        "smallTextCompressed": "1.14285714",
                                        "smallerText": "1.33333333",
                                        "subsectionTitle": "1.2",
                                        "title": "1.04347826",
                                      },
                                      "radii": Object {
                                        "circle": "50%",
                                        "medium": "4px",
                                        "small": "2px",
                                      },
                                      "shadows": Object {
                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                      },
                                      "space": Object {
                                        "half": "4px",
                                        "none": "0px",
                                        "x1": "8px",
                                        "x2": "16px",
                                        "x3": "24px",
                                        "x4": "32px",
                                        "x5": "40px",
                                        "x6": "48px",
                                        "x8": "64px",
                                      },
                                      "zIndex": Object {
                                        "content": 100,
                                        "overlay": 1000,
                                        "tabsBar": 210,
                                        "tabsScollIndicator": 200,
                                      },
                                    }
                                  }
                                >
                                  <h2
                                    className="sc-AykKH kVNmCt"
                                    fontSize="26px"
                                    fontWeight="500"
                                    id="modal-title"
                                  >
                                    Modal Title
                                  </h2>
                                </styled.h2>
                                <Styled(Styled(Component))
                                  onClick={[Function]}
                                >
                                  <ForwardRef
                                    className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                    onClick={[Function]}
                                  >
                                    <CloseButton__WrapperButton
                                      aria-label="close"
                                      className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="close"
                                        className="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                                        onClick={[Function]}
                                      >
                                        <Styled(Component)
                                          color="currentColor"
                                          icon="close"
                                          p="half"
                                          size="32px"
                                          title={null}
                                        >
                                          <ForwardRef
                                            className="sc-AykKD kaUxeX"
                                            color="currentColor"
                                            focusable={false}
                                            icon="close"
                                            p="half"
                                            size="32px"
                                            title={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="sc-AykKD kaUxeX"
                                              color="currentColor"
                                              fill="currentColor"
                                              focusable={false}
                                              height="32px"
                                              icon="close"
                                              p="half"
                                              size="32px"
                                              title={null}
                                              viewBox="0 0 24 24"
                                              width="32px"
                                            >
                                              <path
                                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                key="0"
                                              />
                                            </svg>
                                          </ForwardRef>
                                        </Styled(Component)>
                                      </button>
                                    </CloseButton__WrapperButton>
                                  </ForwardRef>
                                </Styled(Styled(Component))>
                              </div>
                            </Modal__ModalHeader>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                Content Content Content
                              </div>
                            </Modal__ModalContent>
                            <Modal__ModalFooter>
                              <div
                                className="Modal__ModalFooter-cvhury-2 gnCyAa"
                              >
                                <ButtonGroup
                                  alignment="left"
                                >
                                  <div
                                    className="ButtonGroup-xkz195-0 jMubZv"
                                  >
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-AykKK fmyQGk"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-AykKK fmyQGk"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Add job to line
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-fzXfLP eLLQgR"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-fzXfLP eLLQgR"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Cancel
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                  </div>
                                </ButtonGroup>
                              </div>
                            </Modal__ModalFooter>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal with custom maxWidth 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            footerContent={
              <ForwardRef(ButtonGroup)
                alignment="left"
              >
                <ForwardRef(Styled(Component))>
                  Add job to line
                </ForwardRef(Styled(Component))>
                <ForwardRef(Styled(Component))>
                  Cancel
                </ForwardRef(Styled(Component))>
              </ForwardRef(ButtonGroup)>
            }
            maxWidth="1000px"
            title="Modal Title"
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={
                <ForwardRef(ButtonGroup)
                  alignment="left"
                >
                  <ForwardRef(Styled(Component))>
                    Add job to line
                  </ForwardRef(Styled(Component))>
                  <ForwardRef(Styled(Component))>
                    Cancel
                  </ForwardRef(Styled(Component))>
                </ForwardRef(ButtonGroup)>
              }
              isOpen={true}
              maxWidth="1000px"
              onAfterOpen={null}
              onRequestClose={null}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title="Modal Title"
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": "modal-title",
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="1000px"
                onAfterOpen={null}
                onRequestClose={null}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": "modal-title",
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ eIVgCg"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="1000px"
                  onAfterOpen={null}
                  onRequestClose={null}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            aria-labelledby="modal-title"
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ eIVgCg"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalHeader-cvhury-1 cENoja"
                            >
                              <h2
                                class="sc-AykKH kVNmCt"
                                font-size="26px"
                                font-weight="500"
                                id="modal-title"
                              >
                                Modal Title
                              </h2>
                            </div>
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              Content Content Content
                            </div>
                            <div
                              class="Modal__ModalFooter-cvhury-2 gnCyAa"
                            >
                              <div
                                class="ButtonGroup-xkz195-0 jMubZv"
                              >
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                >
                                  Add job to line
                                </button>
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ eIVgCg"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="1000px"
                      onAfterOpen={null}
                      onRequestClose={null}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          aria-labelledby="modal-title"
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ eIVgCg"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalHeader
                              hasCloseButton={null}
                            >
                              <div
                                className="Modal__ModalHeader-cvhury-1 cENoja"
                              >
                                <styled.h2
                                  fontSize="26px"
                                  fontWeight="500"
                                  id="modal-title"
                                  lineHeight="1.23076923"
                                  mb="none"
                                  mt={0}
                                  theme={
                                    Object {
                                      "borders": Array [],
                                      "breakpoints": Object {
                                        "extraLarge": "1920px",
                                        "extraSmall": "0px",
                                        "large": "1360px",
                                        "medium": "1024px",
                                        "small": "768px",
                                      },
                                      "colors": Object {
                                        "black": "#011e38",
                                        "blackBlue": "#122b47",
                                        "blue": "#216beb",
                                        "darkBlue": "#00438f",
                                        "darkGrey": "#434d59",
                                        "green": "#008059",
                                        "grey": "#c0c8d1",
                                        "lightBlue": "#e1ebfa",
                                        "lightGreen": "#e9f7f2",
                                        "lightGrey": "#e4e7eb",
                                        "lightRed": "#fae6ea",
                                        "lightYellow": "#fcf5e3",
                                        "red": "#cc1439",
                                        "white": "#ffffff",
                                        "whiteGrey": "#f0f2f5",
                                        "yellow": "#ffbb00",
                                      },
                                      "fontSizes": Object {
                                        "large": "20px",
                                        "larger": "26px",
                                        "largest": "46px",
                                        "medium": "16px",
                                        "small": "14px",
                                        "smaller": "12px",
                                      },
                                      "fontWeights": Object {
                                        "bold": "600",
                                        "light": "300",
                                        "medium": "500",
                                        "normal": "400",
                                      },
                                      "fonts": Object {
                                        "base": "'IBM Plex Sans', sans-serif",
                                        "mono": "'IBM Plex Mono', monospace",
                                      },
                                      "lineHeights": Object {
                                        "base": "1.5",
                                        "sectionTitle": "1.23076923",
                                        "smallTextBase": "1.71428571",
                                        "smallTextCompressed": "1.14285714",
                                        "smallerText": "1.33333333",
                                        "subsectionTitle": "1.2",
                                        "title": "1.04347826",
                                      },
                                      "radii": Object {
                                        "circle": "50%",
                                        "medium": "4px",
                                        "small": "2px",
                                      },
                                      "shadows": Object {
                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                      },
                                      "space": Object {
                                        "half": "4px",
                                        "none": "0px",
                                        "x1": "8px",
                                        "x2": "16px",
                                        "x3": "24px",
                                        "x4": "32px",
                                        "x5": "40px",
                                        "x6": "48px",
                                        "x8": "64px",
                                      },
                                      "zIndex": Object {
                                        "content": 100,
                                        "overlay": 1000,
                                        "tabsBar": 210,
                                        "tabsScollIndicator": 200,
                                      },
                                    }
                                  }
                                >
                                  <h2
                                    className="sc-AykKH kVNmCt"
                                    fontSize="26px"
                                    fontWeight="500"
                                    id="modal-title"
                                  >
                                    Modal Title
                                  </h2>
                                </styled.h2>
                              </div>
                            </Modal__ModalHeader>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                Content Content Content
                              </div>
                            </Modal__ModalContent>
                            <Modal__ModalFooter>
                              <div
                                className="Modal__ModalFooter-cvhury-2 gnCyAa"
                              >
                                <ButtonGroup
                                  alignment="left"
                                >
                                  <div
                                    className="ButtonGroup-xkz195-0 jMubZv"
                                  >
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-AykKK fmyQGk"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-AykKK fmyQGk"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Add job to line
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-fzXfLP eLLQgR"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-fzXfLP eLLQgR"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Cancel
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                  </div>
                                </ButtonGroup>
                              </div>
                            </Modal__ModalFooter>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal with no footerContent 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            onRequestClose={[Function]}
            title="Without footerContent"
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={null}
              isOpen={true}
              maxWidth="624px"
              onAfterOpen={null}
              onRequestClose={[Function]}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title="Without footerContent"
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": "modal-title",
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="624px"
                onAfterOpen={null}
                onRequestClose={[Function]}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": "modal-title",
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ jeTher"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="624px"
                  onAfterOpen={null}
                  onRequestClose={[Function]}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            aria-labelledby="modal-title"
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalHeader-cvhury-1 exyldS"
                            >
                              <h2
                                class="sc-AykKH kVNmCt"
                                font-size="26px"
                                font-weight="500"
                                id="modal-title"
                              >
                                Without footerContent
                              </h2>
                              <button
                                aria-label="close"
                                class="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="sc-AykKD kaUxeX"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="close"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  />
                                </svg>
                              </button>
                            </div>
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              Content Content Content
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ jeTher"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="624px"
                      onAfterOpen={null}
                      onRequestClose={[Function]}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          aria-labelledby="modal-title"
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalHeader
                              hasCloseButton={[Function]}
                            >
                              <div
                                className="Modal__ModalHeader-cvhury-1 exyldS"
                              >
                                <styled.h2
                                  fontSize="26px"
                                  fontWeight="500"
                                  id="modal-title"
                                  lineHeight="1.23076923"
                                  mb="none"
                                  mt={0}
                                  theme={
                                    Object {
                                      "borders": Array [],
                                      "breakpoints": Object {
                                        "extraLarge": "1920px",
                                        "extraSmall": "0px",
                                        "large": "1360px",
                                        "medium": "1024px",
                                        "small": "768px",
                                      },
                                      "colors": Object {
                                        "black": "#011e38",
                                        "blackBlue": "#122b47",
                                        "blue": "#216beb",
                                        "darkBlue": "#00438f",
                                        "darkGrey": "#434d59",
                                        "green": "#008059",
                                        "grey": "#c0c8d1",
                                        "lightBlue": "#e1ebfa",
                                        "lightGreen": "#e9f7f2",
                                        "lightGrey": "#e4e7eb",
                                        "lightRed": "#fae6ea",
                                        "lightYellow": "#fcf5e3",
                                        "red": "#cc1439",
                                        "white": "#ffffff",
                                        "whiteGrey": "#f0f2f5",
                                        "yellow": "#ffbb00",
                                      },
                                      "fontSizes": Object {
                                        "large": "20px",
                                        "larger": "26px",
                                        "largest": "46px",
                                        "medium": "16px",
                                        "small": "14px",
                                        "smaller": "12px",
                                      },
                                      "fontWeights": Object {
                                        "bold": "600",
                                        "light": "300",
                                        "medium": "500",
                                        "normal": "400",
                                      },
                                      "fonts": Object {
                                        "base": "'IBM Plex Sans', sans-serif",
                                        "mono": "'IBM Plex Mono', monospace",
                                      },
                                      "lineHeights": Object {
                                        "base": "1.5",
                                        "sectionTitle": "1.23076923",
                                        "smallTextBase": "1.71428571",
                                        "smallTextCompressed": "1.14285714",
                                        "smallerText": "1.33333333",
                                        "subsectionTitle": "1.2",
                                        "title": "1.04347826",
                                      },
                                      "radii": Object {
                                        "circle": "50%",
                                        "medium": "4px",
                                        "small": "2px",
                                      },
                                      "shadows": Object {
                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                      },
                                      "space": Object {
                                        "half": "4px",
                                        "none": "0px",
                                        "x1": "8px",
                                        "x2": "16px",
                                        "x3": "24px",
                                        "x4": "32px",
                                        "x5": "40px",
                                        "x6": "48px",
                                        "x8": "64px",
                                      },
                                      "zIndex": Object {
                                        "content": 100,
                                        "overlay": 1000,
                                        "tabsBar": 210,
                                        "tabsScollIndicator": 200,
                                      },
                                    }
                                  }
                                >
                                  <h2
                                    className="sc-AykKH kVNmCt"
                                    fontSize="26px"
                                    fontWeight="500"
                                    id="modal-title"
                                  >
                                    Without footerContent
                                  </h2>
                                </styled.h2>
                                <Styled(Styled(Component))
                                  onClick={[Function]}
                                >
                                  <ForwardRef
                                    className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                    onClick={[Function]}
                                  >
                                    <CloseButton__WrapperButton
                                      aria-label="close"
                                      className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="close"
                                        className="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                                        onClick={[Function]}
                                      >
                                        <Styled(Component)
                                          color="currentColor"
                                          icon="close"
                                          p="half"
                                          size="32px"
                                          title={null}
                                        >
                                          <ForwardRef
                                            className="sc-AykKD kaUxeX"
                                            color="currentColor"
                                            focusable={false}
                                            icon="close"
                                            p="half"
                                            size="32px"
                                            title={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="sc-AykKD kaUxeX"
                                              color="currentColor"
                                              fill="currentColor"
                                              focusable={false}
                                              height="32px"
                                              icon="close"
                                              p="half"
                                              size="32px"
                                              title={null}
                                              viewBox="0 0 24 24"
                                              width="32px"
                                            >
                                              <path
                                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                key="0"
                                              />
                                            </svg>
                                          </ForwardRef>
                                        </Styled(Component)>
                                      </button>
                                    </CloseButton__WrapperButton>
                                  </ForwardRef>
                                </Styled(Styled(Component))>
                              </div>
                            </Modal__ModalHeader>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                Content Content Content
                              </div>
                            </Modal__ModalContent>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal with no title 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            footerContent={
              <ForwardRef(ButtonGroup)
                alignment="left"
              >
                <ForwardRef(Styled(Component))>
                  Add job to line
                </ForwardRef(Styled(Component))>
                <ForwardRef(Styled(Component))>
                  Cancel
                </ForwardRef(Styled(Component))>
              </ForwardRef(ButtonGroup)>
            }
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={
                <ForwardRef(ButtonGroup)
                  alignment="left"
                >
                  <ForwardRef(Styled(Component))>
                    Add job to line
                  </ForwardRef(Styled(Component))>
                  <ForwardRef(Styled(Component))>
                    Cancel
                  </ForwardRef(Styled(Component))>
                </ForwardRef(ButtonGroup)>
              }
              isOpen={true}
              maxWidth="624px"
              onAfterOpen={null}
              onRequestClose={null}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title={null}
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": undefined,
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="624px"
                onAfterOpen={null}
                onRequestClose={null}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": undefined,
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ jeTher"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="624px"
                  onAfterOpen={null}
                  onRequestClose={null}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              Content Content Content
                            </div>
                            <div
                              class="Modal__ModalFooter-cvhury-2 gnCyAa"
                            >
                              <div
                                class="ButtonGroup-xkz195-0 jMubZv"
                              >
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                >
                                  Add job to line
                                </button>
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": undefined,
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ jeTher"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="624px"
                      onAfterOpen={null}
                      onRequestClose={null}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                Content Content Content
                              </div>
                            </Modal__ModalContent>
                            <Modal__ModalFooter>
                              <div
                                className="Modal__ModalFooter-cvhury-2 gnCyAa"
                              >
                                <ButtonGroup
                                  alignment="left"
                                >
                                  <div
                                    className="ButtonGroup-xkz195-0 jMubZv"
                                  >
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-AykKK fmyQGk"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-AykKK fmyQGk"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Add job to line
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-fzXfLP eLLQgR"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-fzXfLP eLLQgR"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Cancel
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                  </div>
                                </ButtonGroup>
                              </div>
                            </Modal__ModalFooter>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal with scrolling content 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            footerContent={
              <ForwardRef(ButtonGroup)
                alignment="left"
              >
                <ForwardRef(Styled(Component))>
                  Add job to line
                </ForwardRef(Styled(Component))>
                <ForwardRef(Styled(Component))>
                  Cancel
                </ForwardRef(Styled(Component))>
              </ForwardRef(ButtonGroup)>
            }
            title="Modal Title"
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={
                <ForwardRef(ButtonGroup)
                  alignment="left"
                >
                  <ForwardRef(Styled(Component))>
                    Add job to line
                  </ForwardRef(Styled(Component))>
                  <ForwardRef(Styled(Component))>
                    Cancel
                  </ForwardRef(Styled(Component))>
                </ForwardRef(ButtonGroup)>
              }
              isOpen={true}
              maxWidth="624px"
              onAfterOpen={null}
              onRequestClose={null}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title="Modal Title"
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": "modal-title",
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="624px"
                onAfterOpen={null}
                onRequestClose={null}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": "modal-title",
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ jeTher"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="624px"
                  onAfterOpen={null}
                  onRequestClose={null}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            aria-labelledby="modal-title"
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalHeader-cvhury-1 cENoja"
                            >
                              <h2
                                class="sc-AykKH kVNmCt"
                                font-size="26px"
                                font-weight="500"
                                id="modal-title"
                              >
                                Modal Title
                              </h2>
                            </div>
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              <p
                                class="sc-AykKF jKbmDj"
                                color="currentColor"
                                font-size="16px"
                              >
                                Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content
                              </p>
                              <p
                                class="sc-AykKF jKbmDj"
                                color="currentColor"
                                font-size="16px"
                              >
                                Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content
                              </p>
                            </div>
                            <div
                              class="Modal__ModalFooter-cvhury-2 gnCyAa"
                            >
                              <div
                                class="ButtonGroup-xkz195-0 jMubZv"
                              >
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                >
                                  Add job to line
                                </button>
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ jeTher"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="624px"
                      onAfterOpen={null}
                      onRequestClose={null}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          aria-labelledby="modal-title"
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ jeTher"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalHeader
                              hasCloseButton={null}
                            >
                              <div
                                className="Modal__ModalHeader-cvhury-1 cENoja"
                              >
                                <styled.h2
                                  fontSize="26px"
                                  fontWeight="500"
                                  id="modal-title"
                                  lineHeight="1.23076923"
                                  mb="none"
                                  mt={0}
                                  theme={
                                    Object {
                                      "borders": Array [],
                                      "breakpoints": Object {
                                        "extraLarge": "1920px",
                                        "extraSmall": "0px",
                                        "large": "1360px",
                                        "medium": "1024px",
                                        "small": "768px",
                                      },
                                      "colors": Object {
                                        "black": "#011e38",
                                        "blackBlue": "#122b47",
                                        "blue": "#216beb",
                                        "darkBlue": "#00438f",
                                        "darkGrey": "#434d59",
                                        "green": "#008059",
                                        "grey": "#c0c8d1",
                                        "lightBlue": "#e1ebfa",
                                        "lightGreen": "#e9f7f2",
                                        "lightGrey": "#e4e7eb",
                                        "lightRed": "#fae6ea",
                                        "lightYellow": "#fcf5e3",
                                        "red": "#cc1439",
                                        "white": "#ffffff",
                                        "whiteGrey": "#f0f2f5",
                                        "yellow": "#ffbb00",
                                      },
                                      "fontSizes": Object {
                                        "large": "20px",
                                        "larger": "26px",
                                        "largest": "46px",
                                        "medium": "16px",
                                        "small": "14px",
                                        "smaller": "12px",
                                      },
                                      "fontWeights": Object {
                                        "bold": "600",
                                        "light": "300",
                                        "medium": "500",
                                        "normal": "400",
                                      },
                                      "fonts": Object {
                                        "base": "'IBM Plex Sans', sans-serif",
                                        "mono": "'IBM Plex Mono', monospace",
                                      },
                                      "lineHeights": Object {
                                        "base": "1.5",
                                        "sectionTitle": "1.23076923",
                                        "smallTextBase": "1.71428571",
                                        "smallTextCompressed": "1.14285714",
                                        "smallerText": "1.33333333",
                                        "subsectionTitle": "1.2",
                                        "title": "1.04347826",
                                      },
                                      "radii": Object {
                                        "circle": "50%",
                                        "medium": "4px",
                                        "small": "2px",
                                      },
                                      "shadows": Object {
                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                      },
                                      "space": Object {
                                        "half": "4px",
                                        "none": "0px",
                                        "x1": "8px",
                                        "x2": "16px",
                                        "x3": "24px",
                                        "x4": "32px",
                                        "x5": "40px",
                                        "x6": "48px",
                                        "x8": "64px",
                                      },
                                      "zIndex": Object {
                                        "content": 100,
                                        "overlay": 1000,
                                        "tabsBar": 210,
                                        "tabsScollIndicator": 200,
                                      },
                                    }
                                  }
                                >
                                  <h2
                                    className="sc-AykKH kVNmCt"
                                    fontSize="26px"
                                    fontWeight="500"
                                    id="modal-title"
                                  >
                                    Modal Title
                                  </h2>
                                </styled.h2>
                              </div>
                            </Modal__ModalHeader>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                <styled.p
                                  color="currentColor"
                                  disabled={false}
                                  fontSize="16px"
                                  inline={false}
                                  lineHeight="1.5"
                                  mb={0}
                                  mt={0}
                                >
                                  <p
                                    className="sc-AykKF jKbmDj"
                                    color="currentColor"
                                    disabled={false}
                                    fontSize="16px"
                                  >
                                    Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content
                                  </p>
                                </styled.p>
                                <styled.p
                                  color="currentColor"
                                  disabled={false}
                                  fontSize="16px"
                                  inline={false}
                                  lineHeight="1.5"
                                  mb={0}
                                  mt={0}
                                >
                                  <p
                                    className="sc-AykKF jKbmDj"
                                    color="currentColor"
                                    disabled={false}
                                    fontSize="16px"
                                  >
                                    Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content Content
                                  </p>
                                </styled.p>
                              </div>
                            </Modal__ModalContent>
                            <Modal__ModalFooter>
                              <div
                                className="Modal__ModalFooter-cvhury-2 gnCyAa"
                              >
                                <ButtonGroup
                                  alignment="left"
                                >
                                  <div
                                    className="ButtonGroup-xkz195-0 jMubZv"
                                  >
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-AykKK fmyQGk"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-AykKK fmyQGk"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Add job to line
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-fzXfLP eLLQgR"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-fzXfLP eLLQgR"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Cancel
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                  </div>
                                </ButtonGroup>
                              </div>
                            </Modal__ModalFooter>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal with select 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            footerContent={
              <ForwardRef(ButtonGroup)
                alignment="left"
              >
                <ForwardRef(Styled(Component))>
                  Add job to line
                </ForwardRef(Styled(Component))>
                <ForwardRef(Styled(Component))>
                  Cancel
                </ForwardRef(Styled(Component))>
              </ForwardRef(ButtonGroup)>
            }
            maxWidth="456px"
            onRequestClose={[Function]}
            title="Edit Profile"
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={
                <ForwardRef(ButtonGroup)
                  alignment="left"
                >
                  <ForwardRef(Styled(Component))>
                    Add job to line
                  </ForwardRef(Styled(Component))>
                  <ForwardRef(Styled(Component))>
                    Cancel
                  </ForwardRef(Styled(Component))>
                </ForwardRef(ButtonGroup)>
              }
              isOpen={true}
              maxWidth="456px"
              onAfterOpen={null}
              onRequestClose={[Function]}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title="Edit Profile"
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": "modal-title",
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="456px"
                onAfterOpen={null}
                onRequestClose={[Function]}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": "modal-title",
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ elZbpy"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="456px"
                  onAfterOpen={null}
                  onRequestClose={[Function]}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            aria-labelledby="modal-title"
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ elZbpy"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalHeader-cvhury-1 exyldS"
                            >
                              <h2
                                class="sc-AykKH kVNmCt"
                                font-size="26px"
                                font-weight="500"
                                id="modal-title"
                              >
                                Edit Profile
                              </h2>
                              <button
                                aria-label="close"
                                class="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="sc-AykKD kaUxeX"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="close"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  />
                                </svg>
                              </button>
                            </div>
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              <form
                                class="sc-fzXfMx kHiXQz"
                                id="myForm"
                                mb="x2"
                              >
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Inventory status
                                      </span>
                                    </div>
                                    <div
                                      class=" css-2b097c-container"
                                    >
                                      <div
                                        class=" css-1liu8yu-Control"
                                      >
                                        <div
                                          class=" css-7zc8my"
                                        >
                                          <div
                                            class=" css-1yhx6vz-Placeholder"
                                          >
                                            Please select inventory status
                                          </div>
                                          <div
                                            class="css-17yls17-Input"
                                          >
                                            <div
                                              class=""
                                              style="display: inline-block;"
                                            >
                                              <input
                                                aria-autocomplete="list"
                                                autocapitalize="none"
                                                autocomplete="off"
                                                autocorrect="off"
                                                id="react-select-11-input"
                                                spellcheck="false"
                                                style="box-sizing: content-box; width: 2px; border: 0px; font-size: inherit; opacity: 1; outline: 0; padding: 0px;"
                                                tabindex="0"
                                                type="text"
                                                value=""
                                              />
                                              <div
                                                style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-size: inherit; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                                              />
                                            </div>
                                          </div>
                                        </div>
                                        <div
                                          class=" css-1hb7zxy-IndicatorsContainer"
                                        >
                                          <span
                                            class=" css-43ykx9-indicatorSeparator"
                                          />
                                          <div
                                            aria-hidden="true"
                                            class=" css-1fi275-indicatorContainer"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="css-6q0nyr-Svg"
                                              focusable="false"
                                              height="20"
                                              viewBox="0 0 20 20"
                                              width="20"
                                            >
                                              <path
                                                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                              />
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </label>
                                </div>
                              </form>
                            </div>
                            <div
                              class="Modal__ModalFooter-cvhury-2 gnCyAa"
                            >
                              <div
                                class="ButtonGroup-xkz195-0 jMubZv"
                              >
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                >
                                  Add job to line
                                </button>
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ elZbpy"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="456px"
                      onAfterOpen={null}
                      onRequestClose={[Function]}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          aria-labelledby="modal-title"
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ elZbpy"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalHeader
                              hasCloseButton={[Function]}
                            >
                              <div
                                className="Modal__ModalHeader-cvhury-1 exyldS"
                              >
                                <styled.h2
                                  fontSize="26px"
                                  fontWeight="500"
                                  id="modal-title"
                                  lineHeight="1.23076923"
                                  mb="none"
                                  mt={0}
                                  theme={
                                    Object {
                                      "borders": Array [],
                                      "breakpoints": Object {
                                        "extraLarge": "1920px",
                                        "extraSmall": "0px",
                                        "large": "1360px",
                                        "medium": "1024px",
                                        "small": "768px",
                                      },
                                      "colors": Object {
                                        "black": "#011e38",
                                        "blackBlue": "#122b47",
                                        "blue": "#216beb",
                                        "darkBlue": "#00438f",
                                        "darkGrey": "#434d59",
                                        "green": "#008059",
                                        "grey": "#c0c8d1",
                                        "lightBlue": "#e1ebfa",
                                        "lightGreen": "#e9f7f2",
                                        "lightGrey": "#e4e7eb",
                                        "lightRed": "#fae6ea",
                                        "lightYellow": "#fcf5e3",
                                        "red": "#cc1439",
                                        "white": "#ffffff",
                                        "whiteGrey": "#f0f2f5",
                                        "yellow": "#ffbb00",
                                      },
                                      "fontSizes": Object {
                                        "large": "20px",
                                        "larger": "26px",
                                        "largest": "46px",
                                        "medium": "16px",
                                        "small": "14px",
                                        "smaller": "12px",
                                      },
                                      "fontWeights": Object {
                                        "bold": "600",
                                        "light": "300",
                                        "medium": "500",
                                        "normal": "400",
                                      },
                                      "fonts": Object {
                                        "base": "'IBM Plex Sans', sans-serif",
                                        "mono": "'IBM Plex Mono', monospace",
                                      },
                                      "lineHeights": Object {
                                        "base": "1.5",
                                        "sectionTitle": "1.23076923",
                                        "smallTextBase": "1.71428571",
                                        "smallTextCompressed": "1.14285714",
                                        "smallerText": "1.33333333",
                                        "subsectionTitle": "1.2",
                                        "title": "1.04347826",
                                      },
                                      "radii": Object {
                                        "circle": "50%",
                                        "medium": "4px",
                                        "small": "2px",
                                      },
                                      "shadows": Object {
                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                      },
                                      "space": Object {
                                        "half": "4px",
                                        "none": "0px",
                                        "x1": "8px",
                                        "x2": "16px",
                                        "x3": "24px",
                                        "x4": "32px",
                                        "x5": "40px",
                                        "x6": "48px",
                                        "x8": "64px",
                                      },
                                      "zIndex": Object {
                                        "content": 100,
                                        "overlay": 1000,
                                        "tabsBar": 210,
                                        "tabsScollIndicator": 200,
                                      },
                                    }
                                  }
                                >
                                  <h2
                                    className="sc-AykKH kVNmCt"
                                    fontSize="26px"
                                    fontWeight="500"
                                    id="modal-title"
                                  >
                                    Edit Profile
                                  </h2>
                                </styled.h2>
                                <Styled(Styled(Component))
                                  onClick={[Function]}
                                >
                                  <ForwardRef
                                    className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                    onClick={[Function]}
                                  >
                                    <CloseButton__WrapperButton
                                      aria-label="close"
                                      className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="close"
                                        className="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                                        onClick={[Function]}
                                      >
                                        <Styled(Component)
                                          color="currentColor"
                                          icon="close"
                                          p="half"
                                          size="32px"
                                          title={null}
                                        >
                                          <ForwardRef
                                            className="sc-AykKD kaUxeX"
                                            color="currentColor"
                                            focusable={false}
                                            icon="close"
                                            p="half"
                                            size="32px"
                                            title={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="sc-AykKD kaUxeX"
                                              color="currentColor"
                                              fill="currentColor"
                                              focusable={false}
                                              height="32px"
                                              icon="close"
                                              p="half"
                                              size="32px"
                                              title={null}
                                              viewBox="0 0 24 24"
                                              width="32px"
                                            >
                                              <path
                                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                key="0"
                                              />
                                            </svg>
                                          </ForwardRef>
                                        </Styled(Component)>
                                      </button>
                                    </CloseButton__WrapperButton>
                                  </ForwardRef>
                                </Styled(Styled(Component))>
                              </div>
                            </Modal__ModalHeader>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                <Styled(BaseForm)
                                  id="myForm"
                                  mb="x2"
                                >
                                  <BaseForm
                                    className="sc-fzXfMx kHiXQz"
                                    id="myForm"
                                    mb="x2"
                                    title={null}
                                  >
                                    <form
                                      className="sc-fzXfMx kHiXQz"
                                      id="myForm"
                                      mb="x2"
                                    >
                                      <ReactSelect
                                        autocomplete={true}
                                        className={null}
                                        disabled={null}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id={null}
                                        labelText="Inventory status"
                                        maxHeight="96px"
                                        menuPosition="absolute"
                                        multiselect={false}
                                        noOptionsMessage={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "Accepted",
                                              "value": "accepted",
                                            },
                                            Object {
                                              "label": "Assigned to a line",
                                              "value": "assigned",
                                            },
                                            Object {
                                              "label": "On hold",
                                              "value": "hold",
                                            },
                                            Object {
                                              "label": "Rejected",
                                              "value": "rejected",
                                            },
                                            Object {
                                              "label": "Open",
                                              "value": "open",
                                            },
                                            Object {
                                              "label": "In progress",
                                              "value": "progress",
                                            },
                                            Object {
                                              "label": "In quarantine",
                                              "value": "quarantine",
                                            },
                                          ]
                                        }
                                        placeholder="Please select inventory status"
                                        required={false}
                                        requirementText={null}
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <MaybeFieldLabel
                                              helpText={null}
                                              labelText="Inventory status"
                                              requirementText={null}
                                            >
                                              <Styled(BaseFieldLabel)
                                                helpText={null}
                                                labelText="Inventory status"
                                                requirementText={null}
                                              >
                                                <BaseFieldLabel
                                                  className="sc-fzXfLW casIUc"
                                                  helpText={null}
                                                  labelText="Inventory status"
                                                  requirementText={null}
                                                >
                                                  <FieldLabel__Label
                                                    className="sc-fzXfLW casIUc"
                                                    color="#011e38"
                                                    style={
                                                      Object {
                                                        "display": "block",
                                                      }
                                                    }
                                                  >
                                                    <label
                                                      className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <Box
                                                        mb="x1"
                                                        theme={
                                                          Object {
                                                            "borders": Array [],
                                                            "breakpoints": Object {
                                                              "extraLarge": "1920px",
                                                              "extraSmall": "0px",
                                                              "large": "1360px",
                                                              "medium": "1024px",
                                                              "small": "768px",
                                                            },
                                                            "colors": Object {
                                                              "black": "#011e38",
                                                              "blackBlue": "#122b47",
                                                              "blue": "#216beb",
                                                              "darkBlue": "#00438f",
                                                              "darkGrey": "#434d59",
                                                              "green": "#008059",
                                                              "grey": "#c0c8d1",
                                                              "lightBlue": "#e1ebfa",
                                                              "lightGreen": "#e9f7f2",
                                                              "lightGrey": "#e4e7eb",
                                                              "lightRed": "#fae6ea",
                                                              "lightYellow": "#fcf5e3",
                                                              "red": "#cc1439",
                                                              "white": "#ffffff",
                                                              "whiteGrey": "#f0f2f5",
                                                              "yellow": "#ffbb00",
                                                            },
                                                            "fontSizes": Object {
                                                              "large": "20px",
                                                              "larger": "26px",
                                                              "largest": "46px",
                                                              "medium": "16px",
                                                              "small": "14px",
                                                              "smaller": "12px",
                                                            },
                                                            "fontWeights": Object {
                                                              "bold": "600",
                                                              "light": "300",
                                                              "medium": "500",
                                                              "normal": "400",
                                                            },
                                                            "fonts": Object {
                                                              "base": "'IBM Plex Sans', sans-serif",
                                                              "mono": "'IBM Plex Mono', monospace",
                                                            },
                                                            "lineHeights": Object {
                                                              "base": "1.5",
                                                              "sectionTitle": "1.23076923",
                                                              "smallTextBase": "1.71428571",
                                                              "smallTextCompressed": "1.14285714",
                                                              "smallerText": "1.33333333",
                                                              "subsectionTitle": "1.2",
                                                              "title": "1.04347826",
                                                            },
                                                            "radii": Object {
                                                              "circle": "50%",
                                                              "medium": "4px",
                                                              "small": "2px",
                                                            },
                                                            "shadows": Object {
                                                              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                            },
                                                            "space": Object {
                                                              "half": "4px",
                                                              "none": "0px",
                                                              "x1": "8px",
                                                              "x2": "16px",
                                                              "x3": "24px",
                                                              "x4": "32px",
                                                              "x5": "40px",
                                                              "x6": "48px",
                                                              "x8": "64px",
                                                            },
                                                            "zIndex": Object {
                                                              "content": 100,
                                                              "overlay": 1000,
                                                              "tabsBar": 210,
                                                              "tabsScollIndicator": 200,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="Box-sc-1qu1edy-0 iPmvAN"
                                                        >
                                                          <span
                                                            style={
                                                              Object {
                                                                "fontSize": "14px",
                                                                "fontWeight": "600",
                                                                "lineHeight": "1.71428571",
                                                              }
                                                            }
                                                          >
                                                            Inventory status
                                                          </span>
                                                        </div>
                                                      </Box>
                                                      <StateManager
                                                        aria-invalid={false}
                                                        aria-required={false}
                                                        className={null}
                                                        components={
                                                          Object {
                                                            "Control": [Function],
                                                            "Option": [Function],
                                                          }
                                                        }
                                                        defaultInputValue=""
                                                        defaultMenuIsOpen={false}
                                                        defaultValue={null}
                                                        inputId={null}
                                                        isDisabled={null}
                                                        isMulti={false}
                                                        isSearchable={true}
                                                        labelText="Inventory status"
                                                        maxMenuHeight="96px"
                                                        menuPosition="absolute"
                                                        noOptionsMessage={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "Accepted",
                                                              "value": "accepted",
                                                            },
                                                            Object {
                                                              "label": "Assigned to a line",
                                                              "value": "assigned",
                                                            },
                                                            Object {
                                                              "label": "On hold",
                                                              "value": "hold",
                                                            },
                                                            Object {
                                                              "label": "Rejected",
                                                              "value": "rejected",
                                                            },
                                                            Object {
                                                              "label": "Open",
                                                              "value": "open",
                                                            },
                                                            Object {
                                                              "label": "In progress",
                                                              "value": "progress",
                                                            },
                                                            Object {
                                                              "label": "In quarantine",
                                                              "value": "quarantine",
                                                            },
                                                          ]
                                                        }
                                                        placeholder="Please select inventory status"
                                                        styles={
                                                          Object {
                                                            "control": [Function],
                                                            "dropdownIndicator": [Function],
                                                            "indicatorSeparator": [Function],
                                                            "input": [Function],
                                                            "menu": [Function],
                                                            "menuList": [Function],
                                                            "multiValue": [Function],
                                                            "multiValueLabel": [Function],
                                                            "multiValueRemove": [Function],
                                                            "noOptionsMessage": [Function],
                                                            "option": [Function],
                                                            "placeholder": [Function],
                                                            "valueContainer": [Function],
                                                          }
                                                        }
                                                      >
                                                        <Select
                                                          aria-invalid={false}
                                                          aria-required={false}
                                                          backspaceRemovesValue={true}
                                                          blurInputOnSelect={true}
                                                          captureMenuScroll={false}
                                                          className={null}
                                                          closeMenuOnScroll={false}
                                                          closeMenuOnSelect={true}
                                                          components={
                                                            Object {
                                                              "Control": [Function],
                                                              "Option": [Function],
                                                            }
                                                          }
                                                          controlShouldRenderValue={true}
                                                          escapeClearsValue={false}
                                                          filterOption={[Function]}
                                                          formatGroupLabel={[Function]}
                                                          getOptionLabel={[Function]}
                                                          getOptionValue={[Function]}
                                                          inputId={null}
                                                          inputValue=""
                                                          isDisabled={null}
                                                          isLoading={false}
                                                          isMulti={false}
                                                          isOptionDisabled={[Function]}
                                                          isRtl={false}
                                                          isSearchable={true}
                                                          labelText="Inventory status"
                                                          loadingMessage={[Function]}
                                                          maxMenuHeight="96px"
                                                          menuIsOpen={false}
                                                          menuPlacement="bottom"
                                                          menuPosition="absolute"
                                                          menuShouldBlockScroll={false}
                                                          menuShouldScrollIntoView={true}
                                                          minMenuHeight={140}
                                                          noOptionsMessage={[Function]}
                                                          onChange={[Function]}
                                                          onInputChange={[Function]}
                                                          onMenuClose={[Function]}
                                                          onMenuOpen={[Function]}
                                                          openMenuOnClick={true}
                                                          openMenuOnFocus={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "label": "Accepted",
                                                                "value": "accepted",
                                                              },
                                                              Object {
                                                                "label": "Assigned to a line",
                                                                "value": "assigned",
                                                              },
                                                              Object {
                                                                "label": "On hold",
                                                                "value": "hold",
                                                              },
                                                              Object {
                                                                "label": "Rejected",
                                                                "value": "rejected",
                                                              },
                                                              Object {
                                                                "label": "Open",
                                                                "value": "open",
                                                              },
                                                              Object {
                                                                "label": "In progress",
                                                                "value": "progress",
                                                              },
                                                              Object {
                                                                "label": "In quarantine",
                                                                "value": "quarantine",
                                                              },
                                                            ]
                                                          }
                                                          pageSize={5}
                                                          placeholder="Please select inventory status"
                                                          screenReaderStatus={[Function]}
                                                          styles={
                                                            Object {
                                                              "control": [Function],
                                                              "dropdownIndicator": [Function],
                                                              "indicatorSeparator": [Function],
                                                              "input": [Function],
                                                              "menu": [Function],
                                                              "menuList": [Function],
                                                              "multiValue": [Function],
                                                              "multiValueLabel": [Function],
                                                              "multiValueRemove": [Function],
                                                              "noOptionsMessage": [Function],
                                                              "option": [Function],
                                                              "placeholder": [Function],
                                                              "valueContainer": [Function],
                                                            }
                                                          }
                                                          tabIndex="0"
                                                          tabSelectsValue={true}
                                                          value={null}
                                                        >
                                                          <SelectContainer
                                                            className={null}
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            innerProps={
                                                              Object {
                                                                "id": undefined,
                                                                "onKeyDown": [Function],
                                                              }
                                                            }
                                                            isDisabled={null}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "label": "Accepted",
                                                                  "value": "accepted",
                                                                },
                                                                Object {
                                                                  "label": "Assigned to a line",
                                                                  "value": "assigned",
                                                                },
                                                                Object {
                                                                  "label": "On hold",
                                                                  "value": "hold",
                                                                },
                                                                Object {
                                                                  "label": "Rejected",
                                                                  "value": "rejected",
                                                                },
                                                                Object {
                                                                  "label": "Open",
                                                                  "value": "open",
                                                                },
                                                                Object {
                                                                  "label": "In progress",
                                                                  "value": "progress",
                                                                },
                                                                Object {
                                                                  "label": "In quarantine",
                                                                  "value": "quarantine",
                                                                },
                                                              ]
                                                            }
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "aria-invalid": false,
                                                                "aria-required": false,
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "captureMenuScroll": false,
                                                                "className": null,
                                                                "classNamePrefix": undefined,
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "Control": [Function],
                                                                  "Option": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "escapeClearsValue": false,
                                                                "filterOption": [Function],
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputId": null,
                                                                "inputValue": "",
                                                                "isDisabled": null,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "labelText": "Inventory status",
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": "96px",
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": undefined,
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": undefined,
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [
                                                                  Object {
                                                                    "label": "Accepted",
                                                                    "value": "accepted",
                                                                  },
                                                                  Object {
                                                                    "label": "Assigned to a line",
                                                                    "value": "assigned",
                                                                  },
                                                                  Object {
                                                                    "label": "On hold",
                                                                    "value": "hold",
                                                                  },
                                                                  Object {
                                                                    "label": "Rejected",
                                                                    "value": "rejected",
                                                                  },
                                                                  Object {
                                                                    "label": "Open",
                                                                    "value": "open",
                                                                  },
                                                                  Object {
                                                                    "label": "In progress",
                                                                    "value": "progress",
                                                                  },
                                                                  Object {
                                                                    "label": "In quarantine",
                                                                    "value": "quarantine",
                                                                  },
                                                                ],
                                                                "pageSize": 5,
                                                                "placeholder": "Please select inventory status",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "dropdownIndicator": [Function],
                                                                  "indicatorSeparator": [Function],
                                                                  "input": [Function],
                                                                  "menu": [Function],
                                                                  "menuList": [Function],
                                                                  "multiValue": [Function],
                                                                  "multiValueLabel": [Function],
                                                                  "multiValueRemove": [Function],
                                                                  "noOptionsMessage": [Function],
                                                                  "option": [Function],
                                                                  "placeholder": [Function],
                                                                  "valueContainer": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": null,
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <EmotionCssPropInternal
                                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                              className=""
                                                              css={
                                                                Object {
                                                                  "boxSizing": "border-box",
                                                                  "direction": null,
                                                                  "label": "container",
                                                                  "pointerEvents": null,
                                                                  "position": "relative",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                            >
                                                              <div
                                                                className=" css-2b097c-container"
                                                                onKeyDown={[Function]}
                                                              >
                                                                <Control
                                                                  clearValue={[Function]}
                                                                  cx={[Function]}
                                                                  getStyles={[Function]}
                                                                  getValue={[Function]}
                                                                  hasValue={false}
                                                                  innerProps={
                                                                    Object {
                                                                      "onMouseDown": [Function],
                                                                      "onTouchEnd": [Function],
                                                                    }
                                                                  }
                                                                  innerRef={[Function]}
                                                                  isDisabled={null}
                                                                  isFocused={false}
                                                                  isMulti={false}
                                                                  isRtl={false}
                                                                  menuIsOpen={false}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Accepted",
                                                                        "value": "accepted",
                                                                      },
                                                                      Object {
                                                                        "label": "Assigned to a line",
                                                                        "value": "assigned",
                                                                      },
                                                                      Object {
                                                                        "label": "On hold",
                                                                        "value": "hold",
                                                                      },
                                                                      Object {
                                                                        "label": "Rejected",
                                                                        "value": "rejected",
                                                                      },
                                                                      Object {
                                                                        "label": "Open",
                                                                        "value": "open",
                                                                      },
                                                                      Object {
                                                                        "label": "In progress",
                                                                        "value": "progress",
                                                                      },
                                                                      Object {
                                                                        "label": "In quarantine",
                                                                        "value": "quarantine",
                                                                      },
                                                                    ]
                                                                  }
                                                                  selectOption={[Function]}
                                                                  selectProps={
                                                                    Object {
                                                                      "aria-invalid": false,
                                                                      "aria-required": false,
                                                                      "backspaceRemovesValue": true,
                                                                      "blurInputOnSelect": true,
                                                                      "captureMenuScroll": false,
                                                                      "className": null,
                                                                      "classNamePrefix": undefined,
                                                                      "closeMenuOnScroll": false,
                                                                      "closeMenuOnSelect": true,
                                                                      "components": Object {
                                                                        "Control": [Function],
                                                                        "Option": [Function],
                                                                      },
                                                                      "controlShouldRenderValue": true,
                                                                      "escapeClearsValue": false,
                                                                      "filterOption": [Function],
                                                                      "formatGroupLabel": [Function],
                                                                      "getOptionLabel": [Function],
                                                                      "getOptionValue": [Function],
                                                                      "inputId": null,
                                                                      "inputValue": "",
                                                                      "isDisabled": null,
                                                                      "isLoading": false,
                                                                      "isMulti": false,
                                                                      "isOptionDisabled": [Function],
                                                                      "isRtl": false,
                                                                      "isSearchable": true,
                                                                      "labelText": "Inventory status",
                                                                      "loadingMessage": [Function],
                                                                      "maxMenuHeight": "96px",
                                                                      "menuIsOpen": false,
                                                                      "menuPlacement": "bottom",
                                                                      "menuPosition": "absolute",
                                                                      "menuShouldBlockScroll": false,
                                                                      "menuShouldScrollIntoView": true,
                                                                      "minMenuHeight": 140,
                                                                      "name": undefined,
                                                                      "noOptionsMessage": [Function],
                                                                      "onBlur": undefined,
                                                                      "onChange": [Function],
                                                                      "onInputChange": [Function],
                                                                      "onMenuClose": [Function],
                                                                      "onMenuOpen": [Function],
                                                                      "openMenuOnClick": true,
                                                                      "openMenuOnFocus": false,
                                                                      "options": Array [
                                                                        Object {
                                                                          "label": "Accepted",
                                                                          "value": "accepted",
                                                                        },
                                                                        Object {
                                                                          "label": "Assigned to a line",
                                                                          "value": "assigned",
                                                                        },
                                                                        Object {
                                                                          "label": "On hold",
                                                                          "value": "hold",
                                                                        },
                                                                        Object {
                                                                          "label": "Rejected",
                                                                          "value": "rejected",
                                                                        },
                                                                        Object {
                                                                          "label": "Open",
                                                                          "value": "open",
                                                                        },
                                                                        Object {
                                                                          "label": "In progress",
                                                                          "value": "progress",
                                                                        },
                                                                        Object {
                                                                          "label": "In quarantine",
                                                                          "value": "quarantine",
                                                                        },
                                                                      ],
                                                                      "pageSize": 5,
                                                                      "placeholder": "Please select inventory status",
                                                                      "screenReaderStatus": [Function],
                                                                      "styles": Object {
                                                                        "control": [Function],
                                                                        "dropdownIndicator": [Function],
                                                                        "indicatorSeparator": [Function],
                                                                        "input": [Function],
                                                                        "menu": [Function],
                                                                        "menuList": [Function],
                                                                        "multiValue": [Function],
                                                                        "multiValueLabel": [Function],
                                                                        "multiValueRemove": [Function],
                                                                        "noOptionsMessage": [Function],
                                                                        "option": [Function],
                                                                        "placeholder": [Function],
                                                                        "valueContainer": [Function],
                                                                      },
                                                                      "tabIndex": "0",
                                                                      "tabSelectsValue": true,
                                                                      "value": null,
                                                                    }
                                                                  }
                                                                  setValue={[Function]}
                                                                  theme={
                                                                    Object {
                                                                      "borderRadius": 4,
                                                                      "colors": Object {
                                                                        "danger": "#DE350B",
                                                                        "dangerLight": "#FFBDAD",
                                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                                        "primary": "#2684FF",
                                                                        "primary25": "#DEEBFF",
                                                                        "primary50": "#B2D4FF",
                                                                        "primary75": "#4C9AFF",
                                                                      },
                                                                      "spacing": Object {
                                                                        "baseUnit": 4,
                                                                        "controlHeight": 38,
                                                                        "menuGutter": 8,
                                                                      },
                                                                    }
                                                                  }
                                                                >
                                                                  <Control
                                                                    className={null}
                                                                    clearValue={[Function]}
                                                                    cx={[Function]}
                                                                    getStyles={[Function]}
                                                                    getValue={[Function]}
                                                                    hasValue={false}
                                                                    innerProps={
                                                                      Object {
                                                                        "onMouseDown": [Function],
                                                                        "onTouchEnd": [Function],
                                                                      }
                                                                    }
                                                                    innerRef={[Function]}
                                                                    isDisabled={null}
                                                                    isFocused={false}
                                                                    isMulti={false}
                                                                    isRtl={false}
                                                                    menuIsOpen={false}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Accepted",
                                                                          "value": "accepted",
                                                                        },
                                                                        Object {
                                                                          "label": "Assigned to a line",
                                                                          "value": "assigned",
                                                                        },
                                                                        Object {
                                                                          "label": "On hold",
                                                                          "value": "hold",
                                                                        },
                                                                        Object {
                                                                          "label": "Rejected",
                                                                          "value": "rejected",
                                                                        },
                                                                        Object {
                                                                          "label": "Open",
                                                                          "value": "open",
                                                                        },
                                                                        Object {
                                                                          "label": "In progress",
                                                                          "value": "progress",
                                                                        },
                                                                        Object {
                                                                          "label": "In quarantine",
                                                                          "value": "quarantine",
                                                                        },
                                                                      ]
                                                                    }
                                                                    selectOption={[Function]}
                                                                    selectProps={
                                                                      Object {
                                                                        "aria-invalid": false,
                                                                        "aria-required": false,
                                                                        "backspaceRemovesValue": true,
                                                                        "blurInputOnSelect": true,
                                                                        "captureMenuScroll": false,
                                                                        "className": null,
                                                                        "classNamePrefix": undefined,
                                                                        "closeMenuOnScroll": false,
                                                                        "closeMenuOnSelect": true,
                                                                        "components": Object {
                                                                          "Control": [Function],
                                                                          "Option": [Function],
                                                                        },
                                                                        "controlShouldRenderValue": true,
                                                                        "escapeClearsValue": false,
                                                                        "filterOption": [Function],
                                                                        "formatGroupLabel": [Function],
                                                                        "getOptionLabel": [Function],
                                                                        "getOptionValue": [Function],
                                                                        "inputId": null,
                                                                        "inputValue": "",
                                                                        "isDisabled": null,
                                                                        "isLoading": false,
                                                                        "isMulti": false,
                                                                        "isOptionDisabled": [Function],
                                                                        "isRtl": false,
                                                                        "isSearchable": true,
                                                                        "labelText": "Inventory status",
                                                                        "loadingMessage": [Function],
                                                                        "maxMenuHeight": "96px",
                                                                        "menuIsOpen": false,
                                                                        "menuPlacement": "bottom",
                                                                        "menuPosition": "absolute",
                                                                        "menuShouldBlockScroll": false,
                                                                        "menuShouldScrollIntoView": true,
                                                                        "minMenuHeight": 140,
                                                                        "name": undefined,
                                                                        "noOptionsMessage": [Function],
                                                                        "onBlur": undefined,
                                                                        "onChange": [Function],
                                                                        "onInputChange": [Function],
                                                                        "onMenuClose": [Function],
                                                                        "onMenuOpen": [Function],
                                                                        "openMenuOnClick": true,
                                                                        "openMenuOnFocus": false,
                                                                        "options": Array [
                                                                          Object {
                                                                            "label": "Accepted",
                                                                            "value": "accepted",
                                                                          },
                                                                          Object {
                                                                            "label": "Assigned to a line",
                                                                            "value": "assigned",
                                                                          },
                                                                          Object {
                                                                            "label": "On hold",
                                                                            "value": "hold",
                                                                          },
                                                                          Object {
                                                                            "label": "Rejected",
                                                                            "value": "rejected",
                                                                          },
                                                                          Object {
                                                                            "label": "Open",
                                                                            "value": "open",
                                                                          },
                                                                          Object {
                                                                            "label": "In progress",
                                                                            "value": "progress",
                                                                          },
                                                                          Object {
                                                                            "label": "In quarantine",
                                                                            "value": "quarantine",
                                                                          },
                                                                        ],
                                                                        "pageSize": 5,
                                                                        "placeholder": "Please select inventory status",
                                                                        "screenReaderStatus": [Function],
                                                                        "styles": Object {
                                                                          "control": [Function],
                                                                          "dropdownIndicator": [Function],
                                                                          "indicatorSeparator": [Function],
                                                                          "input": [Function],
                                                                          "menu": [Function],
                                                                          "menuList": [Function],
                                                                          "multiValue": [Function],
                                                                          "multiValueLabel": [Function],
                                                                          "multiValueRemove": [Function],
                                                                          "noOptionsMessage": [Function],
                                                                          "option": [Function],
                                                                          "placeholder": [Function],
                                                                          "valueContainer": [Function],
                                                                        },
                                                                        "tabIndex": "0",
                                                                        "tabSelectsValue": true,
                                                                        "value": null,
                                                                      }
                                                                    }
                                                                    setValue={[Function]}
                                                                    theme={
                                                                      Object {
                                                                        "borderRadius": 4,
                                                                        "colors": Object {
                                                                          "danger": "#DE350B",
                                                                          "dangerLight": "#FFBDAD",
                                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                                          "primary": "#2684FF",
                                                                          "primary25": "#DEEBFF",
                                                                          "primary50": "#B2D4FF",
                                                                          "primary75": "#4C9AFF",
                                                                        },
                                                                        "spacing": Object {
                                                                          "baseUnit": 4,
                                                                          "controlHeight": 38,
                                                                          "menuGutter": 8,
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <EmotionCssPropInternal
                                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                      className=""
                                                                      css={
                                                                        Object {
                                                                          "&:hover, &:focus": Object {
                                                                            "borderColor": "#216beb",
                                                                          },
                                                                          "background": "#ffffff",
                                                                          "border": "1px solid #c0c8d1",
                                                                          "borderBottomLeftRadius": "4px",
                                                                          "borderBottomRightRadius": "4px",
                                                                          "borderColor": "#c0c8d1",
                                                                          "borderRadius": "4px",
                                                                          "boxShadow": null,
                                                                          "boxSizing": "border-box",
                                                                          "display": "flex",
                                                                          "fontFamily": "'IBM Plex Sans', sans-serif",
                                                                          "fontSize": "16px",
                                                                          "lineHeight": "1.5",
                                                                          "minHeight": "40px",
                                                                          "paddingLeft": "8px",
                                                                          "position": "relative",
                                                                          "width": "100%",
                                                                        }
                                                                      }
                                                                      onMouseDown={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                    >
                                                                      <div
                                                                        className=" css-1liu8yu-Control"
                                                                        onMouseDown={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                      >
                                                                        <ValueContainer
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={null}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "label": "Accepted",
                                                                                "value": "accepted",
                                                                              },
                                                                              Object {
                                                                                "label": "Assigned to a line",
                                                                                "value": "assigned",
                                                                              },
                                                                              Object {
                                                                                "label": "On hold",
                                                                                "value": "hold",
                                                                              },
                                                                              Object {
                                                                                "label": "Rejected",
                                                                                "value": "rejected",
                                                                              },
                                                                              Object {
                                                                                "label": "Open",
                                                                                "value": "open",
                                                                              },
                                                                              Object {
                                                                                "label": "In progress",
                                                                                "value": "progress",
                                                                              },
                                                                              Object {
                                                                                "label": "In quarantine",
                                                                                "value": "quarantine",
                                                                              },
                                                                            ]
                                                                          }
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-invalid": false,
                                                                              "aria-required": false,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": true,
                                                                              "captureMenuScroll": false,
                                                                              "className": null,
                                                                              "classNamePrefix": undefined,
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Control": [Function],
                                                                                "Option": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "inputId": null,
                                                                              "inputValue": "",
                                                                              "isDisabled": null,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "labelText": "Inventory status",
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": "96px",
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": undefined,
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": undefined,
                                                                              "onChange": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [
                                                                                Object {
                                                                                  "label": "Accepted",
                                                                                  "value": "accepted",
                                                                                },
                                                                                Object {
                                                                                  "label": "Assigned to a line",
                                                                                  "value": "assigned",
                                                                                },
                                                                                Object {
                                                                                  "label": "On hold",
                                                                                  "value": "hold",
                                                                                },
                                                                                Object {
                                                                                  "label": "Rejected",
                                                                                  "value": "rejected",
                                                                                },
                                                                                Object {
                                                                                  "label": "Open",
                                                                                  "value": "open",
                                                                                },
                                                                                Object {
                                                                                  "label": "In progress",
                                                                                  "value": "progress",
                                                                                },
                                                                                Object {
                                                                                  "label": "In quarantine",
                                                                                  "value": "quarantine",
                                                                                },
                                                                              ],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Please select inventory status",
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "control": [Function],
                                                                                "dropdownIndicator": [Function],
                                                                                "indicatorSeparator": [Function],
                                                                                "input": [Function],
                                                                                "menu": [Function],
                                                                                "menuList": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                                "noOptionsMessage": [Function],
                                                                                "option": [Function],
                                                                                "placeholder": [Function],
                                                                                "valueContainer": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#DE350B",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2684FF",
                                                                                "primary25": "#DEEBFF",
                                                                                "primary50": "#B2D4FF",
                                                                                "primary75": "#4C9AFF",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            className=""
                                                                            css={
                                                                              Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "alignItems": "center",
                                                                                "boxSizing": "border-box",
                                                                                "display": "flex",
                                                                                "flex": 1,
                                                                                "flexWrap": "wrap",
                                                                                "maxHeight": "150px",
                                                                                "overflow": "auto",
                                                                                "padding": 0,
                                                                                "position": "relative",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className=" css-7zc8my"
                                                                            >
                                                                              <Placeholder
                                                                                clearValue={[Function]}
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                getValue={[Function]}
                                                                                hasValue={false}
                                                                                isDisabled={null}
                                                                                isFocused={false}
                                                                                isMulti={false}
                                                                                isRtl={false}
                                                                                key="placeholder"
                                                                                options={
                                                                                  Array [
                                                                                    Object {
                                                                                      "label": "Accepted",
                                                                                      "value": "accepted",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Assigned to a line",
                                                                                      "value": "assigned",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "On hold",
                                                                                      "value": "hold",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Rejected",
                                                                                      "value": "rejected",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Open",
                                                                                      "value": "open",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In progress",
                                                                                      "value": "progress",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In quarantine",
                                                                                      "value": "quarantine",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                                selectOption={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                setValue={[Function]}
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                                  className=""
                                                                                  css={
                                                                                    Object {
                                                                                      "color": "hsl(0,0%,50%)",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className=" css-1yhx6vz-Placeholder"
                                                                                  >
                                                                                    Please select inventory status
                                                                                  </div>
                                                                                </EmotionCssPropInternal>
                                                                              </Placeholder>
                                                                              <Input
                                                                                aria-autocomplete="list"
                                                                                autoCapitalize="none"
                                                                                autoComplete="off"
                                                                                autoCorrect="off"
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                id="react-select-11-input"
                                                                                innerRef={[Function]}
                                                                                isDisabled={null}
                                                                                isHidden={false}
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                spellCheck="false"
                                                                                tabIndex="0"
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                                type="text"
                                                                                value=""
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                                  css={Object {}}
                                                                                >
                                                                                  <div
                                                                                    className="css-17yls17-Input"
                                                                                  >
                                                                                    <AutosizeInput
                                                                                      aria-autocomplete="list"
                                                                                      autoCapitalize="none"
                                                                                      autoComplete="off"
                                                                                      autoCorrect="off"
                                                                                      className=""
                                                                                      disabled={null}
                                                                                      id="react-select-11-input"
                                                                                      injectStyles={true}
                                                                                      inputRef={[Function]}
                                                                                      inputStyle={
                                                                                        Object {
                                                                                          "background": 0,
                                                                                          "border": 0,
                                                                                          "color": "inherit",
                                                                                          "fontSize": "inherit",
                                                                                          "label": "input",
                                                                                          "opacity": 1,
                                                                                          "outline": 0,
                                                                                          "padding": 0,
                                                                                        }
                                                                                      }
                                                                                      minWidth={1}
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      spellCheck="false"
                                                                                      tabIndex="0"
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <div
                                                                                        className=""
                                                                                        style={
                                                                                          Object {
                                                                                            "display": "inline-block",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <input
                                                                                          aria-autocomplete="list"
                                                                                          autoCapitalize="none"
                                                                                          autoComplete="off"
                                                                                          autoCorrect="off"
                                                                                          disabled={null}
                                                                                          id="react-select-11-input"
                                                                                          onBlur={[Function]}
                                                                                          onChange={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          spellCheck="false"
                                                                                          style={
                                                                                            Object {
                                                                                              "background": 0,
                                                                                              "border": 0,
                                                                                              "boxSizing": "content-box",
                                                                                              "color": "inherit",
                                                                                              "fontSize": "inherit",
                                                                                              "label": "input",
                                                                                              "opacity": 1,
                                                                                              "outline": 0,
                                                                                              "padding": 0,
                                                                                              "width": "2px",
                                                                                            }
                                                                                          }
                                                                                          tabIndex="0"
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                        <div
                                                                                          style={
                                                                                            Object {
                                                                                              "height": 0,
                                                                                              "left": 0,
                                                                                              "overflow": "scroll",
                                                                                              "position": "absolute",
                                                                                              "top": 0,
                                                                                              "visibility": "hidden",
                                                                                              "whiteSpace": "pre",
                                                                                            }
                                                                                          }
                                                                                        />
                                                                                      </div>
                                                                                    </AutosizeInput>
                                                                                  </div>
                                                                                </EmotionCssPropInternal>
                                                                              </Input>
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </ValueContainer>
                                                                        <IndicatorsContainer
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={null}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "label": "Accepted",
                                                                                "value": "accepted",
                                                                              },
                                                                              Object {
                                                                                "label": "Assigned to a line",
                                                                                "value": "assigned",
                                                                              },
                                                                              Object {
                                                                                "label": "On hold",
                                                                                "value": "hold",
                                                                              },
                                                                              Object {
                                                                                "label": "Rejected",
                                                                                "value": "rejected",
                                                                              },
                                                                              Object {
                                                                                "label": "Open",
                                                                                "value": "open",
                                                                              },
                                                                              Object {
                                                                                "label": "In progress",
                                                                                "value": "progress",
                                                                              },
                                                                              Object {
                                                                                "label": "In quarantine",
                                                                                "value": "quarantine",
                                                                              },
                                                                            ]
                                                                          }
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-invalid": false,
                                                                              "aria-required": false,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": true,
                                                                              "captureMenuScroll": false,
                                                                              "className": null,
                                                                              "classNamePrefix": undefined,
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Control": [Function],
                                                                                "Option": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "inputId": null,
                                                                              "inputValue": "",
                                                                              "isDisabled": null,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "labelText": "Inventory status",
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": "96px",
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": undefined,
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": undefined,
                                                                              "onChange": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [
                                                                                Object {
                                                                                  "label": "Accepted",
                                                                                  "value": "accepted",
                                                                                },
                                                                                Object {
                                                                                  "label": "Assigned to a line",
                                                                                  "value": "assigned",
                                                                                },
                                                                                Object {
                                                                                  "label": "On hold",
                                                                                  "value": "hold",
                                                                                },
                                                                                Object {
                                                                                  "label": "Rejected",
                                                                                  "value": "rejected",
                                                                                },
                                                                                Object {
                                                                                  "label": "Open",
                                                                                  "value": "open",
                                                                                },
                                                                                Object {
                                                                                  "label": "In progress",
                                                                                  "value": "progress",
                                                                                },
                                                                                Object {
                                                                                  "label": "In quarantine",
                                                                                  "value": "quarantine",
                                                                                },
                                                                              ],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Please select inventory status",
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "control": [Function],
                                                                                "dropdownIndicator": [Function],
                                                                                "indicatorSeparator": [Function],
                                                                                "input": [Function],
                                                                                "menu": [Function],
                                                                                "menuList": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                                "noOptionsMessage": [Function],
                                                                                "option": [Function],
                                                                                "placeholder": [Function],
                                                                                "valueContainer": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#DE350B",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2684FF",
                                                                                "primary25": "#DEEBFF",
                                                                                "primary50": "#B2D4FF",
                                                                                "primary75": "#4C9AFF",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            className=""
                                                                            css={
                                                                              Object {
                                                                                "alignItems": "center",
                                                                                "alignSelf": "stretch",
                                                                                "boxSizing": "border-box",
                                                                                "display": "flex",
                                                                                "flexShrink": 0,
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className=" css-1hb7zxy-IndicatorsContainer"
                                                                            >
                                                                              <IndicatorSeparator
                                                                                clearValue={[Function]}
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                getValue={[Function]}
                                                                                hasValue={false}
                                                                                isDisabled={null}
                                                                                isFocused={false}
                                                                                isMulti={false}
                                                                                isRtl={false}
                                                                                options={
                                                                                  Array [
                                                                                    Object {
                                                                                      "label": "Accepted",
                                                                                      "value": "accepted",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Assigned to a line",
                                                                                      "value": "assigned",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "On hold",
                                                                                      "value": "hold",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Rejected",
                                                                                      "value": "rejected",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Open",
                                                                                      "value": "open",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In progress",
                                                                                      "value": "progress",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In quarantine",
                                                                                      "value": "quarantine",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                                selectOption={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                setValue={[Function]}
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                                                  className=""
                                                                                  css={
                                                                                    Object {
                                                                                      "alignSelf": "stretch",
                                                                                      "backgroundColor": "hsl(0, 0%, 80%)",
                                                                                      "boxSizing": "border-box",
                                                                                      "display": "none",
                                                                                      "label": "indicatorSeparator",
                                                                                      "marginBottom": 8,
                                                                                      "marginTop": 8,
                                                                                      "width": 1,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className=" css-43ykx9-indicatorSeparator"
                                                                                  />
                                                                                </EmotionCssPropInternal>
                                                                              </IndicatorSeparator>
                                                                              <DropdownIndicator
                                                                                clearValue={[Function]}
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                getValue={[Function]}
                                                                                hasValue={false}
                                                                                innerProps={
                                                                                  Object {
                                                                                    "aria-hidden": "true",
                                                                                    "onMouseDown": [Function],
                                                                                    "onTouchEnd": [Function],
                                                                                  }
                                                                                }
                                                                                isDisabled={null}
                                                                                isFocused={false}
                                                                                isMulti={false}
                                                                                isRtl={false}
                                                                                options={
                                                                                  Array [
                                                                                    Object {
                                                                                      "label": "Accepted",
                                                                                      "value": "accepted",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Assigned to a line",
                                                                                      "value": "assigned",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "On hold",
                                                                                      "value": "hold",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Rejected",
                                                                                      "value": "rejected",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Open",
                                                                                      "value": "open",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In progress",
                                                                                      "value": "progress",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In quarantine",
                                                                                      "value": "quarantine",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                                selectOption={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                setValue={[Function]}
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                                  aria-hidden="true"
                                                                                  className=""
                                                                                  css={
                                                                                    Object {
                                                                                      ":hover": Object {
                                                                                        "color": "hsl(0, 0%, 60%)",
                                                                                      },
                                                                                      "boxSizing": "border-box",
                                                                                      "color": "#c0c8d1",
                                                                                      "display": "flex",
                                                                                      "label": "indicatorContainer",
                                                                                      "padding": 8,
                                                                                      "transition": "color 150ms",
                                                                                    }
                                                                                  }
                                                                                  onMouseDown={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                >
                                                                                  <div
                                                                                    aria-hidden="true"
                                                                                    className=" css-1fi275-indicatorContainer"
                                                                                    onMouseDown={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                  >
                                                                                    <DownChevron>
                                                                                      <Svg
                                                                                        size={20}
                                                                                      >
                                                                                        <EmotionCssPropInternal
                                                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                                                          aria-hidden="true"
                                                                                          css={
                                                                                            Object {
                                                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                                                              "name": "19bqh2r",
                                                                                              "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                                                            }
                                                                                          }
                                                                                          focusable="false"
                                                                                          height={20}
                                                                                          viewBox="0 0 20 20"
                                                                                          width={20}
                                                                                        >
                                                                                          <svg
                                                                                            aria-hidden="true"
                                                                                            className="css-6q0nyr-Svg"
                                                                                            focusable="false"
                                                                                            height={20}
                                                                                            viewBox="0 0 20 20"
                                                                                            width={20}
                                                                                          >
                                                                                            <path
                                                                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                                            />
                                                                                          </svg>
                                                                                        </EmotionCssPropInternal>
                                                                                      </Svg>
                                                                                    </DownChevron>
                                                                                  </div>
                                                                                </EmotionCssPropInternal>
                                                                              </DropdownIndicator>
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </IndicatorsContainer>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </Control>
                                                                </Control>
                                                              </div>
                                                            </EmotionCssPropInternal>
                                                          </SelectContainer>
                                                        </Select>
                                                      </StateManager>
                                                      <InlineValidation
                                                        errorList={null}
                                                        errorMessage={null}
                                                        mt="x1"
                                                      />
                                                    </label>
                                                  </FieldLabel__Label>
                                                </BaseFieldLabel>
                                              </Styled(BaseFieldLabel)>
                                            </MaybeFieldLabel>
                                          </div>
                                        </Styled(Box)>
                                      </ReactSelect>
                                    </form>
                                  </BaseForm>
                                </Styled(BaseForm)>
                              </div>
                            </Modal__ModalContent>
                            <Modal__ModalFooter>
                              <div
                                className="Modal__ModalFooter-cvhury-2 gnCyAa"
                              >
                                <ButtonGroup
                                  alignment="left"
                                >
                                  <div
                                    className="ButtonGroup-xkz195-0 jMubZv"
                                  >
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-AykKK fmyQGk"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-AykKK fmyQGk"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Add job to line
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-fzXfLP eLLQgR"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-fzXfLP eLLQgR"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Cancel
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                  </div>
                                </ButtonGroup>
                              </div>
                            </Modal__ModalFooter>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Modal with select and scrolling content 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <Memo(GlobalStyleComponent) />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <div
        className="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
      >
        <ThemeProvider
          theme={
            Object {
              "borders": Array [],
              "breakpoints": Object {
                "extraLarge": "1920px",
                "extraSmall": "0px",
                "large": "1360px",
                "medium": "1024px",
                "small": "768px",
              },
              "colors": Object {
                "black": "#011e38",
                "blackBlue": "#122b47",
                "blue": "#216beb",
                "darkBlue": "#00438f",
                "darkGrey": "#434d59",
                "green": "#008059",
                "grey": "#c0c8d1",
                "lightBlue": "#e1ebfa",
                "lightGreen": "#e9f7f2",
                "lightGrey": "#e4e7eb",
                "lightRed": "#fae6ea",
                "lightYellow": "#fcf5e3",
                "red": "#cc1439",
                "white": "#ffffff",
                "whiteGrey": "#f0f2f5",
                "yellow": "#ffbb00",
              },
              "fontSizes": Object {
                "large": "20px",
                "larger": "26px",
                "largest": "46px",
                "medium": "16px",
                "small": "14px",
                "smaller": "12px",
              },
              "fontWeights": Object {
                "bold": "600",
                "light": "300",
                "medium": "500",
                "normal": "400",
              },
              "fonts": Object {
                "base": "'IBM Plex Sans', sans-serif",
                "mono": "'IBM Plex Mono', monospace",
              },
              "lineHeights": Object {
                "base": "1.5",
                "sectionTitle": "1.23076923",
                "smallTextBase": "1.71428571",
                "smallTextCompressed": "1.14285714",
                "smallerText": "1.33333333",
                "subsectionTitle": "1.2",
                "title": "1.04347826",
              },
              "radii": Object {
                "circle": "50%",
                "medium": "4px",
                "small": "2px",
              },
              "shadows": Object {
                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
              },
              "space": Object {
                "half": "4px",
                "none": "0px",
                "x1": "8px",
                "x2": "16px",
                "x3": "24px",
                "x4": "32px",
                "x5": "40px",
                "x6": "48px",
                "x8": "64px",
              },
              "zIndex": Object {
                "content": 100,
                "overlay": 1000,
                "tabsBar": 210,
                "tabsScollIndicator": 200,
              },
            }
          }
        >
          <Modal
            footerContent={
              <ForwardRef(ButtonGroup)
                alignment="left"
              >
                <ForwardRef(Styled(Component))>
                  Add job to line
                </ForwardRef(Styled(Component))>
                <ForwardRef(Styled(Component))>
                  Cancel
                </ForwardRef(Styled(Component))>
              </ForwardRef(ButtonGroup)>
            }
            maxWidth="456px"
            onRequestClose={[Function]}
            title="Edit Profile"
          >
            <Modal
              ariaDescribedBy={null}
              ariaHideApp={false}
              ariaLabel={null}
              footerContent={
                <ForwardRef(ButtonGroup)
                  alignment="left"
                >
                  <ForwardRef(Styled(Component))>
                    Add job to line
                  </ForwardRef(Styled(Component))>
                  <ForwardRef(Styled(Component))>
                    Cancel
                  </ForwardRef(Styled(Component))>
                </ForwardRef(ButtonGroup)>
              }
              isOpen={true}
              maxWidth="456px"
              onAfterOpen={null}
              onRequestClose={[Function]}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              title="Edit Profile"
            >
              <Styled(Modal)
                aria={
                  Object {
                    "describedby": null,
                    "labelledby": "modal-title",
                  }
                }
                ariaHideApp={false}
                contentLabel={null}
                isOpen={true}
                maxWidth="456px"
                onAfterOpen={null}
                onRequestClose={[Function]}
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={true}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "overlay": Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(18,43,71,0.5)",
                      "bottom": 0,
                      "display": "flex",
                      "justifyContent": "center",
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "zIndex": 1000,
                    },
                  }
                }
              >
                <Modal
                  aria={
                    Object {
                      "describedby": null,
                      "labelledby": "modal-title",
                    }
                  }
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="sc-fzXfNJ elZbpy"
                  closeTimeoutMS={0}
                  contentLabel={null}
                  isOpen={true}
                  maxWidth="456px"
                  onAfterOpen={null}
                  onRequestClose={[Function]}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(18,43,71,0.5)",
                        "bottom": 0,
                        "display": "flex",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      },
                    }
                  }
                >
                  <Portal
                    containerInfo={
                      <div
                        class="ReactModalPortal"
                      >
                        <div
                          class="ReactModal__Overlay ReactModal__Overlay--after-open"
                          style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(18, 43, 71, 0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;"
                        >
                          <div
                            aria-labelledby="modal-title"
                            class="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ elZbpy"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="Modal__ModalHeader-cvhury-1 exyldS"
                            >
                              <h2
                                class="sc-AykKH kVNmCt"
                                font-size="26px"
                                font-weight="500"
                                id="modal-title"
                              >
                                Edit Profile
                              </h2>
                              <button
                                aria-label="close"
                                class="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="sc-AykKD kaUxeX"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="close"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  />
                                </svg>
                              </button>
                            </div>
                            <div
                              class="Modal__ModalContent-cvhury-0 fOwfzC"
                            >
                              <form
                                class="sc-fzXfMx kHiXQz"
                                id="myForm"
                                mb="x2"
                              >
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Name
                                      </span>
                                    </div>
                                    <div
                                      class="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                    >
                                      <div
                                        class="Box-sc-1qu1edy-0 klanzh"
                                        display="flex"
                                      >
                                        <input
                                          aria-invalid="false"
                                          aria-required="false"
                                          class="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                          id="name"
                                          name="name"
                                        />
                                      </div>
                                    </div>
                                  </label>
                                </div>
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Age
                                      </span>
                                    </div>
                                    <div
                                      class="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                    >
                                      <div
                                        class="Box-sc-1qu1edy-0 klanzh"
                                        display="flex"
                                      >
                                        <input
                                          aria-invalid="false"
                                          aria-required="false"
                                          class="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                          id="age"
                                          name="age"
                                          type="number"
                                        />
                                      </div>
                                    </div>
                                  </label>
                                </div>
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Name
                                      </span>
                                    </div>
                                    <div
                                      class="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                    >
                                      <div
                                        class="Box-sc-1qu1edy-0 klanzh"
                                        display="flex"
                                      >
                                        <input
                                          aria-invalid="false"
                                          aria-required="false"
                                          class="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                          id="name"
                                          name="name"
                                        />
                                      </div>
                                    </div>
                                  </label>
                                </div>
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Age
                                      </span>
                                    </div>
                                    <div
                                      class="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                    >
                                      <div
                                        class="Box-sc-1qu1edy-0 klanzh"
                                        display="flex"
                                      >
                                        <input
                                          aria-invalid="false"
                                          aria-required="false"
                                          class="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                          id="age"
                                          name="age"
                                          type="number"
                                        />
                                      </div>
                                    </div>
                                  </label>
                                </div>
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Name
                                      </span>
                                    </div>
                                    <div
                                      class="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                    >
                                      <div
                                        class="Box-sc-1qu1edy-0 klanzh"
                                        display="flex"
                                      >
                                        <input
                                          aria-invalid="false"
                                          aria-required="false"
                                          class="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                          id="name"
                                          name="name"
                                        />
                                      </div>
                                    </div>
                                  </label>
                                </div>
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Age
                                      </span>
                                    </div>
                                    <div
                                      class="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                    >
                                      <div
                                        class="Box-sc-1qu1edy-0 klanzh"
                                        display="flex"
                                      >
                                        <input
                                          aria-invalid="false"
                                          aria-required="false"
                                          class="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                          id="age"
                                          name="age"
                                          type="number"
                                        />
                                      </div>
                                    </div>
                                  </label>
                                </div>
                                <div
                                  class="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                >
                                  <label
                                    class="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                    color="#011e38"
                                    style="display: block;"
                                  >
                                    <div
                                      class="Box-sc-1qu1edy-0 iPmvAN"
                                    >
                                      <span
                                        style="font-size: 14px; font-weight: 600; line-height: 1.71428571;"
                                      >
                                        Inventory status
                                      </span>
                                    </div>
                                    <div
                                      class=" css-2b097c-container"
                                    >
                                      <div
                                        class=" css-1liu8yu-Control"
                                      >
                                        <div
                                          class=" css-7zc8my"
                                        >
                                          <div
                                            class=" css-1yhx6vz-Placeholder"
                                          >
                                            Please select inventory status
                                          </div>
                                          <div
                                            class="css-17yls17-Input"
                                          >
                                            <div
                                              class=""
                                              style="display: inline-block;"
                                            >
                                              <input
                                                aria-autocomplete="list"
                                                autocapitalize="none"
                                                autocomplete="off"
                                                autocorrect="off"
                                                id="react-select-12-input"
                                                spellcheck="false"
                                                style="box-sizing: content-box; width: 2px; border: 0px; font-size: inherit; opacity: 1; outline: 0; padding: 0px;"
                                                tabindex="0"
                                                type="text"
                                                value=""
                                              />
                                              <div
                                                style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-size: inherit; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
                                              />
                                            </div>
                                          </div>
                                        </div>
                                        <div
                                          class=" css-1hb7zxy-IndicatorsContainer"
                                        >
                                          <span
                                            class=" css-43ykx9-indicatorSeparator"
                                          />
                                          <div
                                            aria-hidden="true"
                                            class=" css-1fi275-indicatorContainer"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="css-6q0nyr-Svg"
                                              focusable="false"
                                              height="20"
                                              viewBox="0 0 20 20"
                                              width="20"
                                            >
                                              <path
                                                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                              />
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </label>
                                </div>
                              </form>
                            </div>
                            <div
                              class="Modal__ModalFooter-cvhury-2 gnCyAa"
                            >
                              <div
                                class="ButtonGroup-xkz195-0 jMubZv"
                              >
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                >
                                  Add job to line
                                </button>
                                <button
                                  class="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <ModalPortal
                      aria={
                        Object {
                          "describedby": null,
                          "labelledby": "modal-title",
                        }
                      }
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="sc-fzXfNJ elZbpy"
                      closeTimeoutMS={0}
                      contentLabel={null}
                      defaultStyles={
                        Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        }
                      }
                      isOpen={true}
                      maxWidth="456px"
                      onAfterOpen={null}
                      onRequestClose={[Function]}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      role="dialog"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "overlay": Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          },
                        }
                      }
                    >
                      <div
                        className="ReactModal__Overlay ReactModal__Overlay--after-open"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(18,43,71,0.5)",
                            "bottom": 0,
                            "display": "flex",
                            "justifyContent": "center",
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1000,
                          }
                        }
                      >
                        <div
                          aria-describedby={null}
                          aria-label={null}
                          aria-labelledby="modal-title"
                          className="ReactModal__Content ReactModal__Content--after-open sc-fzXfNJ elZbpy"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="dialog"
                          style={Object {}}
                          tabIndex="-1"
                        >
                          <PreventBodyElementScrolling>
                            <Modal__ModalHeader
                              hasCloseButton={[Function]}
                            >
                              <div
                                className="Modal__ModalHeader-cvhury-1 exyldS"
                              >
                                <styled.h2
                                  fontSize="26px"
                                  fontWeight="500"
                                  id="modal-title"
                                  lineHeight="1.23076923"
                                  mb="none"
                                  mt={0}
                                  theme={
                                    Object {
                                      "borders": Array [],
                                      "breakpoints": Object {
                                        "extraLarge": "1920px",
                                        "extraSmall": "0px",
                                        "large": "1360px",
                                        "medium": "1024px",
                                        "small": "768px",
                                      },
                                      "colors": Object {
                                        "black": "#011e38",
                                        "blackBlue": "#122b47",
                                        "blue": "#216beb",
                                        "darkBlue": "#00438f",
                                        "darkGrey": "#434d59",
                                        "green": "#008059",
                                        "grey": "#c0c8d1",
                                        "lightBlue": "#e1ebfa",
                                        "lightGreen": "#e9f7f2",
                                        "lightGrey": "#e4e7eb",
                                        "lightRed": "#fae6ea",
                                        "lightYellow": "#fcf5e3",
                                        "red": "#cc1439",
                                        "white": "#ffffff",
                                        "whiteGrey": "#f0f2f5",
                                        "yellow": "#ffbb00",
                                      },
                                      "fontSizes": Object {
                                        "large": "20px",
                                        "larger": "26px",
                                        "largest": "46px",
                                        "medium": "16px",
                                        "small": "14px",
                                        "smaller": "12px",
                                      },
                                      "fontWeights": Object {
                                        "bold": "600",
                                        "light": "300",
                                        "medium": "500",
                                        "normal": "400",
                                      },
                                      "fonts": Object {
                                        "base": "'IBM Plex Sans', sans-serif",
                                        "mono": "'IBM Plex Mono', monospace",
                                      },
                                      "lineHeights": Object {
                                        "base": "1.5",
                                        "sectionTitle": "1.23076923",
                                        "smallTextBase": "1.71428571",
                                        "smallTextCompressed": "1.14285714",
                                        "smallerText": "1.33333333",
                                        "subsectionTitle": "1.2",
                                        "title": "1.04347826",
                                      },
                                      "radii": Object {
                                        "circle": "50%",
                                        "medium": "4px",
                                        "small": "2px",
                                      },
                                      "shadows": Object {
                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                      },
                                      "space": Object {
                                        "half": "4px",
                                        "none": "0px",
                                        "x1": "8px",
                                        "x2": "16px",
                                        "x3": "24px",
                                        "x4": "32px",
                                        "x5": "40px",
                                        "x6": "48px",
                                        "x8": "64px",
                                      },
                                      "zIndex": Object {
                                        "content": 100,
                                        "overlay": 1000,
                                        "tabsBar": 210,
                                        "tabsScollIndicator": 200,
                                      },
                                    }
                                  }
                                >
                                  <h2
                                    className="sc-AykKH kVNmCt"
                                    fontSize="26px"
                                    fontWeight="500"
                                    id="modal-title"
                                  >
                                    Edit Profile
                                  </h2>
                                </styled.h2>
                                <Styled(Styled(Component))
                                  onClick={[Function]}
                                >
                                  <ForwardRef
                                    className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                    onClick={[Function]}
                                  >
                                    <CloseButton__WrapperButton
                                      aria-label="close"
                                      className="sc-fzXfLR sc-fzXfNl hvpeqC"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="close"
                                        className="CloseButton__WrapperButton-sc-1xxxr4t-0 evcfLd sc-fzXfLR sc-fzXfNl hvpeqC"
                                        onClick={[Function]}
                                      >
                                        <Styled(Component)
                                          color="currentColor"
                                          icon="close"
                                          p="half"
                                          size="32px"
                                          title={null}
                                        >
                                          <ForwardRef
                                            className="sc-AykKD kaUxeX"
                                            color="currentColor"
                                            focusable={false}
                                            icon="close"
                                            p="half"
                                            size="32px"
                                            title={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="sc-AykKD kaUxeX"
                                              color="currentColor"
                                              fill="currentColor"
                                              focusable={false}
                                              height="32px"
                                              icon="close"
                                              p="half"
                                              size="32px"
                                              title={null}
                                              viewBox="0 0 24 24"
                                              width="32px"
                                            >
                                              <path
                                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                key="0"
                                              />
                                            </svg>
                                          </ForwardRef>
                                        </Styled(Component)>
                                      </button>
                                    </CloseButton__WrapperButton>
                                  </ForwardRef>
                                </Styled(Styled(Component))>
                              </div>
                            </Modal__ModalHeader>
                            <Modal__ModalContent>
                              <div
                                className="Modal__ModalContent-cvhury-0 fOwfzC"
                              >
                                <Styled(BaseForm)
                                  id="myForm"
                                  mb="x2"
                                >
                                  <BaseForm
                                    className="sc-fzXfMx kHiXQz"
                                    id="myForm"
                                    mb="x2"
                                    title={null}
                                  >
                                    <form
                                      className="sc-fzXfMx kHiXQz"
                                      id="myForm"
                                      mb="x2"
                                    >
                                      <ForwardRef
                                        disabled={false}
                                        error={false}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id="name"
                                        labelText="Name"
                                        name="name"
                                        prefix={null}
                                        prefixAlignment="left"
                                        prefixWidth={null}
                                        required={false}
                                        requirementText={null}
                                        suffix={null}
                                        suffixAlignment="left"
                                        suffixWidth={null}
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <ForwardRef
                                              disabled={false}
                                              error={false}
                                              helpText={null}
                                              id="name"
                                              labelText="Name"
                                              name="name"
                                              prefix={null}
                                              prefixAlignment="left"
                                              prefixWidth={null}
                                              required={false}
                                              requirementText={null}
                                              suffix={null}
                                              suffixAlignment="left"
                                              suffixWidth={null}
                                            >
                                              <MaybeFieldLabel
                                                helpText={null}
                                                labelText="Name"
                                                requirementText={null}
                                              >
                                                <Styled(BaseFieldLabel)
                                                  helpText={null}
                                                  labelText="Name"
                                                  requirementText={null}
                                                >
                                                  <BaseFieldLabel
                                                    className="sc-fzXfLW casIUc"
                                                    helpText={null}
                                                    labelText="Name"
                                                    requirementText={null}
                                                  >
                                                    <FieldLabel__Label
                                                      className="sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                        color="#011e38"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        <Box
                                                          mb="x1"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 iPmvAN"
                                                          >
                                                            <span
                                                              style={
                                                                Object {
                                                                  "fontSize": "14px",
                                                                  "fontWeight": "600",
                                                                  "lineHeight": "1.71428571",
                                                                }
                                                              }
                                                            >
                                                              Name
                                                            </span>
                                                          </div>
                                                        </Box>
                                                        <Styled(Box)
                                                          alignItems="flex-start"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                                          >
                                                            <Prefix
                                                              prefix={null}
                                                              prefixWidth={null}
                                                              textAlign="left"
                                                            />
                                                            <Box
                                                              display="flex"
                                                              flexGrow="1"
                                                              position="relative"
                                                              theme={
                                                                Object {
                                                                  "borders": Array [],
                                                                  "breakpoints": Object {
                                                                    "extraLarge": "1920px",
                                                                    "extraSmall": "0px",
                                                                    "large": "1360px",
                                                                    "medium": "1024px",
                                                                    "small": "768px",
                                                                  },
                                                                  "colors": Object {
                                                                    "black": "#011e38",
                                                                    "blackBlue": "#122b47",
                                                                    "blue": "#216beb",
                                                                    "darkBlue": "#00438f",
                                                                    "darkGrey": "#434d59",
                                                                    "green": "#008059",
                                                                    "grey": "#c0c8d1",
                                                                    "lightBlue": "#e1ebfa",
                                                                    "lightGreen": "#e9f7f2",
                                                                    "lightGrey": "#e4e7eb",
                                                                    "lightRed": "#fae6ea",
                                                                    "lightYellow": "#fcf5e3",
                                                                    "red": "#cc1439",
                                                                    "white": "#ffffff",
                                                                    "whiteGrey": "#f0f2f5",
                                                                    "yellow": "#ffbb00",
                                                                  },
                                                                  "fontSizes": Object {
                                                                    "large": "20px",
                                                                    "larger": "26px",
                                                                    "largest": "46px",
                                                                    "medium": "16px",
                                                                    "small": "14px",
                                                                    "smaller": "12px",
                                                                  },
                                                                  "fontWeights": Object {
                                                                    "bold": "600",
                                                                    "light": "300",
                                                                    "medium": "500",
                                                                    "normal": "400",
                                                                  },
                                                                  "fonts": Object {
                                                                    "base": "'IBM Plex Sans', sans-serif",
                                                                    "mono": "'IBM Plex Mono', monospace",
                                                                  },
                                                                  "lineHeights": Object {
                                                                    "base": "1.5",
                                                                    "sectionTitle": "1.23076923",
                                                                    "smallTextBase": "1.71428571",
                                                                    "smallTextCompressed": "1.14285714",
                                                                    "smallerText": "1.33333333",
                                                                    "subsectionTitle": "1.2",
                                                                    "title": "1.04347826",
                                                                  },
                                                                  "radii": Object {
                                                                    "circle": "50%",
                                                                    "medium": "4px",
                                                                    "small": "2px",
                                                                  },
                                                                  "shadows": Object {
                                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                  },
                                                                  "space": Object {
                                                                    "half": "4px",
                                                                    "none": "0px",
                                                                    "x1": "8px",
                                                                    "x2": "16px",
                                                                    "x3": "24px",
                                                                    "x4": "32px",
                                                                    "x5": "40px",
                                                                    "x6": "48px",
                                                                    "x8": "64px",
                                                                  },
                                                                  "zIndex": Object {
                                                                    "content": 100,
                                                                    "overlay": 1000,
                                                                    "tabsBar": 210,
                                                                    "tabsScollIndicator": 200,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="Box-sc-1qu1edy-0 klanzh"
                                                                display="flex"
                                                              >
                                                                <InputField__StyledInput
                                                                  aria-invalid={false}
                                                                  aria-required={false}
                                                                  disabled={false}
                                                                  error={false}
                                                                  id="name"
                                                                  name="name"
                                                                  required={false}
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-required={false}
                                                                    className="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                                                    disabled={false}
                                                                    id="name"
                                                                    name="name"
                                                                    required={false}
                                                                  />
                                                                </InputField__StyledInput>
                                                              </div>
                                                            </Box>
                                                            <Suffix
                                                              suffix={null}
                                                              suffixWidth={null}
                                                              textAlign="left"
                                                            />
                                                          </div>
                                                        </Styled(Box)>
                                                      </label>
                                                    </FieldLabel__Label>
                                                  </BaseFieldLabel>
                                                </Styled(BaseFieldLabel)>
                                              </MaybeFieldLabel>
                                            </ForwardRef>
                                            <InlineValidation
                                              errorList={null}
                                              errorMessage={null}
                                              mt="x1"
                                            />
                                          </div>
                                        </Styled(Box)>
                                      </ForwardRef>
                                      <ForwardRef
                                        disabled={false}
                                        error={false}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id="age"
                                        labelText="Age"
                                        name="age"
                                        prefix={null}
                                        prefixAlignment="left"
                                        prefixWidth={null}
                                        required={false}
                                        requirementText={null}
                                        suffix={null}
                                        suffixAlignment="left"
                                        suffixWidth={null}
                                        type="number"
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <ForwardRef
                                              disabled={false}
                                              error={false}
                                              helpText={null}
                                              id="age"
                                              labelText="Age"
                                              name="age"
                                              prefix={null}
                                              prefixAlignment="left"
                                              prefixWidth={null}
                                              required={false}
                                              requirementText={null}
                                              suffix={null}
                                              suffixAlignment="left"
                                              suffixWidth={null}
                                              type="number"
                                            >
                                              <MaybeFieldLabel
                                                helpText={null}
                                                labelText="Age"
                                                requirementText={null}
                                              >
                                                <Styled(BaseFieldLabel)
                                                  helpText={null}
                                                  labelText="Age"
                                                  requirementText={null}
                                                >
                                                  <BaseFieldLabel
                                                    className="sc-fzXfLW casIUc"
                                                    helpText={null}
                                                    labelText="Age"
                                                    requirementText={null}
                                                  >
                                                    <FieldLabel__Label
                                                      className="sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                        color="#011e38"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        <Box
                                                          mb="x1"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 iPmvAN"
                                                          >
                                                            <span
                                                              style={
                                                                Object {
                                                                  "fontSize": "14px",
                                                                  "fontWeight": "600",
                                                                  "lineHeight": "1.71428571",
                                                                }
                                                              }
                                                            >
                                                              Age
                                                            </span>
                                                          </div>
                                                        </Box>
                                                        <Styled(Box)
                                                          alignItems="flex-start"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                                          >
                                                            <Prefix
                                                              prefix={null}
                                                              prefixWidth={null}
                                                              textAlign="left"
                                                            />
                                                            <Box
                                                              display="flex"
                                                              flexGrow="1"
                                                              position="relative"
                                                              theme={
                                                                Object {
                                                                  "borders": Array [],
                                                                  "breakpoints": Object {
                                                                    "extraLarge": "1920px",
                                                                    "extraSmall": "0px",
                                                                    "large": "1360px",
                                                                    "medium": "1024px",
                                                                    "small": "768px",
                                                                  },
                                                                  "colors": Object {
                                                                    "black": "#011e38",
                                                                    "blackBlue": "#122b47",
                                                                    "blue": "#216beb",
                                                                    "darkBlue": "#00438f",
                                                                    "darkGrey": "#434d59",
                                                                    "green": "#008059",
                                                                    "grey": "#c0c8d1",
                                                                    "lightBlue": "#e1ebfa",
                                                                    "lightGreen": "#e9f7f2",
                                                                    "lightGrey": "#e4e7eb",
                                                                    "lightRed": "#fae6ea",
                                                                    "lightYellow": "#fcf5e3",
                                                                    "red": "#cc1439",
                                                                    "white": "#ffffff",
                                                                    "whiteGrey": "#f0f2f5",
                                                                    "yellow": "#ffbb00",
                                                                  },
                                                                  "fontSizes": Object {
                                                                    "large": "20px",
                                                                    "larger": "26px",
                                                                    "largest": "46px",
                                                                    "medium": "16px",
                                                                    "small": "14px",
                                                                    "smaller": "12px",
                                                                  },
                                                                  "fontWeights": Object {
                                                                    "bold": "600",
                                                                    "light": "300",
                                                                    "medium": "500",
                                                                    "normal": "400",
                                                                  },
                                                                  "fonts": Object {
                                                                    "base": "'IBM Plex Sans', sans-serif",
                                                                    "mono": "'IBM Plex Mono', monospace",
                                                                  },
                                                                  "lineHeights": Object {
                                                                    "base": "1.5",
                                                                    "sectionTitle": "1.23076923",
                                                                    "smallTextBase": "1.71428571",
                                                                    "smallTextCompressed": "1.14285714",
                                                                    "smallerText": "1.33333333",
                                                                    "subsectionTitle": "1.2",
                                                                    "title": "1.04347826",
                                                                  },
                                                                  "radii": Object {
                                                                    "circle": "50%",
                                                                    "medium": "4px",
                                                                    "small": "2px",
                                                                  },
                                                                  "shadows": Object {
                                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                  },
                                                                  "space": Object {
                                                                    "half": "4px",
                                                                    "none": "0px",
                                                                    "x1": "8px",
                                                                    "x2": "16px",
                                                                    "x3": "24px",
                                                                    "x4": "32px",
                                                                    "x5": "40px",
                                                                    "x6": "48px",
                                                                    "x8": "64px",
                                                                  },
                                                                  "zIndex": Object {
                                                                    "content": 100,
                                                                    "overlay": 1000,
                                                                    "tabsBar": 210,
                                                                    "tabsScollIndicator": 200,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="Box-sc-1qu1edy-0 klanzh"
                                                                display="flex"
                                                              >
                                                                <InputField__StyledInput
                                                                  aria-invalid={false}
                                                                  aria-required={false}
                                                                  disabled={false}
                                                                  error={false}
                                                                  id="age"
                                                                  name="age"
                                                                  required={false}
                                                                  type="number"
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-required={false}
                                                                    className="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                                                    disabled={false}
                                                                    id="age"
                                                                    name="age"
                                                                    required={false}
                                                                    type="number"
                                                                  />
                                                                </InputField__StyledInput>
                                                              </div>
                                                            </Box>
                                                            <Suffix
                                                              suffix={null}
                                                              suffixWidth={null}
                                                              textAlign="left"
                                                            />
                                                          </div>
                                                        </Styled(Box)>
                                                      </label>
                                                    </FieldLabel__Label>
                                                  </BaseFieldLabel>
                                                </Styled(BaseFieldLabel)>
                                              </MaybeFieldLabel>
                                            </ForwardRef>
                                            <InlineValidation
                                              errorList={null}
                                              errorMessage={null}
                                              mt="x1"
                                            />
                                          </div>
                                        </Styled(Box)>
                                      </ForwardRef>
                                      <ForwardRef
                                        disabled={false}
                                        error={false}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id="name"
                                        labelText="Name"
                                        name="name"
                                        prefix={null}
                                        prefixAlignment="left"
                                        prefixWidth={null}
                                        required={false}
                                        requirementText={null}
                                        suffix={null}
                                        suffixAlignment="left"
                                        suffixWidth={null}
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <ForwardRef
                                              disabled={false}
                                              error={false}
                                              helpText={null}
                                              id="name"
                                              labelText="Name"
                                              name="name"
                                              prefix={null}
                                              prefixAlignment="left"
                                              prefixWidth={null}
                                              required={false}
                                              requirementText={null}
                                              suffix={null}
                                              suffixAlignment="left"
                                              suffixWidth={null}
                                            >
                                              <MaybeFieldLabel
                                                helpText={null}
                                                labelText="Name"
                                                requirementText={null}
                                              >
                                                <Styled(BaseFieldLabel)
                                                  helpText={null}
                                                  labelText="Name"
                                                  requirementText={null}
                                                >
                                                  <BaseFieldLabel
                                                    className="sc-fzXfLW casIUc"
                                                    helpText={null}
                                                    labelText="Name"
                                                    requirementText={null}
                                                  >
                                                    <FieldLabel__Label
                                                      className="sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                        color="#011e38"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        <Box
                                                          mb="x1"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 iPmvAN"
                                                          >
                                                            <span
                                                              style={
                                                                Object {
                                                                  "fontSize": "14px",
                                                                  "fontWeight": "600",
                                                                  "lineHeight": "1.71428571",
                                                                }
                                                              }
                                                            >
                                                              Name
                                                            </span>
                                                          </div>
                                                        </Box>
                                                        <Styled(Box)
                                                          alignItems="flex-start"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                                          >
                                                            <Prefix
                                                              prefix={null}
                                                              prefixWidth={null}
                                                              textAlign="left"
                                                            />
                                                            <Box
                                                              display="flex"
                                                              flexGrow="1"
                                                              position="relative"
                                                              theme={
                                                                Object {
                                                                  "borders": Array [],
                                                                  "breakpoints": Object {
                                                                    "extraLarge": "1920px",
                                                                    "extraSmall": "0px",
                                                                    "large": "1360px",
                                                                    "medium": "1024px",
                                                                    "small": "768px",
                                                                  },
                                                                  "colors": Object {
                                                                    "black": "#011e38",
                                                                    "blackBlue": "#122b47",
                                                                    "blue": "#216beb",
                                                                    "darkBlue": "#00438f",
                                                                    "darkGrey": "#434d59",
                                                                    "green": "#008059",
                                                                    "grey": "#c0c8d1",
                                                                    "lightBlue": "#e1ebfa",
                                                                    "lightGreen": "#e9f7f2",
                                                                    "lightGrey": "#e4e7eb",
                                                                    "lightRed": "#fae6ea",
                                                                    "lightYellow": "#fcf5e3",
                                                                    "red": "#cc1439",
                                                                    "white": "#ffffff",
                                                                    "whiteGrey": "#f0f2f5",
                                                                    "yellow": "#ffbb00",
                                                                  },
                                                                  "fontSizes": Object {
                                                                    "large": "20px",
                                                                    "larger": "26px",
                                                                    "largest": "46px",
                                                                    "medium": "16px",
                                                                    "small": "14px",
                                                                    "smaller": "12px",
                                                                  },
                                                                  "fontWeights": Object {
                                                                    "bold": "600",
                                                                    "light": "300",
                                                                    "medium": "500",
                                                                    "normal": "400",
                                                                  },
                                                                  "fonts": Object {
                                                                    "base": "'IBM Plex Sans', sans-serif",
                                                                    "mono": "'IBM Plex Mono', monospace",
                                                                  },
                                                                  "lineHeights": Object {
                                                                    "base": "1.5",
                                                                    "sectionTitle": "1.23076923",
                                                                    "smallTextBase": "1.71428571",
                                                                    "smallTextCompressed": "1.14285714",
                                                                    "smallerText": "1.33333333",
                                                                    "subsectionTitle": "1.2",
                                                                    "title": "1.04347826",
                                                                  },
                                                                  "radii": Object {
                                                                    "circle": "50%",
                                                                    "medium": "4px",
                                                                    "small": "2px",
                                                                  },
                                                                  "shadows": Object {
                                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                  },
                                                                  "space": Object {
                                                                    "half": "4px",
                                                                    "none": "0px",
                                                                    "x1": "8px",
                                                                    "x2": "16px",
                                                                    "x3": "24px",
                                                                    "x4": "32px",
                                                                    "x5": "40px",
                                                                    "x6": "48px",
                                                                    "x8": "64px",
                                                                  },
                                                                  "zIndex": Object {
                                                                    "content": 100,
                                                                    "overlay": 1000,
                                                                    "tabsBar": 210,
                                                                    "tabsScollIndicator": 200,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="Box-sc-1qu1edy-0 klanzh"
                                                                display="flex"
                                                              >
                                                                <InputField__StyledInput
                                                                  aria-invalid={false}
                                                                  aria-required={false}
                                                                  disabled={false}
                                                                  error={false}
                                                                  id="name"
                                                                  name="name"
                                                                  required={false}
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-required={false}
                                                                    className="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                                                    disabled={false}
                                                                    id="name"
                                                                    name="name"
                                                                    required={false}
                                                                  />
                                                                </InputField__StyledInput>
                                                              </div>
                                                            </Box>
                                                            <Suffix
                                                              suffix={null}
                                                              suffixWidth={null}
                                                              textAlign="left"
                                                            />
                                                          </div>
                                                        </Styled(Box)>
                                                      </label>
                                                    </FieldLabel__Label>
                                                  </BaseFieldLabel>
                                                </Styled(BaseFieldLabel)>
                                              </MaybeFieldLabel>
                                            </ForwardRef>
                                            <InlineValidation
                                              errorList={null}
                                              errorMessage={null}
                                              mt="x1"
                                            />
                                          </div>
                                        </Styled(Box)>
                                      </ForwardRef>
                                      <ForwardRef
                                        disabled={false}
                                        error={false}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id="age"
                                        labelText="Age"
                                        name="age"
                                        prefix={null}
                                        prefixAlignment="left"
                                        prefixWidth={null}
                                        required={false}
                                        requirementText={null}
                                        suffix={null}
                                        suffixAlignment="left"
                                        suffixWidth={null}
                                        type="number"
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <ForwardRef
                                              disabled={false}
                                              error={false}
                                              helpText={null}
                                              id="age"
                                              labelText="Age"
                                              name="age"
                                              prefix={null}
                                              prefixAlignment="left"
                                              prefixWidth={null}
                                              required={false}
                                              requirementText={null}
                                              suffix={null}
                                              suffixAlignment="left"
                                              suffixWidth={null}
                                              type="number"
                                            >
                                              <MaybeFieldLabel
                                                helpText={null}
                                                labelText="Age"
                                                requirementText={null}
                                              >
                                                <Styled(BaseFieldLabel)
                                                  helpText={null}
                                                  labelText="Age"
                                                  requirementText={null}
                                                >
                                                  <BaseFieldLabel
                                                    className="sc-fzXfLW casIUc"
                                                    helpText={null}
                                                    labelText="Age"
                                                    requirementText={null}
                                                  >
                                                    <FieldLabel__Label
                                                      className="sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                        color="#011e38"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        <Box
                                                          mb="x1"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 iPmvAN"
                                                          >
                                                            <span
                                                              style={
                                                                Object {
                                                                  "fontSize": "14px",
                                                                  "fontWeight": "600",
                                                                  "lineHeight": "1.71428571",
                                                                }
                                                              }
                                                            >
                                                              Age
                                                            </span>
                                                          </div>
                                                        </Box>
                                                        <Styled(Box)
                                                          alignItems="flex-start"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                                          >
                                                            <Prefix
                                                              prefix={null}
                                                              prefixWidth={null}
                                                              textAlign="left"
                                                            />
                                                            <Box
                                                              display="flex"
                                                              flexGrow="1"
                                                              position="relative"
                                                              theme={
                                                                Object {
                                                                  "borders": Array [],
                                                                  "breakpoints": Object {
                                                                    "extraLarge": "1920px",
                                                                    "extraSmall": "0px",
                                                                    "large": "1360px",
                                                                    "medium": "1024px",
                                                                    "small": "768px",
                                                                  },
                                                                  "colors": Object {
                                                                    "black": "#011e38",
                                                                    "blackBlue": "#122b47",
                                                                    "blue": "#216beb",
                                                                    "darkBlue": "#00438f",
                                                                    "darkGrey": "#434d59",
                                                                    "green": "#008059",
                                                                    "grey": "#c0c8d1",
                                                                    "lightBlue": "#e1ebfa",
                                                                    "lightGreen": "#e9f7f2",
                                                                    "lightGrey": "#e4e7eb",
                                                                    "lightRed": "#fae6ea",
                                                                    "lightYellow": "#fcf5e3",
                                                                    "red": "#cc1439",
                                                                    "white": "#ffffff",
                                                                    "whiteGrey": "#f0f2f5",
                                                                    "yellow": "#ffbb00",
                                                                  },
                                                                  "fontSizes": Object {
                                                                    "large": "20px",
                                                                    "larger": "26px",
                                                                    "largest": "46px",
                                                                    "medium": "16px",
                                                                    "small": "14px",
                                                                    "smaller": "12px",
                                                                  },
                                                                  "fontWeights": Object {
                                                                    "bold": "600",
                                                                    "light": "300",
                                                                    "medium": "500",
                                                                    "normal": "400",
                                                                  },
                                                                  "fonts": Object {
                                                                    "base": "'IBM Plex Sans', sans-serif",
                                                                    "mono": "'IBM Plex Mono', monospace",
                                                                  },
                                                                  "lineHeights": Object {
                                                                    "base": "1.5",
                                                                    "sectionTitle": "1.23076923",
                                                                    "smallTextBase": "1.71428571",
                                                                    "smallTextCompressed": "1.14285714",
                                                                    "smallerText": "1.33333333",
                                                                    "subsectionTitle": "1.2",
                                                                    "title": "1.04347826",
                                                                  },
                                                                  "radii": Object {
                                                                    "circle": "50%",
                                                                    "medium": "4px",
                                                                    "small": "2px",
                                                                  },
                                                                  "shadows": Object {
                                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                  },
                                                                  "space": Object {
                                                                    "half": "4px",
                                                                    "none": "0px",
                                                                    "x1": "8px",
                                                                    "x2": "16px",
                                                                    "x3": "24px",
                                                                    "x4": "32px",
                                                                    "x5": "40px",
                                                                    "x6": "48px",
                                                                    "x8": "64px",
                                                                  },
                                                                  "zIndex": Object {
                                                                    "content": 100,
                                                                    "overlay": 1000,
                                                                    "tabsBar": 210,
                                                                    "tabsScollIndicator": 200,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="Box-sc-1qu1edy-0 klanzh"
                                                                display="flex"
                                                              >
                                                                <InputField__StyledInput
                                                                  aria-invalid={false}
                                                                  aria-required={false}
                                                                  disabled={false}
                                                                  error={false}
                                                                  id="age"
                                                                  name="age"
                                                                  required={false}
                                                                  type="number"
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-required={false}
                                                                    className="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                                                    disabled={false}
                                                                    id="age"
                                                                    name="age"
                                                                    required={false}
                                                                    type="number"
                                                                  />
                                                                </InputField__StyledInput>
                                                              </div>
                                                            </Box>
                                                            <Suffix
                                                              suffix={null}
                                                              suffixWidth={null}
                                                              textAlign="left"
                                                            />
                                                          </div>
                                                        </Styled(Box)>
                                                      </label>
                                                    </FieldLabel__Label>
                                                  </BaseFieldLabel>
                                                </Styled(BaseFieldLabel)>
                                              </MaybeFieldLabel>
                                            </ForwardRef>
                                            <InlineValidation
                                              errorList={null}
                                              errorMessage={null}
                                              mt="x1"
                                            />
                                          </div>
                                        </Styled(Box)>
                                      </ForwardRef>
                                      <ForwardRef
                                        disabled={false}
                                        error={false}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id="name"
                                        labelText="Name"
                                        name="name"
                                        prefix={null}
                                        prefixAlignment="left"
                                        prefixWidth={null}
                                        required={false}
                                        requirementText={null}
                                        suffix={null}
                                        suffixAlignment="left"
                                        suffixWidth={null}
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <ForwardRef
                                              disabled={false}
                                              error={false}
                                              helpText={null}
                                              id="name"
                                              labelText="Name"
                                              name="name"
                                              prefix={null}
                                              prefixAlignment="left"
                                              prefixWidth={null}
                                              required={false}
                                              requirementText={null}
                                              suffix={null}
                                              suffixAlignment="left"
                                              suffixWidth={null}
                                            >
                                              <MaybeFieldLabel
                                                helpText={null}
                                                labelText="Name"
                                                requirementText={null}
                                              >
                                                <Styled(BaseFieldLabel)
                                                  helpText={null}
                                                  labelText="Name"
                                                  requirementText={null}
                                                >
                                                  <BaseFieldLabel
                                                    className="sc-fzXfLW casIUc"
                                                    helpText={null}
                                                    labelText="Name"
                                                    requirementText={null}
                                                  >
                                                    <FieldLabel__Label
                                                      className="sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                        color="#011e38"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        <Box
                                                          mb="x1"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 iPmvAN"
                                                          >
                                                            <span
                                                              style={
                                                                Object {
                                                                  "fontSize": "14px",
                                                                  "fontWeight": "600",
                                                                  "lineHeight": "1.71428571",
                                                                }
                                                              }
                                                            >
                                                              Name
                                                            </span>
                                                          </div>
                                                        </Box>
                                                        <Styled(Box)
                                                          alignItems="flex-start"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                                          >
                                                            <Prefix
                                                              prefix={null}
                                                              prefixWidth={null}
                                                              textAlign="left"
                                                            />
                                                            <Box
                                                              display="flex"
                                                              flexGrow="1"
                                                              position="relative"
                                                              theme={
                                                                Object {
                                                                  "borders": Array [],
                                                                  "breakpoints": Object {
                                                                    "extraLarge": "1920px",
                                                                    "extraSmall": "0px",
                                                                    "large": "1360px",
                                                                    "medium": "1024px",
                                                                    "small": "768px",
                                                                  },
                                                                  "colors": Object {
                                                                    "black": "#011e38",
                                                                    "blackBlue": "#122b47",
                                                                    "blue": "#216beb",
                                                                    "darkBlue": "#00438f",
                                                                    "darkGrey": "#434d59",
                                                                    "green": "#008059",
                                                                    "grey": "#c0c8d1",
                                                                    "lightBlue": "#e1ebfa",
                                                                    "lightGreen": "#e9f7f2",
                                                                    "lightGrey": "#e4e7eb",
                                                                    "lightRed": "#fae6ea",
                                                                    "lightYellow": "#fcf5e3",
                                                                    "red": "#cc1439",
                                                                    "white": "#ffffff",
                                                                    "whiteGrey": "#f0f2f5",
                                                                    "yellow": "#ffbb00",
                                                                  },
                                                                  "fontSizes": Object {
                                                                    "large": "20px",
                                                                    "larger": "26px",
                                                                    "largest": "46px",
                                                                    "medium": "16px",
                                                                    "small": "14px",
                                                                    "smaller": "12px",
                                                                  },
                                                                  "fontWeights": Object {
                                                                    "bold": "600",
                                                                    "light": "300",
                                                                    "medium": "500",
                                                                    "normal": "400",
                                                                  },
                                                                  "fonts": Object {
                                                                    "base": "'IBM Plex Sans', sans-serif",
                                                                    "mono": "'IBM Plex Mono', monospace",
                                                                  },
                                                                  "lineHeights": Object {
                                                                    "base": "1.5",
                                                                    "sectionTitle": "1.23076923",
                                                                    "smallTextBase": "1.71428571",
                                                                    "smallTextCompressed": "1.14285714",
                                                                    "smallerText": "1.33333333",
                                                                    "subsectionTitle": "1.2",
                                                                    "title": "1.04347826",
                                                                  },
                                                                  "radii": Object {
                                                                    "circle": "50%",
                                                                    "medium": "4px",
                                                                    "small": "2px",
                                                                  },
                                                                  "shadows": Object {
                                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                  },
                                                                  "space": Object {
                                                                    "half": "4px",
                                                                    "none": "0px",
                                                                    "x1": "8px",
                                                                    "x2": "16px",
                                                                    "x3": "24px",
                                                                    "x4": "32px",
                                                                    "x5": "40px",
                                                                    "x6": "48px",
                                                                    "x8": "64px",
                                                                  },
                                                                  "zIndex": Object {
                                                                    "content": 100,
                                                                    "overlay": 1000,
                                                                    "tabsBar": 210,
                                                                    "tabsScollIndicator": 200,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="Box-sc-1qu1edy-0 klanzh"
                                                                display="flex"
                                                              >
                                                                <InputField__StyledInput
                                                                  aria-invalid={false}
                                                                  aria-required={false}
                                                                  disabled={false}
                                                                  error={false}
                                                                  id="name"
                                                                  name="name"
                                                                  required={false}
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-required={false}
                                                                    className="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                                                    disabled={false}
                                                                    id="name"
                                                                    name="name"
                                                                    required={false}
                                                                  />
                                                                </InputField__StyledInput>
                                                              </div>
                                                            </Box>
                                                            <Suffix
                                                              suffix={null}
                                                              suffixWidth={null}
                                                              textAlign="left"
                                                            />
                                                          </div>
                                                        </Styled(Box)>
                                                      </label>
                                                    </FieldLabel__Label>
                                                  </BaseFieldLabel>
                                                </Styled(BaseFieldLabel)>
                                              </MaybeFieldLabel>
                                            </ForwardRef>
                                            <InlineValidation
                                              errorList={null}
                                              errorMessage={null}
                                              mt="x1"
                                            />
                                          </div>
                                        </Styled(Box)>
                                      </ForwardRef>
                                      <ForwardRef
                                        disabled={false}
                                        error={false}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id="age"
                                        labelText="Age"
                                        name="age"
                                        prefix={null}
                                        prefixAlignment="left"
                                        prefixWidth={null}
                                        required={false}
                                        requirementText={null}
                                        suffix={null}
                                        suffixAlignment="left"
                                        suffixWidth={null}
                                        type="number"
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <ForwardRef
                                              disabled={false}
                                              error={false}
                                              helpText={null}
                                              id="age"
                                              labelText="Age"
                                              name="age"
                                              prefix={null}
                                              prefixAlignment="left"
                                              prefixWidth={null}
                                              required={false}
                                              requirementText={null}
                                              suffix={null}
                                              suffixAlignment="left"
                                              suffixWidth={null}
                                              type="number"
                                            >
                                              <MaybeFieldLabel
                                                helpText={null}
                                                labelText="Age"
                                                requirementText={null}
                                              >
                                                <Styled(BaseFieldLabel)
                                                  helpText={null}
                                                  labelText="Age"
                                                  requirementText={null}
                                                >
                                                  <BaseFieldLabel
                                                    className="sc-fzXfLW casIUc"
                                                    helpText={null}
                                                    labelText="Age"
                                                    requirementText={null}
                                                  >
                                                    <FieldLabel__Label
                                                      className="sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                        color="#011e38"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        <Box
                                                          mb="x1"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 iPmvAN"
                                                          >
                                                            <span
                                                              style={
                                                                Object {
                                                                  "fontSize": "14px",
                                                                  "fontWeight": "600",
                                                                  "lineHeight": "1.71428571",
                                                                }
                                                              }
                                                            >
                                                              Age
                                                            </span>
                                                          </div>
                                                        </Box>
                                                        <Styled(Box)
                                                          alignItems="flex-start"
                                                          theme={
                                                            Object {
                                                              "borders": Array [],
                                                              "breakpoints": Object {
                                                                "extraLarge": "1920px",
                                                                "extraSmall": "0px",
                                                                "large": "1360px",
                                                                "medium": "1024px",
                                                                "small": "768px",
                                                              },
                                                              "colors": Object {
                                                                "black": "#011e38",
                                                                "blackBlue": "#122b47",
                                                                "blue": "#216beb",
                                                                "darkBlue": "#00438f",
                                                                "darkGrey": "#434d59",
                                                                "green": "#008059",
                                                                "grey": "#c0c8d1",
                                                                "lightBlue": "#e1ebfa",
                                                                "lightGreen": "#e9f7f2",
                                                                "lightGrey": "#e4e7eb",
                                                                "lightRed": "#fae6ea",
                                                                "lightYellow": "#fcf5e3",
                                                                "red": "#cc1439",
                                                                "white": "#ffffff",
                                                                "whiteGrey": "#f0f2f5",
                                                                "yellow": "#ffbb00",
                                                              },
                                                              "fontSizes": Object {
                                                                "large": "20px",
                                                                "larger": "26px",
                                                                "largest": "46px",
                                                                "medium": "16px",
                                                                "small": "14px",
                                                                "smaller": "12px",
                                                              },
                                                              "fontWeights": Object {
                                                                "bold": "600",
                                                                "light": "300",
                                                                "medium": "500",
                                                                "normal": "400",
                                                              },
                                                              "fonts": Object {
                                                                "base": "'IBM Plex Sans', sans-serif",
                                                                "mono": "'IBM Plex Mono', monospace",
                                                              },
                                                              "lineHeights": Object {
                                                                "base": "1.5",
                                                                "sectionTitle": "1.23076923",
                                                                "smallTextBase": "1.71428571",
                                                                "smallTextCompressed": "1.14285714",
                                                                "smallerText": "1.33333333",
                                                                "subsectionTitle": "1.2",
                                                                "title": "1.04347826",
                                                              },
                                                              "radii": Object {
                                                                "circle": "50%",
                                                                "medium": "4px",
                                                                "small": "2px",
                                                              },
                                                              "shadows": Object {
                                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                              },
                                                              "space": Object {
                                                                "half": "4px",
                                                                "none": "0px",
                                                                "x1": "8px",
                                                                "x2": "16px",
                                                                "x3": "24px",
                                                                "x4": "32px",
                                                                "x5": "40px",
                                                                "x6": "48px",
                                                                "x8": "64px",
                                                              },
                                                              "zIndex": Object {
                                                                "content": 100,
                                                                "overlay": 1000,
                                                                "tabsBar": 210,
                                                                "tabsScollIndicator": 200,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="Box-sc-1qu1edy-0 sc-AykKC bFdvBb"
                                                          >
                                                            <Prefix
                                                              prefix={null}
                                                              prefixWidth={null}
                                                              textAlign="left"
                                                            />
                                                            <Box
                                                              display="flex"
                                                              flexGrow="1"
                                                              position="relative"
                                                              theme={
                                                                Object {
                                                                  "borders": Array [],
                                                                  "breakpoints": Object {
                                                                    "extraLarge": "1920px",
                                                                    "extraSmall": "0px",
                                                                    "large": "1360px",
                                                                    "medium": "1024px",
                                                                    "small": "768px",
                                                                  },
                                                                  "colors": Object {
                                                                    "black": "#011e38",
                                                                    "blackBlue": "#122b47",
                                                                    "blue": "#216beb",
                                                                    "darkBlue": "#00438f",
                                                                    "darkGrey": "#434d59",
                                                                    "green": "#008059",
                                                                    "grey": "#c0c8d1",
                                                                    "lightBlue": "#e1ebfa",
                                                                    "lightGreen": "#e9f7f2",
                                                                    "lightGrey": "#e4e7eb",
                                                                    "lightRed": "#fae6ea",
                                                                    "lightYellow": "#fcf5e3",
                                                                    "red": "#cc1439",
                                                                    "white": "#ffffff",
                                                                    "whiteGrey": "#f0f2f5",
                                                                    "yellow": "#ffbb00",
                                                                  },
                                                                  "fontSizes": Object {
                                                                    "large": "20px",
                                                                    "larger": "26px",
                                                                    "largest": "46px",
                                                                    "medium": "16px",
                                                                    "small": "14px",
                                                                    "smaller": "12px",
                                                                  },
                                                                  "fontWeights": Object {
                                                                    "bold": "600",
                                                                    "light": "300",
                                                                    "medium": "500",
                                                                    "normal": "400",
                                                                  },
                                                                  "fonts": Object {
                                                                    "base": "'IBM Plex Sans', sans-serif",
                                                                    "mono": "'IBM Plex Mono', monospace",
                                                                  },
                                                                  "lineHeights": Object {
                                                                    "base": "1.5",
                                                                    "sectionTitle": "1.23076923",
                                                                    "smallTextBase": "1.71428571",
                                                                    "smallTextCompressed": "1.14285714",
                                                                    "smallerText": "1.33333333",
                                                                    "subsectionTitle": "1.2",
                                                                    "title": "1.04347826",
                                                                  },
                                                                  "radii": Object {
                                                                    "circle": "50%",
                                                                    "medium": "4px",
                                                                    "small": "2px",
                                                                  },
                                                                  "shadows": Object {
                                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                  },
                                                                  "space": Object {
                                                                    "half": "4px",
                                                                    "none": "0px",
                                                                    "x1": "8px",
                                                                    "x2": "16px",
                                                                    "x3": "24px",
                                                                    "x4": "32px",
                                                                    "x5": "40px",
                                                                    "x6": "48px",
                                                                    "x8": "64px",
                                                                  },
                                                                  "zIndex": Object {
                                                                    "content": 100,
                                                                    "overlay": 1000,
                                                                    "tabsBar": 210,
                                                                    "tabsScollIndicator": 200,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="Box-sc-1qu1edy-0 klanzh"
                                                                display="flex"
                                                              >
                                                                <InputField__StyledInput
                                                                  aria-invalid={false}
                                                                  aria-required={false}
                                                                  disabled={false}
                                                                  error={false}
                                                                  id="age"
                                                                  name="age"
                                                                  required={false}
                                                                  type="number"
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-required={false}
                                                                    className="InputField__StyledInput-sc-6cu4mg-0 gMpUUS"
                                                                    disabled={false}
                                                                    id="age"
                                                                    name="age"
                                                                    required={false}
                                                                    type="number"
                                                                  />
                                                                </InputField__StyledInput>
                                                              </div>
                                                            </Box>
                                                            <Suffix
                                                              suffix={null}
                                                              suffixWidth={null}
                                                              textAlign="left"
                                                            />
                                                          </div>
                                                        </Styled(Box)>
                                                      </label>
                                                    </FieldLabel__Label>
                                                  </BaseFieldLabel>
                                                </Styled(BaseFieldLabel)>
                                              </MaybeFieldLabel>
                                            </ForwardRef>
                                            <InlineValidation
                                              errorList={null}
                                              errorMessage={null}
                                              mt="x1"
                                            />
                                          </div>
                                        </Styled(Box)>
                                      </ForwardRef>
                                      <ReactSelect
                                        autocomplete={true}
                                        className={null}
                                        disabled={null}
                                        errorList={null}
                                        errorMessage={null}
                                        helpText={null}
                                        id={null}
                                        labelText="Inventory status"
                                        maxHeight="96px"
                                        menuPosition="absolute"
                                        multiselect={false}
                                        noOptionsMessage={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "Accepted",
                                              "value": "accepted",
                                            },
                                            Object {
                                              "label": "Assigned to a line",
                                              "value": "assigned",
                                            },
                                            Object {
                                              "label": "On hold",
                                              "value": "hold",
                                            },
                                            Object {
                                              "label": "Rejected",
                                              "value": "rejected",
                                            },
                                            Object {
                                              "label": "Open",
                                              "value": "open",
                                            },
                                            Object {
                                              "label": "In progress",
                                              "value": "progress",
                                            },
                                            Object {
                                              "label": "In quarantine",
                                              "value": "quarantine",
                                            },
                                          ]
                                        }
                                        placeholder="Please select inventory status"
                                        required={false}
                                        requirementText={null}
                                      >
                                        <Styled(Box)
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="Box-sc-1qu1edy-0 sc-fzXfLX sBbYB"
                                          >
                                            <MaybeFieldLabel
                                              helpText={null}
                                              labelText="Inventory status"
                                              requirementText={null}
                                            >
                                              <Styled(BaseFieldLabel)
                                                helpText={null}
                                                labelText="Inventory status"
                                                requirementText={null}
                                              >
                                                <BaseFieldLabel
                                                  className="sc-fzXfLW casIUc"
                                                  helpText={null}
                                                  labelText="Inventory status"
                                                  requirementText={null}
                                                >
                                                  <FieldLabel__Label
                                                    className="sc-fzXfLW casIUc"
                                                    color="#011e38"
                                                    style={
                                                      Object {
                                                        "display": "block",
                                                      }
                                                    }
                                                  >
                                                    <label
                                                      className="FieldLabel__Label-sc-1t1cp4f-0 eyPSNy sc-fzXfLW casIUc"
                                                      color="#011e38"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                        }
                                                      }
                                                    >
                                                      <Box
                                                        mb="x1"
                                                        theme={
                                                          Object {
                                                            "borders": Array [],
                                                            "breakpoints": Object {
                                                              "extraLarge": "1920px",
                                                              "extraSmall": "0px",
                                                              "large": "1360px",
                                                              "medium": "1024px",
                                                              "small": "768px",
                                                            },
                                                            "colors": Object {
                                                              "black": "#011e38",
                                                              "blackBlue": "#122b47",
                                                              "blue": "#216beb",
                                                              "darkBlue": "#00438f",
                                                              "darkGrey": "#434d59",
                                                              "green": "#008059",
                                                              "grey": "#c0c8d1",
                                                              "lightBlue": "#e1ebfa",
                                                              "lightGreen": "#e9f7f2",
                                                              "lightGrey": "#e4e7eb",
                                                              "lightRed": "#fae6ea",
                                                              "lightYellow": "#fcf5e3",
                                                              "red": "#cc1439",
                                                              "white": "#ffffff",
                                                              "whiteGrey": "#f0f2f5",
                                                              "yellow": "#ffbb00",
                                                            },
                                                            "fontSizes": Object {
                                                              "large": "20px",
                                                              "larger": "26px",
                                                              "largest": "46px",
                                                              "medium": "16px",
                                                              "small": "14px",
                                                              "smaller": "12px",
                                                            },
                                                            "fontWeights": Object {
                                                              "bold": "600",
                                                              "light": "300",
                                                              "medium": "500",
                                                              "normal": "400",
                                                            },
                                                            "fonts": Object {
                                                              "base": "'IBM Plex Sans', sans-serif",
                                                              "mono": "'IBM Plex Mono', monospace",
                                                            },
                                                            "lineHeights": Object {
                                                              "base": "1.5",
                                                              "sectionTitle": "1.23076923",
                                                              "smallTextBase": "1.71428571",
                                                              "smallTextCompressed": "1.14285714",
                                                              "smallerText": "1.33333333",
                                                              "subsectionTitle": "1.2",
                                                              "title": "1.04347826",
                                                            },
                                                            "radii": Object {
                                                              "circle": "50%",
                                                              "medium": "4px",
                                                              "small": "2px",
                                                            },
                                                            "shadows": Object {
                                                              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                            },
                                                            "space": Object {
                                                              "half": "4px",
                                                              "none": "0px",
                                                              "x1": "8px",
                                                              "x2": "16px",
                                                              "x3": "24px",
                                                              "x4": "32px",
                                                              "x5": "40px",
                                                              "x6": "48px",
                                                              "x8": "64px",
                                                            },
                                                            "zIndex": Object {
                                                              "content": 100,
                                                              "overlay": 1000,
                                                              "tabsBar": 210,
                                                              "tabsScollIndicator": 200,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="Box-sc-1qu1edy-0 iPmvAN"
                                                        >
                                                          <span
                                                            style={
                                                              Object {
                                                                "fontSize": "14px",
                                                                "fontWeight": "600",
                                                                "lineHeight": "1.71428571",
                                                              }
                                                            }
                                                          >
                                                            Inventory status
                                                          </span>
                                                        </div>
                                                      </Box>
                                                      <StateManager
                                                        aria-invalid={false}
                                                        aria-required={false}
                                                        className={null}
                                                        components={
                                                          Object {
                                                            "Control": [Function],
                                                            "Option": [Function],
                                                          }
                                                        }
                                                        defaultInputValue=""
                                                        defaultMenuIsOpen={false}
                                                        defaultValue={null}
                                                        inputId={null}
                                                        isDisabled={null}
                                                        isMulti={false}
                                                        isSearchable={true}
                                                        labelText="Inventory status"
                                                        maxMenuHeight="96px"
                                                        menuPosition="absolute"
                                                        noOptionsMessage={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "Accepted",
                                                              "value": "accepted",
                                                            },
                                                            Object {
                                                              "label": "Assigned to a line",
                                                              "value": "assigned",
                                                            },
                                                            Object {
                                                              "label": "On hold",
                                                              "value": "hold",
                                                            },
                                                            Object {
                                                              "label": "Rejected",
                                                              "value": "rejected",
                                                            },
                                                            Object {
                                                              "label": "Open",
                                                              "value": "open",
                                                            },
                                                            Object {
                                                              "label": "In progress",
                                                              "value": "progress",
                                                            },
                                                            Object {
                                                              "label": "In quarantine",
                                                              "value": "quarantine",
                                                            },
                                                          ]
                                                        }
                                                        placeholder="Please select inventory status"
                                                        styles={
                                                          Object {
                                                            "control": [Function],
                                                            "dropdownIndicator": [Function],
                                                            "indicatorSeparator": [Function],
                                                            "input": [Function],
                                                            "menu": [Function],
                                                            "menuList": [Function],
                                                            "multiValue": [Function],
                                                            "multiValueLabel": [Function],
                                                            "multiValueRemove": [Function],
                                                            "noOptionsMessage": [Function],
                                                            "option": [Function],
                                                            "placeholder": [Function],
                                                            "valueContainer": [Function],
                                                          }
                                                        }
                                                      >
                                                        <Select
                                                          aria-invalid={false}
                                                          aria-required={false}
                                                          backspaceRemovesValue={true}
                                                          blurInputOnSelect={true}
                                                          captureMenuScroll={false}
                                                          className={null}
                                                          closeMenuOnScroll={false}
                                                          closeMenuOnSelect={true}
                                                          components={
                                                            Object {
                                                              "Control": [Function],
                                                              "Option": [Function],
                                                            }
                                                          }
                                                          controlShouldRenderValue={true}
                                                          escapeClearsValue={false}
                                                          filterOption={[Function]}
                                                          formatGroupLabel={[Function]}
                                                          getOptionLabel={[Function]}
                                                          getOptionValue={[Function]}
                                                          inputId={null}
                                                          inputValue=""
                                                          isDisabled={null}
                                                          isLoading={false}
                                                          isMulti={false}
                                                          isOptionDisabled={[Function]}
                                                          isRtl={false}
                                                          isSearchable={true}
                                                          labelText="Inventory status"
                                                          loadingMessage={[Function]}
                                                          maxMenuHeight="96px"
                                                          menuIsOpen={false}
                                                          menuPlacement="bottom"
                                                          menuPosition="absolute"
                                                          menuShouldBlockScroll={false}
                                                          menuShouldScrollIntoView={true}
                                                          minMenuHeight={140}
                                                          noOptionsMessage={[Function]}
                                                          onChange={[Function]}
                                                          onInputChange={[Function]}
                                                          onMenuClose={[Function]}
                                                          onMenuOpen={[Function]}
                                                          openMenuOnClick={true}
                                                          openMenuOnFocus={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "label": "Accepted",
                                                                "value": "accepted",
                                                              },
                                                              Object {
                                                                "label": "Assigned to a line",
                                                                "value": "assigned",
                                                              },
                                                              Object {
                                                                "label": "On hold",
                                                                "value": "hold",
                                                              },
                                                              Object {
                                                                "label": "Rejected",
                                                                "value": "rejected",
                                                              },
                                                              Object {
                                                                "label": "Open",
                                                                "value": "open",
                                                              },
                                                              Object {
                                                                "label": "In progress",
                                                                "value": "progress",
                                                              },
                                                              Object {
                                                                "label": "In quarantine",
                                                                "value": "quarantine",
                                                              },
                                                            ]
                                                          }
                                                          pageSize={5}
                                                          placeholder="Please select inventory status"
                                                          screenReaderStatus={[Function]}
                                                          styles={
                                                            Object {
                                                              "control": [Function],
                                                              "dropdownIndicator": [Function],
                                                              "indicatorSeparator": [Function],
                                                              "input": [Function],
                                                              "menu": [Function],
                                                              "menuList": [Function],
                                                              "multiValue": [Function],
                                                              "multiValueLabel": [Function],
                                                              "multiValueRemove": [Function],
                                                              "noOptionsMessage": [Function],
                                                              "option": [Function],
                                                              "placeholder": [Function],
                                                              "valueContainer": [Function],
                                                            }
                                                          }
                                                          tabIndex="0"
                                                          tabSelectsValue={true}
                                                          value={null}
                                                        >
                                                          <SelectContainer
                                                            className={null}
                                                            clearValue={[Function]}
                                                            cx={[Function]}
                                                            getStyles={[Function]}
                                                            getValue={[Function]}
                                                            hasValue={false}
                                                            innerProps={
                                                              Object {
                                                                "id": undefined,
                                                                "onKeyDown": [Function],
                                                              }
                                                            }
                                                            isDisabled={null}
                                                            isFocused={false}
                                                            isMulti={false}
                                                            isRtl={false}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "label": "Accepted",
                                                                  "value": "accepted",
                                                                },
                                                                Object {
                                                                  "label": "Assigned to a line",
                                                                  "value": "assigned",
                                                                },
                                                                Object {
                                                                  "label": "On hold",
                                                                  "value": "hold",
                                                                },
                                                                Object {
                                                                  "label": "Rejected",
                                                                  "value": "rejected",
                                                                },
                                                                Object {
                                                                  "label": "Open",
                                                                  "value": "open",
                                                                },
                                                                Object {
                                                                  "label": "In progress",
                                                                  "value": "progress",
                                                                },
                                                                Object {
                                                                  "label": "In quarantine",
                                                                  "value": "quarantine",
                                                                },
                                                              ]
                                                            }
                                                            selectOption={[Function]}
                                                            selectProps={
                                                              Object {
                                                                "aria-invalid": false,
                                                                "aria-required": false,
                                                                "backspaceRemovesValue": true,
                                                                "blurInputOnSelect": true,
                                                                "captureMenuScroll": false,
                                                                "className": null,
                                                                "classNamePrefix": undefined,
                                                                "closeMenuOnScroll": false,
                                                                "closeMenuOnSelect": true,
                                                                "components": Object {
                                                                  "Control": [Function],
                                                                  "Option": [Function],
                                                                },
                                                                "controlShouldRenderValue": true,
                                                                "escapeClearsValue": false,
                                                                "filterOption": [Function],
                                                                "formatGroupLabel": [Function],
                                                                "getOptionLabel": [Function],
                                                                "getOptionValue": [Function],
                                                                "inputId": null,
                                                                "inputValue": "",
                                                                "isDisabled": null,
                                                                "isLoading": false,
                                                                "isMulti": false,
                                                                "isOptionDisabled": [Function],
                                                                "isRtl": false,
                                                                "isSearchable": true,
                                                                "labelText": "Inventory status",
                                                                "loadingMessage": [Function],
                                                                "maxMenuHeight": "96px",
                                                                "menuIsOpen": false,
                                                                "menuPlacement": "bottom",
                                                                "menuPosition": "absolute",
                                                                "menuShouldBlockScroll": false,
                                                                "menuShouldScrollIntoView": true,
                                                                "minMenuHeight": 140,
                                                                "name": undefined,
                                                                "noOptionsMessage": [Function],
                                                                "onBlur": undefined,
                                                                "onChange": [Function],
                                                                "onInputChange": [Function],
                                                                "onMenuClose": [Function],
                                                                "onMenuOpen": [Function],
                                                                "openMenuOnClick": true,
                                                                "openMenuOnFocus": false,
                                                                "options": Array [
                                                                  Object {
                                                                    "label": "Accepted",
                                                                    "value": "accepted",
                                                                  },
                                                                  Object {
                                                                    "label": "Assigned to a line",
                                                                    "value": "assigned",
                                                                  },
                                                                  Object {
                                                                    "label": "On hold",
                                                                    "value": "hold",
                                                                  },
                                                                  Object {
                                                                    "label": "Rejected",
                                                                    "value": "rejected",
                                                                  },
                                                                  Object {
                                                                    "label": "Open",
                                                                    "value": "open",
                                                                  },
                                                                  Object {
                                                                    "label": "In progress",
                                                                    "value": "progress",
                                                                  },
                                                                  Object {
                                                                    "label": "In quarantine",
                                                                    "value": "quarantine",
                                                                  },
                                                                ],
                                                                "pageSize": 5,
                                                                "placeholder": "Please select inventory status",
                                                                "screenReaderStatus": [Function],
                                                                "styles": Object {
                                                                  "control": [Function],
                                                                  "dropdownIndicator": [Function],
                                                                  "indicatorSeparator": [Function],
                                                                  "input": [Function],
                                                                  "menu": [Function],
                                                                  "menuList": [Function],
                                                                  "multiValue": [Function],
                                                                  "multiValueLabel": [Function],
                                                                  "multiValueRemove": [Function],
                                                                  "noOptionsMessage": [Function],
                                                                  "option": [Function],
                                                                  "placeholder": [Function],
                                                                  "valueContainer": [Function],
                                                                },
                                                                "tabIndex": "0",
                                                                "tabSelectsValue": true,
                                                                "value": null,
                                                              }
                                                            }
                                                            setValue={[Function]}
                                                            theme={
                                                              Object {
                                                                "borderRadius": 4,
                                                                "colors": Object {
                                                                  "danger": "#DE350B",
                                                                  "dangerLight": "#FFBDAD",
                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                  "primary": "#2684FF",
                                                                  "primary25": "#DEEBFF",
                                                                  "primary50": "#B2D4FF",
                                                                  "primary75": "#4C9AFF",
                                                                },
                                                                "spacing": Object {
                                                                  "baseUnit": 4,
                                                                  "controlHeight": 38,
                                                                  "menuGutter": 8,
                                                                },
                                                              }
                                                            }
                                                          >
                                                            <EmotionCssPropInternal
                                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                              className=""
                                                              css={
                                                                Object {
                                                                  "boxSizing": "border-box",
                                                                  "direction": null,
                                                                  "label": "container",
                                                                  "pointerEvents": null,
                                                                  "position": "relative",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                            >
                                                              <div
                                                                className=" css-2b097c-container"
                                                                onKeyDown={[Function]}
                                                              >
                                                                <Control
                                                                  clearValue={[Function]}
                                                                  cx={[Function]}
                                                                  getStyles={[Function]}
                                                                  getValue={[Function]}
                                                                  hasValue={false}
                                                                  innerProps={
                                                                    Object {
                                                                      "onMouseDown": [Function],
                                                                      "onTouchEnd": [Function],
                                                                    }
                                                                  }
                                                                  innerRef={[Function]}
                                                                  isDisabled={null}
                                                                  isFocused={false}
                                                                  isMulti={false}
                                                                  isRtl={false}
                                                                  menuIsOpen={false}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Accepted",
                                                                        "value": "accepted",
                                                                      },
                                                                      Object {
                                                                        "label": "Assigned to a line",
                                                                        "value": "assigned",
                                                                      },
                                                                      Object {
                                                                        "label": "On hold",
                                                                        "value": "hold",
                                                                      },
                                                                      Object {
                                                                        "label": "Rejected",
                                                                        "value": "rejected",
                                                                      },
                                                                      Object {
                                                                        "label": "Open",
                                                                        "value": "open",
                                                                      },
                                                                      Object {
                                                                        "label": "In progress",
                                                                        "value": "progress",
                                                                      },
                                                                      Object {
                                                                        "label": "In quarantine",
                                                                        "value": "quarantine",
                                                                      },
                                                                    ]
                                                                  }
                                                                  selectOption={[Function]}
                                                                  selectProps={
                                                                    Object {
                                                                      "aria-invalid": false,
                                                                      "aria-required": false,
                                                                      "backspaceRemovesValue": true,
                                                                      "blurInputOnSelect": true,
                                                                      "captureMenuScroll": false,
                                                                      "className": null,
                                                                      "classNamePrefix": undefined,
                                                                      "closeMenuOnScroll": false,
                                                                      "closeMenuOnSelect": true,
                                                                      "components": Object {
                                                                        "Control": [Function],
                                                                        "Option": [Function],
                                                                      },
                                                                      "controlShouldRenderValue": true,
                                                                      "escapeClearsValue": false,
                                                                      "filterOption": [Function],
                                                                      "formatGroupLabel": [Function],
                                                                      "getOptionLabel": [Function],
                                                                      "getOptionValue": [Function],
                                                                      "inputId": null,
                                                                      "inputValue": "",
                                                                      "isDisabled": null,
                                                                      "isLoading": false,
                                                                      "isMulti": false,
                                                                      "isOptionDisabled": [Function],
                                                                      "isRtl": false,
                                                                      "isSearchable": true,
                                                                      "labelText": "Inventory status",
                                                                      "loadingMessage": [Function],
                                                                      "maxMenuHeight": "96px",
                                                                      "menuIsOpen": false,
                                                                      "menuPlacement": "bottom",
                                                                      "menuPosition": "absolute",
                                                                      "menuShouldBlockScroll": false,
                                                                      "menuShouldScrollIntoView": true,
                                                                      "minMenuHeight": 140,
                                                                      "name": undefined,
                                                                      "noOptionsMessage": [Function],
                                                                      "onBlur": undefined,
                                                                      "onChange": [Function],
                                                                      "onInputChange": [Function],
                                                                      "onMenuClose": [Function],
                                                                      "onMenuOpen": [Function],
                                                                      "openMenuOnClick": true,
                                                                      "openMenuOnFocus": false,
                                                                      "options": Array [
                                                                        Object {
                                                                          "label": "Accepted",
                                                                          "value": "accepted",
                                                                        },
                                                                        Object {
                                                                          "label": "Assigned to a line",
                                                                          "value": "assigned",
                                                                        },
                                                                        Object {
                                                                          "label": "On hold",
                                                                          "value": "hold",
                                                                        },
                                                                        Object {
                                                                          "label": "Rejected",
                                                                          "value": "rejected",
                                                                        },
                                                                        Object {
                                                                          "label": "Open",
                                                                          "value": "open",
                                                                        },
                                                                        Object {
                                                                          "label": "In progress",
                                                                          "value": "progress",
                                                                        },
                                                                        Object {
                                                                          "label": "In quarantine",
                                                                          "value": "quarantine",
                                                                        },
                                                                      ],
                                                                      "pageSize": 5,
                                                                      "placeholder": "Please select inventory status",
                                                                      "screenReaderStatus": [Function],
                                                                      "styles": Object {
                                                                        "control": [Function],
                                                                        "dropdownIndicator": [Function],
                                                                        "indicatorSeparator": [Function],
                                                                        "input": [Function],
                                                                        "menu": [Function],
                                                                        "menuList": [Function],
                                                                        "multiValue": [Function],
                                                                        "multiValueLabel": [Function],
                                                                        "multiValueRemove": [Function],
                                                                        "noOptionsMessage": [Function],
                                                                        "option": [Function],
                                                                        "placeholder": [Function],
                                                                        "valueContainer": [Function],
                                                                      },
                                                                      "tabIndex": "0",
                                                                      "tabSelectsValue": true,
                                                                      "value": null,
                                                                    }
                                                                  }
                                                                  setValue={[Function]}
                                                                  theme={
                                                                    Object {
                                                                      "borderRadius": 4,
                                                                      "colors": Object {
                                                                        "danger": "#DE350B",
                                                                        "dangerLight": "#FFBDAD",
                                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                                        "primary": "#2684FF",
                                                                        "primary25": "#DEEBFF",
                                                                        "primary50": "#B2D4FF",
                                                                        "primary75": "#4C9AFF",
                                                                      },
                                                                      "spacing": Object {
                                                                        "baseUnit": 4,
                                                                        "controlHeight": 38,
                                                                        "menuGutter": 8,
                                                                      },
                                                                    }
                                                                  }
                                                                >
                                                                  <Control
                                                                    className={null}
                                                                    clearValue={[Function]}
                                                                    cx={[Function]}
                                                                    getStyles={[Function]}
                                                                    getValue={[Function]}
                                                                    hasValue={false}
                                                                    innerProps={
                                                                      Object {
                                                                        "onMouseDown": [Function],
                                                                        "onTouchEnd": [Function],
                                                                      }
                                                                    }
                                                                    innerRef={[Function]}
                                                                    isDisabled={null}
                                                                    isFocused={false}
                                                                    isMulti={false}
                                                                    isRtl={false}
                                                                    menuIsOpen={false}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Accepted",
                                                                          "value": "accepted",
                                                                        },
                                                                        Object {
                                                                          "label": "Assigned to a line",
                                                                          "value": "assigned",
                                                                        },
                                                                        Object {
                                                                          "label": "On hold",
                                                                          "value": "hold",
                                                                        },
                                                                        Object {
                                                                          "label": "Rejected",
                                                                          "value": "rejected",
                                                                        },
                                                                        Object {
                                                                          "label": "Open",
                                                                          "value": "open",
                                                                        },
                                                                        Object {
                                                                          "label": "In progress",
                                                                          "value": "progress",
                                                                        },
                                                                        Object {
                                                                          "label": "In quarantine",
                                                                          "value": "quarantine",
                                                                        },
                                                                      ]
                                                                    }
                                                                    selectOption={[Function]}
                                                                    selectProps={
                                                                      Object {
                                                                        "aria-invalid": false,
                                                                        "aria-required": false,
                                                                        "backspaceRemovesValue": true,
                                                                        "blurInputOnSelect": true,
                                                                        "captureMenuScroll": false,
                                                                        "className": null,
                                                                        "classNamePrefix": undefined,
                                                                        "closeMenuOnScroll": false,
                                                                        "closeMenuOnSelect": true,
                                                                        "components": Object {
                                                                          "Control": [Function],
                                                                          "Option": [Function],
                                                                        },
                                                                        "controlShouldRenderValue": true,
                                                                        "escapeClearsValue": false,
                                                                        "filterOption": [Function],
                                                                        "formatGroupLabel": [Function],
                                                                        "getOptionLabel": [Function],
                                                                        "getOptionValue": [Function],
                                                                        "inputId": null,
                                                                        "inputValue": "",
                                                                        "isDisabled": null,
                                                                        "isLoading": false,
                                                                        "isMulti": false,
                                                                        "isOptionDisabled": [Function],
                                                                        "isRtl": false,
                                                                        "isSearchable": true,
                                                                        "labelText": "Inventory status",
                                                                        "loadingMessage": [Function],
                                                                        "maxMenuHeight": "96px",
                                                                        "menuIsOpen": false,
                                                                        "menuPlacement": "bottom",
                                                                        "menuPosition": "absolute",
                                                                        "menuShouldBlockScroll": false,
                                                                        "menuShouldScrollIntoView": true,
                                                                        "minMenuHeight": 140,
                                                                        "name": undefined,
                                                                        "noOptionsMessage": [Function],
                                                                        "onBlur": undefined,
                                                                        "onChange": [Function],
                                                                        "onInputChange": [Function],
                                                                        "onMenuClose": [Function],
                                                                        "onMenuOpen": [Function],
                                                                        "openMenuOnClick": true,
                                                                        "openMenuOnFocus": false,
                                                                        "options": Array [
                                                                          Object {
                                                                            "label": "Accepted",
                                                                            "value": "accepted",
                                                                          },
                                                                          Object {
                                                                            "label": "Assigned to a line",
                                                                            "value": "assigned",
                                                                          },
                                                                          Object {
                                                                            "label": "On hold",
                                                                            "value": "hold",
                                                                          },
                                                                          Object {
                                                                            "label": "Rejected",
                                                                            "value": "rejected",
                                                                          },
                                                                          Object {
                                                                            "label": "Open",
                                                                            "value": "open",
                                                                          },
                                                                          Object {
                                                                            "label": "In progress",
                                                                            "value": "progress",
                                                                          },
                                                                          Object {
                                                                            "label": "In quarantine",
                                                                            "value": "quarantine",
                                                                          },
                                                                        ],
                                                                        "pageSize": 5,
                                                                        "placeholder": "Please select inventory status",
                                                                        "screenReaderStatus": [Function],
                                                                        "styles": Object {
                                                                          "control": [Function],
                                                                          "dropdownIndicator": [Function],
                                                                          "indicatorSeparator": [Function],
                                                                          "input": [Function],
                                                                          "menu": [Function],
                                                                          "menuList": [Function],
                                                                          "multiValue": [Function],
                                                                          "multiValueLabel": [Function],
                                                                          "multiValueRemove": [Function],
                                                                          "noOptionsMessage": [Function],
                                                                          "option": [Function],
                                                                          "placeholder": [Function],
                                                                          "valueContainer": [Function],
                                                                        },
                                                                        "tabIndex": "0",
                                                                        "tabSelectsValue": true,
                                                                        "value": null,
                                                                      }
                                                                    }
                                                                    setValue={[Function]}
                                                                    theme={
                                                                      Object {
                                                                        "borderRadius": 4,
                                                                        "colors": Object {
                                                                          "danger": "#DE350B",
                                                                          "dangerLight": "#FFBDAD",
                                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                                          "primary": "#2684FF",
                                                                          "primary25": "#DEEBFF",
                                                                          "primary50": "#B2D4FF",
                                                                          "primary75": "#4C9AFF",
                                                                        },
                                                                        "spacing": Object {
                                                                          "baseUnit": 4,
                                                                          "controlHeight": 38,
                                                                          "menuGutter": 8,
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <EmotionCssPropInternal
                                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                      className=""
                                                                      css={
                                                                        Object {
                                                                          "&:hover, &:focus": Object {
                                                                            "borderColor": "#216beb",
                                                                          },
                                                                          "background": "#ffffff",
                                                                          "border": "1px solid #c0c8d1",
                                                                          "borderBottomLeftRadius": "4px",
                                                                          "borderBottomRightRadius": "4px",
                                                                          "borderColor": "#c0c8d1",
                                                                          "borderRadius": "4px",
                                                                          "boxShadow": null,
                                                                          "boxSizing": "border-box",
                                                                          "display": "flex",
                                                                          "fontFamily": "'IBM Plex Sans', sans-serif",
                                                                          "fontSize": "16px",
                                                                          "lineHeight": "1.5",
                                                                          "minHeight": "40px",
                                                                          "paddingLeft": "8px",
                                                                          "position": "relative",
                                                                          "width": "100%",
                                                                        }
                                                                      }
                                                                      onMouseDown={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                    >
                                                                      <div
                                                                        className=" css-1liu8yu-Control"
                                                                        onMouseDown={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                      >
                                                                        <ValueContainer
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={null}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "label": "Accepted",
                                                                                "value": "accepted",
                                                                              },
                                                                              Object {
                                                                                "label": "Assigned to a line",
                                                                                "value": "assigned",
                                                                              },
                                                                              Object {
                                                                                "label": "On hold",
                                                                                "value": "hold",
                                                                              },
                                                                              Object {
                                                                                "label": "Rejected",
                                                                                "value": "rejected",
                                                                              },
                                                                              Object {
                                                                                "label": "Open",
                                                                                "value": "open",
                                                                              },
                                                                              Object {
                                                                                "label": "In progress",
                                                                                "value": "progress",
                                                                              },
                                                                              Object {
                                                                                "label": "In quarantine",
                                                                                "value": "quarantine",
                                                                              },
                                                                            ]
                                                                          }
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-invalid": false,
                                                                              "aria-required": false,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": true,
                                                                              "captureMenuScroll": false,
                                                                              "className": null,
                                                                              "classNamePrefix": undefined,
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Control": [Function],
                                                                                "Option": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "inputId": null,
                                                                              "inputValue": "",
                                                                              "isDisabled": null,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "labelText": "Inventory status",
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": "96px",
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": undefined,
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": undefined,
                                                                              "onChange": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [
                                                                                Object {
                                                                                  "label": "Accepted",
                                                                                  "value": "accepted",
                                                                                },
                                                                                Object {
                                                                                  "label": "Assigned to a line",
                                                                                  "value": "assigned",
                                                                                },
                                                                                Object {
                                                                                  "label": "On hold",
                                                                                  "value": "hold",
                                                                                },
                                                                                Object {
                                                                                  "label": "Rejected",
                                                                                  "value": "rejected",
                                                                                },
                                                                                Object {
                                                                                  "label": "Open",
                                                                                  "value": "open",
                                                                                },
                                                                                Object {
                                                                                  "label": "In progress",
                                                                                  "value": "progress",
                                                                                },
                                                                                Object {
                                                                                  "label": "In quarantine",
                                                                                  "value": "quarantine",
                                                                                },
                                                                              ],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Please select inventory status",
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "control": [Function],
                                                                                "dropdownIndicator": [Function],
                                                                                "indicatorSeparator": [Function],
                                                                                "input": [Function],
                                                                                "menu": [Function],
                                                                                "menuList": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                                "noOptionsMessage": [Function],
                                                                                "option": [Function],
                                                                                "placeholder": [Function],
                                                                                "valueContainer": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#DE350B",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2684FF",
                                                                                "primary25": "#DEEBFF",
                                                                                "primary50": "#B2D4FF",
                                                                                "primary75": "#4C9AFF",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            className=""
                                                                            css={
                                                                              Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "alignItems": "center",
                                                                                "boxSizing": "border-box",
                                                                                "display": "flex",
                                                                                "flex": 1,
                                                                                "flexWrap": "wrap",
                                                                                "maxHeight": "150px",
                                                                                "overflow": "auto",
                                                                                "padding": 0,
                                                                                "position": "relative",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className=" css-7zc8my"
                                                                            >
                                                                              <Placeholder
                                                                                clearValue={[Function]}
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                getValue={[Function]}
                                                                                hasValue={false}
                                                                                isDisabled={null}
                                                                                isFocused={false}
                                                                                isMulti={false}
                                                                                isRtl={false}
                                                                                key="placeholder"
                                                                                options={
                                                                                  Array [
                                                                                    Object {
                                                                                      "label": "Accepted",
                                                                                      "value": "accepted",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Assigned to a line",
                                                                                      "value": "assigned",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "On hold",
                                                                                      "value": "hold",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Rejected",
                                                                                      "value": "rejected",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Open",
                                                                                      "value": "open",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In progress",
                                                                                      "value": "progress",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In quarantine",
                                                                                      "value": "quarantine",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                                selectOption={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                setValue={[Function]}
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                                  className=""
                                                                                  css={
                                                                                    Object {
                                                                                      "color": "hsl(0,0%,50%)",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className=" css-1yhx6vz-Placeholder"
                                                                                  >
                                                                                    Please select inventory status
                                                                                  </div>
                                                                                </EmotionCssPropInternal>
                                                                              </Placeholder>
                                                                              <Input
                                                                                aria-autocomplete="list"
                                                                                autoCapitalize="none"
                                                                                autoComplete="off"
                                                                                autoCorrect="off"
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                id="react-select-12-input"
                                                                                innerRef={[Function]}
                                                                                isDisabled={null}
                                                                                isHidden={false}
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                spellCheck="false"
                                                                                tabIndex="0"
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                                type="text"
                                                                                value=""
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                                  css={Object {}}
                                                                                >
                                                                                  <div
                                                                                    className="css-17yls17-Input"
                                                                                  >
                                                                                    <AutosizeInput
                                                                                      aria-autocomplete="list"
                                                                                      autoCapitalize="none"
                                                                                      autoComplete="off"
                                                                                      autoCorrect="off"
                                                                                      className=""
                                                                                      disabled={null}
                                                                                      id="react-select-12-input"
                                                                                      injectStyles={true}
                                                                                      inputRef={[Function]}
                                                                                      inputStyle={
                                                                                        Object {
                                                                                          "background": 0,
                                                                                          "border": 0,
                                                                                          "color": "inherit",
                                                                                          "fontSize": "inherit",
                                                                                          "label": "input",
                                                                                          "opacity": 1,
                                                                                          "outline": 0,
                                                                                          "padding": 0,
                                                                                        }
                                                                                      }
                                                                                      minWidth={1}
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      spellCheck="false"
                                                                                      tabIndex="0"
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <div
                                                                                        className=""
                                                                                        style={
                                                                                          Object {
                                                                                            "display": "inline-block",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <input
                                                                                          aria-autocomplete="list"
                                                                                          autoCapitalize="none"
                                                                                          autoComplete="off"
                                                                                          autoCorrect="off"
                                                                                          disabled={null}
                                                                                          id="react-select-12-input"
                                                                                          onBlur={[Function]}
                                                                                          onChange={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          spellCheck="false"
                                                                                          style={
                                                                                            Object {
                                                                                              "background": 0,
                                                                                              "border": 0,
                                                                                              "boxSizing": "content-box",
                                                                                              "color": "inherit",
                                                                                              "fontSize": "inherit",
                                                                                              "label": "input",
                                                                                              "opacity": 1,
                                                                                              "outline": 0,
                                                                                              "padding": 0,
                                                                                              "width": "2px",
                                                                                            }
                                                                                          }
                                                                                          tabIndex="0"
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                        <div
                                                                                          style={
                                                                                            Object {
                                                                                              "height": 0,
                                                                                              "left": 0,
                                                                                              "overflow": "scroll",
                                                                                              "position": "absolute",
                                                                                              "top": 0,
                                                                                              "visibility": "hidden",
                                                                                              "whiteSpace": "pre",
                                                                                            }
                                                                                          }
                                                                                        />
                                                                                      </div>
                                                                                    </AutosizeInput>
                                                                                  </div>
                                                                                </EmotionCssPropInternal>
                                                                              </Input>
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </ValueContainer>
                                                                        <IndicatorsContainer
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={null}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "label": "Accepted",
                                                                                "value": "accepted",
                                                                              },
                                                                              Object {
                                                                                "label": "Assigned to a line",
                                                                                "value": "assigned",
                                                                              },
                                                                              Object {
                                                                                "label": "On hold",
                                                                                "value": "hold",
                                                                              },
                                                                              Object {
                                                                                "label": "Rejected",
                                                                                "value": "rejected",
                                                                              },
                                                                              Object {
                                                                                "label": "Open",
                                                                                "value": "open",
                                                                              },
                                                                              Object {
                                                                                "label": "In progress",
                                                                                "value": "progress",
                                                                              },
                                                                              Object {
                                                                                "label": "In quarantine",
                                                                                "value": "quarantine",
                                                                              },
                                                                            ]
                                                                          }
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-invalid": false,
                                                                              "aria-required": false,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": true,
                                                                              "captureMenuScroll": false,
                                                                              "className": null,
                                                                              "classNamePrefix": undefined,
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Control": [Function],
                                                                                "Option": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "inputId": null,
                                                                              "inputValue": "",
                                                                              "isDisabled": null,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "labelText": "Inventory status",
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": "96px",
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": undefined,
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": undefined,
                                                                              "onChange": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [
                                                                                Object {
                                                                                  "label": "Accepted",
                                                                                  "value": "accepted",
                                                                                },
                                                                                Object {
                                                                                  "label": "Assigned to a line",
                                                                                  "value": "assigned",
                                                                                },
                                                                                Object {
                                                                                  "label": "On hold",
                                                                                  "value": "hold",
                                                                                },
                                                                                Object {
                                                                                  "label": "Rejected",
                                                                                  "value": "rejected",
                                                                                },
                                                                                Object {
                                                                                  "label": "Open",
                                                                                  "value": "open",
                                                                                },
                                                                                Object {
                                                                                  "label": "In progress",
                                                                                  "value": "progress",
                                                                                },
                                                                                Object {
                                                                                  "label": "In quarantine",
                                                                                  "value": "quarantine",
                                                                                },
                                                                              ],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Please select inventory status",
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "control": [Function],
                                                                                "dropdownIndicator": [Function],
                                                                                "indicatorSeparator": [Function],
                                                                                "input": [Function],
                                                                                "menu": [Function],
                                                                                "menuList": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                                "noOptionsMessage": [Function],
                                                                                "option": [Function],
                                                                                "placeholder": [Function],
                                                                                "valueContainer": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#DE350B",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2684FF",
                                                                                "primary25": "#DEEBFF",
                                                                                "primary50": "#B2D4FF",
                                                                                "primary75": "#4C9AFF",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            className=""
                                                                            css={
                                                                              Object {
                                                                                "alignItems": "center",
                                                                                "alignSelf": "stretch",
                                                                                "boxSizing": "border-box",
                                                                                "display": "flex",
                                                                                "flexShrink": 0,
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className=" css-1hb7zxy-IndicatorsContainer"
                                                                            >
                                                                              <IndicatorSeparator
                                                                                clearValue={[Function]}
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                getValue={[Function]}
                                                                                hasValue={false}
                                                                                isDisabled={null}
                                                                                isFocused={false}
                                                                                isMulti={false}
                                                                                isRtl={false}
                                                                                options={
                                                                                  Array [
                                                                                    Object {
                                                                                      "label": "Accepted",
                                                                                      "value": "accepted",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Assigned to a line",
                                                                                      "value": "assigned",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "On hold",
                                                                                      "value": "hold",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Rejected",
                                                                                      "value": "rejected",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Open",
                                                                                      "value": "open",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In progress",
                                                                                      "value": "progress",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In quarantine",
                                                                                      "value": "quarantine",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                                selectOption={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                setValue={[Function]}
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                                                  className=""
                                                                                  css={
                                                                                    Object {
                                                                                      "alignSelf": "stretch",
                                                                                      "backgroundColor": "hsl(0, 0%, 80%)",
                                                                                      "boxSizing": "border-box",
                                                                                      "display": "none",
                                                                                      "label": "indicatorSeparator",
                                                                                      "marginBottom": 8,
                                                                                      "marginTop": 8,
                                                                                      "width": 1,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className=" css-43ykx9-indicatorSeparator"
                                                                                  />
                                                                                </EmotionCssPropInternal>
                                                                              </IndicatorSeparator>
                                                                              <DropdownIndicator
                                                                                clearValue={[Function]}
                                                                                cx={[Function]}
                                                                                getStyles={[Function]}
                                                                                getValue={[Function]}
                                                                                hasValue={false}
                                                                                innerProps={
                                                                                  Object {
                                                                                    "aria-hidden": "true",
                                                                                    "onMouseDown": [Function],
                                                                                    "onTouchEnd": [Function],
                                                                                  }
                                                                                }
                                                                                isDisabled={null}
                                                                                isFocused={false}
                                                                                isMulti={false}
                                                                                isRtl={false}
                                                                                options={
                                                                                  Array [
                                                                                    Object {
                                                                                      "label": "Accepted",
                                                                                      "value": "accepted",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Assigned to a line",
                                                                                      "value": "assigned",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "On hold",
                                                                                      "value": "hold",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Rejected",
                                                                                      "value": "rejected",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "Open",
                                                                                      "value": "open",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In progress",
                                                                                      "value": "progress",
                                                                                    },
                                                                                    Object {
                                                                                      "label": "In quarantine",
                                                                                      "value": "quarantine",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                                selectOption={[Function]}
                                                                                selectProps={
                                                                                  Object {
                                                                                    "aria-invalid": false,
                                                                                    "aria-required": false,
                                                                                    "backspaceRemovesValue": true,
                                                                                    "blurInputOnSelect": true,
                                                                                    "captureMenuScroll": false,
                                                                                    "className": null,
                                                                                    "classNamePrefix": undefined,
                                                                                    "closeMenuOnScroll": false,
                                                                                    "closeMenuOnSelect": true,
                                                                                    "components": Object {
                                                                                      "Control": [Function],
                                                                                      "Option": [Function],
                                                                                    },
                                                                                    "controlShouldRenderValue": true,
                                                                                    "escapeClearsValue": false,
                                                                                    "filterOption": [Function],
                                                                                    "formatGroupLabel": [Function],
                                                                                    "getOptionLabel": [Function],
                                                                                    "getOptionValue": [Function],
                                                                                    "inputId": null,
                                                                                    "inputValue": "",
                                                                                    "isDisabled": null,
                                                                                    "isLoading": false,
                                                                                    "isMulti": false,
                                                                                    "isOptionDisabled": [Function],
                                                                                    "isRtl": false,
                                                                                    "isSearchable": true,
                                                                                    "labelText": "Inventory status",
                                                                                    "loadingMessage": [Function],
                                                                                    "maxMenuHeight": "96px",
                                                                                    "menuIsOpen": false,
                                                                                    "menuPlacement": "bottom",
                                                                                    "menuPosition": "absolute",
                                                                                    "menuShouldBlockScroll": false,
                                                                                    "menuShouldScrollIntoView": true,
                                                                                    "minMenuHeight": 140,
                                                                                    "name": undefined,
                                                                                    "noOptionsMessage": [Function],
                                                                                    "onBlur": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onInputChange": [Function],
                                                                                    "onMenuClose": [Function],
                                                                                    "onMenuOpen": [Function],
                                                                                    "openMenuOnClick": true,
                                                                                    "openMenuOnFocus": false,
                                                                                    "options": Array [
                                                                                      Object {
                                                                                        "label": "Accepted",
                                                                                        "value": "accepted",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Assigned to a line",
                                                                                        "value": "assigned",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "On hold",
                                                                                        "value": "hold",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Rejected",
                                                                                        "value": "rejected",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "Open",
                                                                                        "value": "open",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In progress",
                                                                                        "value": "progress",
                                                                                      },
                                                                                      Object {
                                                                                        "label": "In quarantine",
                                                                                        "value": "quarantine",
                                                                                      },
                                                                                    ],
                                                                                    "pageSize": 5,
                                                                                    "placeholder": "Please select inventory status",
                                                                                    "screenReaderStatus": [Function],
                                                                                    "styles": Object {
                                                                                      "control": [Function],
                                                                                      "dropdownIndicator": [Function],
                                                                                      "indicatorSeparator": [Function],
                                                                                      "input": [Function],
                                                                                      "menu": [Function],
                                                                                      "menuList": [Function],
                                                                                      "multiValue": [Function],
                                                                                      "multiValueLabel": [Function],
                                                                                      "multiValueRemove": [Function],
                                                                                      "noOptionsMessage": [Function],
                                                                                      "option": [Function],
                                                                                      "placeholder": [Function],
                                                                                      "valueContainer": [Function],
                                                                                    },
                                                                                    "tabIndex": "0",
                                                                                    "tabSelectsValue": true,
                                                                                    "value": null,
                                                                                  }
                                                                                }
                                                                                setValue={[Function]}
                                                                                theme={
                                                                                  Object {
                                                                                    "borderRadius": 4,
                                                                                    "colors": Object {
                                                                                      "danger": "#DE350B",
                                                                                      "dangerLight": "#FFBDAD",
                                                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                                                      "primary": "#2684FF",
                                                                                      "primary25": "#DEEBFF",
                                                                                      "primary50": "#B2D4FF",
                                                                                      "primary75": "#4C9AFF",
                                                                                    },
                                                                                    "spacing": Object {
                                                                                      "baseUnit": 4,
                                                                                      "controlHeight": 38,
                                                                                      "menuGutter": 8,
                                                                                    },
                                                                                  }
                                                                                }
                                                                              >
                                                                                <EmotionCssPropInternal
                                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                                  aria-hidden="true"
                                                                                  className=""
                                                                                  css={
                                                                                    Object {
                                                                                      ":hover": Object {
                                                                                        "color": "hsl(0, 0%, 60%)",
                                                                                      },
                                                                                      "boxSizing": "border-box",
                                                                                      "color": "#c0c8d1",
                                                                                      "display": "flex",
                                                                                      "label": "indicatorContainer",
                                                                                      "padding": 8,
                                                                                      "transition": "color 150ms",
                                                                                    }
                                                                                  }
                                                                                  onMouseDown={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                >
                                                                                  <div
                                                                                    aria-hidden="true"
                                                                                    className=" css-1fi275-indicatorContainer"
                                                                                    onMouseDown={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                  >
                                                                                    <DownChevron>
                                                                                      <Svg
                                                                                        size={20}
                                                                                      >
                                                                                        <EmotionCssPropInternal
                                                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                                                          aria-hidden="true"
                                                                                          css={
                                                                                            Object {
                                                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                                                              "name": "19bqh2r",
                                                                                              "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                                                            }
                                                                                          }
                                                                                          focusable="false"
                                                                                          height={20}
                                                                                          viewBox="0 0 20 20"
                                                                                          width={20}
                                                                                        >
                                                                                          <svg
                                                                                            aria-hidden="true"
                                                                                            className="css-6q0nyr-Svg"
                                                                                            focusable="false"
                                                                                            height={20}
                                                                                            viewBox="0 0 20 20"
                                                                                            width={20}
                                                                                          >
                                                                                            <path
                                                                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                                            />
                                                                                          </svg>
                                                                                        </EmotionCssPropInternal>
                                                                                      </Svg>
                                                                                    </DownChevron>
                                                                                  </div>
                                                                                </EmotionCssPropInternal>
                                                                              </DropdownIndicator>
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </IndicatorsContainer>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </Control>
                                                                </Control>
                                                              </div>
                                                            </EmotionCssPropInternal>
                                                          </SelectContainer>
                                                        </Select>
                                                      </StateManager>
                                                      <InlineValidation
                                                        errorList={null}
                                                        errorMessage={null}
                                                        mt="x1"
                                                      />
                                                    </label>
                                                  </FieldLabel__Label>
                                                </BaseFieldLabel>
                                              </Styled(BaseFieldLabel)>
                                            </MaybeFieldLabel>
                                          </div>
                                        </Styled(Box)>
                                      </ReactSelect>
                                    </form>
                                  </BaseForm>
                                </Styled(BaseForm)>
                              </div>
                            </Modal__ModalContent>
                            <Modal__ModalFooter>
                              <div
                                className="Modal__ModalFooter-cvhury-2 gnCyAa"
                              >
                                <ButtonGroup
                                  alignment="left"
                                >
                                  <div
                                    className="ButtonGroup-xkz195-0 jMubZv"
                                  >
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-AykKK fmyQGk"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-AykKK fmyQGk"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-AykKK fmyQGk"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Add job to line
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                    <Styled(Component)>
                                      <ForwardRef
                                        asLink={false}
                                        className="sc-fzXfLP eLLQgR"
                                        disabled={false}
                                        fullWidth={false}
                                        icon={null}
                                        iconSide="right"
                                        size="medium"
                                      >
                                        <Button__WrapperButton
                                          className="sc-fzXfLP eLLQgR"
                                          disabled={false}
                                          fullWidth={false}
                                          size="medium"
                                        >
                                          <button
                                            className="Button__WrapperButton-sc-1omxup2-0 kpKTNa sc-fzXfLP eLLQgR"
                                            disabled={false}
                                            size="medium"
                                          >
                                            Cancel
                                          </button>
                                        </Button__WrapperButton>
                                      </ForwardRef>
                                    </Styled(Component)>
                                  </div>
                                </ButtonGroup>
                              </div>
                            </Modal__ModalFooter>
                          </PreventBodyElementScrolling>
                        </div>
                      </div>
                    </ModalPortal>
                  </Portal>
                </Modal>
              </Styled(Modal)>
            </Modal>
          </Modal>
        </ThemeProvider>
      </div>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;
