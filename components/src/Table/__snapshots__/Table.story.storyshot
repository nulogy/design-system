// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Table with everything 1`] = `
<div
  style="padding:24px"
>
  <div
    class="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
  >
    <table
      class="BaseTable__StyledTable-sc-10lnp9m-0 dvrgBW"
    >
      <thead>
        <tr
          class="TableHead__StyledHeaderRow-msr3t5-0 kngHIX"
        >
          <th
            class="StyledTh-sc-10nzyk9-0 iEwgEs"
            scope="col"
            width="30px"
          >
            <div
              class="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
            >
              <label
                class="ClickInputLabel-j2axnv-0 hdKIjC"
              >
                <input
                  aria-invalid="false"
                  aria-label="deselect all"
                  aria-required="false"
                  class="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                  type="checkbox"
                />
                <div
                  class="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                />
              </label>
            </div>
          </th>
          <th
            class="StyledTh-sc-10nzyk9-0 iEwgEs"
            scope="col"
            width="30px"
          />
          <th
            class="StyledTh-sc-10nzyk9-0 jzRkfM"
            scope="col"
            width="15%"
          >
            Date
          </th>
          <th
            class="StyledTh-sc-10nzyk9-0 jzYsmw"
            scope="col"
            width="20%"
          >
            Expected Quantity
          </th>
          <th
            class="StyledTh-sc-10nzyk9-0 jzYsmw"
            scope="col"
            width="20%"
          >
            Actual Quantity
          </th>
          <th
            class="StyledTh-sc-10nzyk9-0 jAqzSn"
            scope="col"
            width="45%"
          >
            Note
          </th>
          <th
            class="StyledTh-sc-10nzyk9-0 iiuyMH"
            scope="col"
            width="5%"
          />
        </tr>
      </thead>
      <tbody>
        <tr
          class="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
        >
          <td
            colspan="7"
          >
            <div
              class="Box-sc-1qu1edy-0 fGWNgD"
            >
              <p
                class="sc-AykKF eruAHZ"
                color="blackBlue"
                font-size="16px"
                font-weight="bold"
              >
                ABC & XYZ Company
              </p>
            </div>
          </td>
        </tr>
        <tr
          class="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
        >
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            <div
              class="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
            >
              <label
                class="ClickInputLabel-j2axnv-0 hdKIjC"
              >
                <input
                  aria-invalid="false"
                  aria-label="deselect row"
                  aria-required="false"
                  class="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                  type="checkbox"
                />
                <div
                  class="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                />
              </label>
            </div>
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            <button
              aria-label="expand row"
              class="ControlIcon__StyledButton-sc-1h83lvi-0 fMjedc"
            >
              <svg
                aria-hidden="true"
                class="sc-AykKD ceXkCz"
                color="currentColor"
                fill="currentColor"
                focusable="false"
                height="32px"
                icon="downArrow"
                viewBox="0 0 24 24"
                width="32px"
              >
                <path
                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                />
              </svg>
            </button>
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            Tue, 01 Oct 2019
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            2,025 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            1,800 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td>
            <div
              class="Box-sc-1qu1edy-0 dqSmZd"
            >
              <button
                aria-expanded="false"
                aria-haspopup="true"
                aria-label="open"
                class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  class="sc-AykKD kaUxeX"
                  color="currentColor"
                  fill="currentColor"
                  focusable="false"
                  height="32px"
                  icon="more"
                  p="half"
                  viewBox="0 0 24 24"
                  width="32px"
                >
<<<<<<< HEAD
                  <BaseTable__StyledTable>
                    <table
                      className="BaseTable__StyledTable-sc-10lnp9m-0 dvrgBW"
                    >
                      <TableHead
                        columns={
                          Array [
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "selected",
                              "headerFormatter": [Function],
                              "width": "30px",
                            },
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "expanded",
                              "width": "30px",
                            },
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "date",
                              "label": "Date",
                              "width": "15%",
                            },
                            Object {
                              "dataKey": "expectedQuantity",
                              "label": "Expected Quantity",
                              "width": "20%",
                            },
                            Object {
                              "dataKey": "actualQuantity",
                              "label": "Actual Quantity",
                              "width": "20%",
                            },
                            Object {
                              "dataKey": "note",
                              "label": "Note",
                              "width": "45%",
                            },
                            Object {
                              "cellRenderer": [Function],
                              "dataKey": "actions",
                              "label": "",
                              "width": "5%",
                            },
                          ]
                        }
                        compact={false}
                      >
                        <thead>
                          <TableHead__StyledHeaderRow>
                            <tr
                              className="TableHead__StyledHeaderRow-msr3t5-0 kngHIX"
                            >
                              <StyledTh
                                compact={false}
                                key="selected"
                                scope="col"
                                width="30px"
                              >
                                <th
                                  className="StyledTh-sc-10nzyk9-0 iEwgEs"
                                  scope="col"
                                  width="30px"
                                >
                                  <Styled(BaseCheckbox)
                                    aria-label="deselect all"
                                    checked={false}
                                    disabled={false}
                                    error={false}
                                    id={null}
                                    onChange={[Function]}
                                    required={false}
                                  >
                                    <BaseCheckbox
                                      aria-label="deselect all"
                                      checked={false}
                                      className="sc-fzXfNc bSPfCk"
                                      disabled={false}
                                      error={false}
                                      id={null}
                                      onChange={[Function]}
                                      required={false}
                                    >
                                      <Box
                                        className="sc-fzXfNc bSPfCk"
                                        theme={
                                          Object {
                                            "borders": Array [],
                                            "breakpoints": Object {
                                              "extraLarge": "1920px",
                                              "extraSmall": "0px",
                                              "large": "1360px",
                                              "medium": "1024px",
                                              "small": "768px",
                                            },
                                            "colors": Object {
                                              "black": "#011e38",
                                              "blackBlue": "#122b47",
                                              "blue": "#216beb",
                                              "darkBlue": "#00438f",
                                              "darkGrey": "#434d59",
                                              "green": "#008059",
                                              "grey": "#c0c8d1",
                                              "lightBlue": "#e1ebfa",
                                              "lightGreen": "#e9f7f2",
                                              "lightGrey": "#e4e7eb",
                                              "lightRed": "#fae6ea",
                                              "lightYellow": "#fcf5e3",
                                              "red": "#cc1439",
                                              "white": "#ffffff",
                                              "whiteGrey": "#f0f2f5",
                                              "yellow": "#ffbb00",
                                            },
                                            "fontSizes": Object {
                                              "large": "20px",
                                              "larger": "26px",
                                              "largest": "46px",
                                              "medium": "16px",
                                              "small": "14px",
                                              "smaller": "12px",
                                            },
                                            "fontWeights": Object {
                                              "bold": "600",
                                              "light": "300",
                                              "medium": "500",
                                              "normal": "400",
                                            },
                                            "fonts": Object {
                                              "base": "'IBM Plex Sans', sans-serif",
                                              "mono": "'IBM Plex Mono', monospace",
                                            },
                                            "lineHeights": Object {
                                              "base": "1.5",
                                              "sectionTitle": "1.23076923",
                                              "smallTextBase": "1.71428571",
                                              "smallTextCompressed": "1.14285714",
                                              "smallerText": "1.33333333",
                                              "subsectionTitle": "1.2",
                                              "title": "1.04347826",
                                            },
                                            "radii": Object {
                                              "circle": "50%",
                                              "medium": "4px",
                                              "small": "2px",
                                            },
                                            "shadows": Object {
                                              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                            },
                                            "space": Object {
                                              "half": "4px",
                                              "none": "0px",
                                              "x1": "8px",
                                              "x2": "16px",
                                              "x3": "24px",
                                              "x4": "32px",
                                              "x5": "40px",
                                              "x6": "48px",
                                              "x8": "64px",
                                            },
                                            "zIndex": Object {
                                              "content": 100,
                                              "overlay": 1000,
                                              "tabsBar": 210,
                                              "tabsScollIndicator": 200,
                                            },
                                          }
                                        }
                                      >
                                        <div
                                          className="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
                                        >
                                          <ClickInputLabel
                                            disabled={false}
                                          >
                                            <label
                                              className="ClickInputLabel-j2axnv-0 hdKIjC"
                                              disabled={false}
                                            >
                                              <Checkbox__CheckboxInput
                                                aria-invalid={false}
                                                aria-label="deselect all"
                                                aria-required={false}
                                                checked={false}
                                                className="sc-fzXfNc bSPfCk"
                                                disabled={false}
                                                error={false}
                                                id={null}
                                                onChange={[Function]}
                                                required={false}
                                                type="checkbox"
                                              >
                                                <input
                                                  aria-invalid={false}
                                                  aria-label="deselect all"
                                                  aria-required={false}
                                                  checked={false}
                                                  className="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                                                  disabled={false}
                                                  id={null}
                                                  onChange={[Function]}
                                                  required={false}
                                                  type="checkbox"
                                                />
                                              </Checkbox__CheckboxInput>
                                              <Checkbox__VisualCheckbox
                                                checked={false}
                                                disabled={false}
                                              >
                                                <div
                                                  checked={false}
                                                  className="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                                                  disabled={false}
                                                />
                                              </Checkbox__VisualCheckbox>
                                            </label>
                                          </ClickInputLabel>
                                        </div>
                                      </Box>
                                    </BaseCheckbox>
                                  </Styled(BaseCheckbox)>
                                </th>
                              </StyledTh>
                              <StyledTh
                                compact={false}
                                key="expanded"
                                scope="col"
                                width="30px"
                              >
                                <th
                                  className="StyledTh-sc-10nzyk9-0 iEwgEs"
                                  scope="col"
                                  width="30px"
                                />
                              </StyledTh>
                              <StyledTh
                                compact={false}
                                key="date"
                                scope="col"
                                width="15%"
                              >
                                <th
                                  className="StyledTh-sc-10nzyk9-0 jzRkfM"
                                  scope="col"
                                  width="15%"
                                >
                                  Date
                                </th>
                              </StyledTh>
                              <StyledTh
                                compact={false}
                                key="expectedQuantity"
                                scope="col"
                                width="20%"
                              >
                                <th
                                  className="StyledTh-sc-10nzyk9-0 jzYsmw"
                                  scope="col"
                                  width="20%"
                                >
                                  Expected Quantity
                                </th>
                              </StyledTh>
                              <StyledTh
                                compact={false}
                                key="actualQuantity"
                                scope="col"
                                width="20%"
                              >
                                <th
                                  className="StyledTh-sc-10nzyk9-0 jzYsmw"
                                  scope="col"
                                  width="20%"
                                >
                                  Actual Quantity
                                </th>
                              </StyledTh>
                              <StyledTh
                                compact={false}
                                key="note"
                                scope="col"
                                width="45%"
                              >
                                <th
                                  className="StyledTh-sc-10nzyk9-0 jAqzSn"
                                  scope="col"
                                  width="45%"
                                >
                                  Note
                                </th>
                              </StyledTh>
                              <StyledTh
                                compact={false}
                                key="actions"
                                scope="col"
                                width="5%"
                              >
                                <th
                                  className="StyledTh-sc-10nzyk9-0 iiuyMH"
                                  scope="col"
                                  width="5%"
                                />
                              </StyledTh>
                            </tr>
                          </TableHead__StyledHeaderRow>
                        </thead>
                      </TableHead>
                      <TableBody
                        columns={
                          Array [
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "selected",
                              "headerFormatter": [Function],
                              "width": "30px",
                            },
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "expanded",
                              "width": "30px",
                            },
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "date",
                              "label": "Date",
                              "width": "15%",
                            },
                            Object {
                              "dataKey": "expectedQuantity",
                              "label": "Expected Quantity",
                              "width": "20%",
                            },
                            Object {
                              "dataKey": "actualQuantity",
                              "label": "Actual Quantity",
                              "width": "20%",
                            },
                            Object {
                              "dataKey": "note",
                              "label": "Note",
                              "width": "45%",
                            },
                            Object {
                              "cellRenderer": [Function],
                              "dataKey": "actions",
                              "label": "",
                              "width": "5%",
                            },
                          ]
                        }
                        compact={false}
                        keyField="id"
                        loading={false}
                        noRowsContent="No records have been created for this table."
                        rowHovers={true}
                        rows={
                          Array [
                            Object {
                              "cellRenderer": [Function],
                              "expanded": false,
                              "heading": "ABC & XYZ Company",
                              "id": "r1",
                              "selected": false,
                            },
                            Object {
                              "actualQuantity": "1,800 eaches",
                              "date": "2019-10-01",
                              "expanded": false,
                              "expandedContent": [Function],
                              "expectedQuantity": "2,025 eaches",
                              "id": "r2",
                              "selected": false,
                            },
                            Object {
                              "actualQuantity": "2,250 eaches",
                              "date": "2019-10-02",
                              "expanded": false,
                              "expectedQuantity": "2,475 eaches",
                              "id": "r3",
                              "selected": false,
                            },
                            Object {
                              "actualQuantity": "1,425 eaches",
                              "date": "2019-10-03",
                              "expanded": false,
                              "expectedQuantity": "2,475 eaches",
                              "id": "r4",
                              "selected": false,
                            },
                            Object {
                              "actualQuantity": "675 eaches",
                              "date": "2019-10-04",
                              "expanded": false,
                              "expectedQuantity": "2,475 eaches",
                              "id": "r5",
                              "note": "1c Other Plant-related issue, equipment issues",
                              "selected": false,
                            },
                          ]
                        }
                      >
                        <tbody>
                          <TableBodyRow
                            columns={
                              Array [
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "selected",
                                  "headerFormatter": [Function],
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "expanded",
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "date",
                                  "label": "Date",
                                  "width": "15%",
                                },
                                Object {
                                  "dataKey": "expectedQuantity",
                                  "label": "Expected Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "actualQuantity",
                                  "label": "Actual Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "note",
                                  "label": "Note",
                                  "width": "45%",
                                },
                                Object {
                                  "cellRenderer": [Function],
                                  "dataKey": "actions",
                                  "label": "",
                                  "width": "5%",
                                },
                              ]
                            }
                            compact={false}
                            key="r1"
                            keyField="id"
                            row={
                              Object {
                                "cellRenderer": [Function],
                                "expanded": false,
                                "heading": "ABC & XYZ Company",
                                "id": "r1",
                                "selected": false,
                              }
                            }
                            rowHovers={true}
                          >
                            <TableBody__StyledTr
                              rowHovers={true}
                            >
                              <tr
                                className="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
                              >
                                <TableCell
                                  cellData="ABC & XYZ Company"
                                  colSpan={7}
                                  column={Object {}}
                                  compact={false}
                                  row={
                                    Object {
                                      "cellRenderer": [Function],
                                      "expanded": false,
                                      "heading": "ABC & XYZ Company",
                                      "id": "r1",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <td
                                    colSpan={7}
                                  >
                                    <Box
                                      bg="lightBlue"
                                      px="x2"
                                      py="x1"
                                      theme={
                                        Object {
                                          "borders": Array [],
                                          "breakpoints": Object {
                                            "extraLarge": "1920px",
                                            "extraSmall": "0px",
                                            "large": "1360px",
                                            "medium": "1024px",
                                            "small": "768px",
                                          },
                                          "colors": Object {
                                            "black": "#011e38",
                                            "blackBlue": "#122b47",
                                            "blue": "#216beb",
                                            "darkBlue": "#00438f",
                                            "darkGrey": "#434d59",
                                            "green": "#008059",
                                            "grey": "#c0c8d1",
                                            "lightBlue": "#e1ebfa",
                                            "lightGreen": "#e9f7f2",
                                            "lightGrey": "#e4e7eb",
                                            "lightRed": "#fae6ea",
                                            "lightYellow": "#fcf5e3",
                                            "red": "#cc1439",
                                            "white": "#ffffff",
                                            "whiteGrey": "#f0f2f5",
                                            "yellow": "#ffbb00",
                                          },
                                          "fontSizes": Object {
                                            "large": "20px",
                                            "larger": "26px",
                                            "largest": "46px",
                                            "medium": "16px",
                                            "small": "14px",
                                            "smaller": "12px",
                                          },
                                          "fontWeights": Object {
                                            "bold": "600",
                                            "light": "300",
                                            "medium": "500",
                                            "normal": "400",
                                          },
                                          "fonts": Object {
                                            "base": "'IBM Plex Sans', sans-serif",
                                            "mono": "'IBM Plex Mono', monospace",
                                          },
                                          "lineHeights": Object {
                                            "base": "1.5",
                                            "sectionTitle": "1.23076923",
                                            "smallTextBase": "1.71428571",
                                            "smallTextCompressed": "1.14285714",
                                            "smallerText": "1.33333333",
                                            "subsectionTitle": "1.2",
                                            "title": "1.04347826",
                                          },
                                          "radii": Object {
                                            "circle": "50%",
                                            "medium": "4px",
                                            "small": "2px",
                                          },
                                          "shadows": Object {
                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                          },
                                          "space": Object {
                                            "half": "4px",
                                            "none": "0px",
                                            "x1": "8px",
                                            "x2": "16px",
                                            "x3": "24px",
                                            "x4": "32px",
                                            "x5": "40px",
                                            "x6": "48px",
                                            "x8": "64px",
                                          },
                                          "zIndex": Object {
                                            "content": 100,
                                            "overlay": 1000,
                                            "tabsBar": 210,
                                            "tabsScollIndicator": 200,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="Box-sc-1qu1edy-0 fGWNgD"
                                      >
                                        <styled.p
                                          color="blackBlue"
                                          disabled={false}
                                          fontSize="16px"
                                          fontWeight="bold"
                                          inline={false}
                                          lineHeight="1.5"
                                          mb={0}
                                          mt={0}
                                        >
                                          <p
                                            className="sc-AykKF eruAHZ"
                                            color="blackBlue"
                                            disabled={false}
                                            fontSize="16px"
                                            fontWeight="bold"
                                          >
                                            ABC & XYZ Company
                                          </p>
                                        </styled.p>
                                      </div>
                                    </Box>
                                  </td>
                                </TableCell>
                              </tr>
                            </TableBody__StyledTr>
                          </TableBodyRow>
                          <TableBodyRow
                            columns={
                              Array [
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "selected",
                                  "headerFormatter": [Function],
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "expanded",
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "date",
                                  "label": "Date",
                                  "width": "15%",
                                },
                                Object {
                                  "dataKey": "expectedQuantity",
                                  "label": "Expected Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "actualQuantity",
                                  "label": "Actual Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "note",
                                  "label": "Note",
                                  "width": "45%",
                                },
                                Object {
                                  "cellRenderer": [Function],
                                  "dataKey": "actions",
                                  "label": "",
                                  "width": "5%",
                                },
                              ]
                            }
                            compact={false}
                            key="r2"
                            keyField="id"
                            row={
                              Object {
                                "actualQuantity": "1,800 eaches",
                                "date": "2019-10-01",
                                "expanded": false,
                                "expandedContent": [Function],
                                "expectedQuantity": "2,025 eaches",
                                "id": "r2",
                                "selected": false,
                              }
                            }
                            rowHovers={true}
                          >
                            <TableBody__StyledTr
                              rowHovers={true}
                            >
                              <tr
                                className="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
                              >
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "selected",
                                      "headerFormatter": [Function],
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="selected"
                                  row={
                                    Object {
                                      "actualQuantity": "1,800 eaches",
                                      "date": "2019-10-01",
                                      "expanded": false,
                                      "expandedContent": [Function],
                                      "expectedQuantity": "2,025 eaches",
                                      "id": "r2",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <SelectCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "selected",
                                            "headerFormatter": [Function],
                                            "width": "30px",
                                          }
                                        }
                                        onSelectRow={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "1,800 eaches",
                                            "date": "2019-10-01",
                                            "expanded": false,
                                            "expandedContent": [Function],
                                            "expectedQuantity": "2,025 eaches",
                                            "id": "r2",
                                            "selected": false,
                                          }
                                        }
                                      >
                                        <Styled(BaseCheckbox)
                                          aria-label="deselect row"
                                          checked={false}
                                          disabled={false}
                                          error={false}
                                          id={null}
                                          onChange={[Function]}
                                          required={false}
                                        >
                                          <BaseCheckbox
                                            aria-label="deselect row"
                                            checked={false}
                                            className="sc-fzXfNc bSPfCk"
                                            disabled={false}
                                            error={false}
                                            id={null}
                                            onChange={[Function]}
                                            required={false}
                                          >
                                            <Box
                                              className="sc-fzXfNc bSPfCk"
                                              theme={
                                                Object {
                                                  "borders": Array [],
                                                  "breakpoints": Object {
                                                    "extraLarge": "1920px",
                                                    "extraSmall": "0px",
                                                    "large": "1360px",
                                                    "medium": "1024px",
                                                    "small": "768px",
                                                  },
                                                  "colors": Object {
                                                    "black": "#011e38",
                                                    "blackBlue": "#122b47",
                                                    "blue": "#216beb",
                                                    "darkBlue": "#00438f",
                                                    "darkGrey": "#434d59",
                                                    "green": "#008059",
                                                    "grey": "#c0c8d1",
                                                    "lightBlue": "#e1ebfa",
                                                    "lightGreen": "#e9f7f2",
                                                    "lightGrey": "#e4e7eb",
                                                    "lightRed": "#fae6ea",
                                                    "lightYellow": "#fcf5e3",
                                                    "red": "#cc1439",
                                                    "white": "#ffffff",
                                                    "whiteGrey": "#f0f2f5",
                                                    "yellow": "#ffbb00",
                                                  },
                                                  "fontSizes": Object {
                                                    "large": "20px",
                                                    "larger": "26px",
                                                    "largest": "46px",
                                                    "medium": "16px",
                                                    "small": "14px",
                                                    "smaller": "12px",
                                                  },
                                                  "fontWeights": Object {
                                                    "bold": "600",
                                                    "light": "300",
                                                    "medium": "500",
                                                    "normal": "400",
                                                  },
                                                  "fonts": Object {
                                                    "base": "'IBM Plex Sans', sans-serif",
                                                    "mono": "'IBM Plex Mono', monospace",
                                                  },
                                                  "lineHeights": Object {
                                                    "base": "1.5",
                                                    "sectionTitle": "1.23076923",
                                                    "smallTextBase": "1.71428571",
                                                    "smallTextCompressed": "1.14285714",
                                                    "smallerText": "1.33333333",
                                                    "subsectionTitle": "1.2",
                                                    "title": "1.04347826",
                                                  },
                                                  "radii": Object {
                                                    "circle": "50%",
                                                    "medium": "4px",
                                                    "small": "2px",
                                                  },
                                                  "shadows": Object {
                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                  },
                                                  "space": Object {
                                                    "half": "4px",
                                                    "none": "0px",
                                                    "x1": "8px",
                                                    "x2": "16px",
                                                    "x3": "24px",
                                                    "x4": "32px",
                                                    "x5": "40px",
                                                    "x6": "48px",
                                                    "x8": "64px",
                                                  },
                                                  "zIndex": Object {
                                                    "content": 100,
                                                    "overlay": 1000,
                                                    "tabsBar": 210,
                                                    "tabsScollIndicator": 200,
                                                  },
                                                }
                                              }
                                            >
                                              <div
                                                className="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
                                              >
                                                <ClickInputLabel
                                                  disabled={false}
                                                >
                                                  <label
                                                    className="ClickInputLabel-j2axnv-0 hdKIjC"
                                                    disabled={false}
                                                  >
                                                    <Checkbox__CheckboxInput
                                                      aria-invalid={false}
                                                      aria-label="deselect row"
                                                      aria-required={false}
                                                      checked={false}
                                                      className="sc-fzXfNc bSPfCk"
                                                      disabled={false}
                                                      error={false}
                                                      id={null}
                                                      onChange={[Function]}
                                                      required={false}
                                                      type="checkbox"
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-label="deselect row"
                                                        aria-required={false}
                                                        checked={false}
                                                        className="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                                                        disabled={false}
                                                        id={null}
                                                        onChange={[Function]}
                                                        required={false}
                                                        type="checkbox"
                                                      />
                                                    </Checkbox__CheckboxInput>
                                                    <Checkbox__VisualCheckbox
                                                      checked={false}
                                                      disabled={false}
                                                    >
                                                      <div
                                                        checked={false}
                                                        className="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                                                        disabled={false}
                                                      />
                                                    </Checkbox__VisualCheckbox>
                                                  </label>
                                                </ClickInputLabel>
                                              </div>
                                            </Box>
                                          </BaseCheckbox>
                                        </Styled(BaseCheckbox)>
                                      </SelectCell>
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "expanded",
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="expanded"
                                  row={
                                    Object {
                                      "actualQuantity": "1,800 eaches",
                                      "date": "2019-10-01",
                                      "expanded": false,
                                      "expandedContent": [Function],
                                      "expectedQuantity": "2,025 eaches",
                                      "id": "r2",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <ExpandCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "expanded",
                                            "width": "30px",
                                          }
                                        }
                                        onRowExpansionChange={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "1,800 eaches",
                                            "date": "2019-10-01",
                                            "expanded": false,
                                            "expandedContent": [Function],
                                            "expectedQuantity": "2,025 eaches",
                                            "id": "r2",
                                            "selected": false,
                                          }
                                        }
                                      >
                                        <ForwardRef
                                          disabled={false}
                                          icon="downArrow"
                                          label="expand row"
                                          onClick={[Function]}
                                          size="32px"
                                          toggled={false}
                                        >
<<<<<<< HEAD
                                          <button
                                            aria-label="toggle expansion"
                                            className="ControlIcon__StyledButton-sc-1h83lvi-0 izeIox"
=======
                                          <ControlIcon__StyledButton
                                            aria-label="expand row"
>>>>>>> update storyshots
                                            disabled={false}
                                            onClick={[Function]}
                                            toggled={false}
                                          >
                                            <button
                                              aria-label="expand row"
                                              className="ControlIcon__StyledButton-sc-1h83lvi-0 fMjedc"
                                              disabled={false}
                                              onClick={[Function]}
                                            >
                                              <Styled(Component)
                                                color="currentColor"
                                                icon="downArrow"
                                                size="32px"
                                                title={null}
                                              >
                                                <ForwardRef
                                                  className="sc-AykKD ceXkCz"
                                                  color="currentColor"
                                                  focusable={false}
                                                  icon="downArrow"
                                                  size="32px"
                                                  title={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="sc-AykKD ceXkCz"
                                                    color="currentColor"
                                                    fill="currentColor"
                                                    focusable={false}
                                                    height="32px"
                                                    icon="downArrow"
                                                    size="32px"
                                                    title={null}
                                                    viewBox="0 0 24 24"
                                                    width="32px"
                                                  >
                                                    <path
                                                      d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                      key="0"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </Styled(Component)>
                                            </button>
                                          </ControlIcon__StyledButton>
                                        </ForwardRef>
                                      </ExpandCell>
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2019-10-01"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "date",
                                      "label": "Date",
                                      "width": "15%",
                                    }
                                  }
                                  compact={false}
                                  key="date"
                                  row={
                                    Object {
                                      "actualQuantity": "1,800 eaches",
                                      "date": "2019-10-01",
                                      "expanded": false,
                                      "expandedContent": [Function],
                                      "expectedQuantity": "2,025 eaches",
                                      "id": "r2",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      Tue, 01 Oct 2019
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2,025 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "expectedQuantity",
                                      "label": "Expected Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="expectedQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "1,800 eaches",
                                      "date": "2019-10-01",
                                      "expanded": false,
                                      "expandedContent": [Function],
                                      "expectedQuantity": "2,025 eaches",
                                      "id": "r2",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      2,025 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="1,800 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actualQuantity",
                                      "label": "Actual Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="actualQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "1,800 eaches",
                                      "date": "2019-10-01",
                                      "expanded": false,
                                      "expandedContent": [Function],
                                      "expectedQuantity": "2,025 eaches",
                                      "id": "r2",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      1,800 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "note",
                                      "label": "Note",
                                      "width": "45%",
                                    }
                                  }
                                  compact={false}
                                  key="note"
                                  row={
                                    Object {
                                      "actualQuantity": "1,800 eaches",
                                      "date": "2019-10-01",
                                      "expanded": false,
                                      "expandedContent": [Function],
                                      "expectedQuantity": "2,025 eaches",
                                      "id": "r2",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellRenderer": [Function],
                                      "dataKey": "actions",
                                      "label": "",
                                      "width": "5%",
                                    }
                                  }
                                  compact={false}
                                  key="actions"
                                  row={
                                    Object {
                                      "actualQuantity": "1,800 eaches",
                                      "date": "2019-10-01",
                                      "expanded": false,
                                      "expandedContent": [Function],
                                      "expectedQuantity": "2,025 eaches",
                                      "id": "r2",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <td
                                    colSpan={null}
                                  >
                                    <Box
                                      pr="x3"
                                      textAlign="right"
                                      theme={
                                        Object {
                                          "borders": Array [],
                                          "breakpoints": Object {
                                            "extraLarge": "1920px",
                                            "extraSmall": "0px",
                                            "large": "1360px",
                                            "medium": "1024px",
                                            "small": "768px",
                                          },
                                          "colors": Object {
                                            "black": "#011e38",
                                            "blackBlue": "#122b47",
                                            "blue": "#216beb",
                                            "darkBlue": "#00438f",
                                            "darkGrey": "#434d59",
                                            "green": "#008059",
                                            "grey": "#c0c8d1",
                                            "lightBlue": "#e1ebfa",
                                            "lightGreen": "#e9f7f2",
                                            "lightGrey": "#e4e7eb",
                                            "lightRed": "#fae6ea",
                                            "lightYellow": "#fcf5e3",
                                            "red": "#cc1439",
                                            "white": "#ffffff",
                                            "whiteGrey": "#f0f2f5",
                                            "yellow": "#ffbb00",
                                          },
                                          "fontSizes": Object {
                                            "large": "20px",
                                            "larger": "26px",
                                            "largest": "46px",
                                            "medium": "16px",
                                            "small": "14px",
                                            "smaller": "12px",
                                          },
                                          "fontWeights": Object {
                                            "bold": "600",
                                            "light": "300",
                                            "medium": "500",
                                            "normal": "400",
                                          },
                                          "fonts": Object {
                                            "base": "'IBM Plex Sans', sans-serif",
                                            "mono": "'IBM Plex Mono', monospace",
                                          },
                                          "lineHeights": Object {
                                            "base": "1.5",
                                            "sectionTitle": "1.23076923",
                                            "smallTextBase": "1.71428571",
                                            "smallTextCompressed": "1.14285714",
                                            "smallerText": "1.33333333",
                                            "subsectionTitle": "1.2",
                                            "title": "1.04347826",
                                          },
                                          "radii": Object {
                                            "circle": "50%",
                                            "medium": "4px",
                                            "small": "2px",
                                          },
                                          "shadows": Object {
                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                          },
                                          "space": Object {
                                            "half": "4px",
                                            "none": "0px",
                                            "x1": "8px",
                                            "x2": "16px",
                                            "x3": "24px",
                                            "x4": "32px",
                                            "x5": "40px",
                                            "x6": "48px",
                                            "x8": "64px",
                                          },
                                          "zIndex": Object {
                                            "content": 100,
                                            "overlay": 1000,
                                            "tabsBar": 210,
                                            "tabsScollIndicator": 200,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="Box-sc-1qu1edy-0 dqSmZd"
                                      >
                                        <ForwardRef
                                          backgroundColor="whiteGrey"
                                          boundariesElement="viewport"
                                          defaultOpen={false}
                                          disabled={false}
                                          hideDelay="200"
                                          placement="bottom-start"
                                          showArrow={true}
                                          showDelay="100"
                                          trigger={[Function]}
                                        >
                                          <ForwardRef
                                            backgroundColor="whiteGrey"
                                            borderColor="whiteGrey"
                                            defaultOpen={false}
                                            hideDelay="200"
                                            id={null}
                                            modifiers={
                                              Object {
                                                "boundariesElement": "viewport",
                                                "preventOverflow": Object {
                                                  "boundariesElement": "viewport",
                                                  "enabled": true,
                                                  "padding": 8,
                                                },
                                              }
                                            }
                                            openOnClick={true}
                                            openOnHover={false}
                                            popperPlacement="bottom-start"
                                            showArrow={true}
                                            showDelay="100"
                                            trigger={
                                              <ForwardRef(Styled(Component))
                                                aria-haspopup={true}
                                                disabled={null}
                                                icon="more"
                                                type="button"
                                              />
                                            }
                                          >
                                            <Manager>
                                              <Reference>
                                                <InnerReference
                                                  setReferenceNode={[Function]}
                                                >
                                                  <Styled(Component)
                                                    aria-describedby={null}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    aria-label="open"
                                                    disabled={null}
                                                    icon="more"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseDown={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef
                                                      aria-describedby={null}
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      aria-label="open"
                                                      className="sc-fzXfLQ bZudva"
                                                      disabled={null}
                                                      icon="more"
                                                      labelHidden={false}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseDown={[Function]}
                                                      type="button"
                                                    >
                                                      <IconicButton__WrapperButton
                                                        aria-describedby={null}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-label="open"
                                                        className="sc-fzXfLQ bZudva"
                                                        disabled={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        type="button"
                                                      >
                                                        <button
                                                          aria-describedby={null}
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-label="open"
                                                          className="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                          disabled={null}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseDown={[Function]}
                                                          type="button"
                                                        >
                                                          <Manager>
                                                            <Reference>
                                                              <InnerReference
                                                                setReferenceNode={[Function]}
                                                              >
                                                                <Styled(Component)
                                                                  color="currentColor"
                                                                  icon="more"
                                                                  p="half"
                                                                  size="32px"
                                                                  title={null}
                                                                >
                                                                  <ForwardRef
                                                                    className="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    focusable={false}
                                                                    icon="more"
                                                                    p="half"
                                                                    size="32px"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="sc-AykKD kaUxeX"
                                                                      color="currentColor"
                                                                      fill="currentColor"
                                                                      focusable={false}
                                                                      height="32px"
                                                                      icon="more"
                                                                      p="half"
                                                                      size="32px"
                                                                      title={null}
                                                                      viewBox="0 0 24 24"
                                                                      width="32px"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                        key="0"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef>
                                                                </Styled(Component)>
                                                              </InnerReference>
                                                            </Reference>
                                                            <Popper
                                                              modifiers={
                                                                Object {
                                                                  "preventOverflow": Object {
                                                                    "boundariesElement": "viewport",
                                                                    "enabled": true,
                                                                    "padding": 8,
                                                                  },
                                                                }
                                                              }
                                                              placement="bottom"
                                                            >
                                                              <InnerPopper
                                                                eventsEnabled={true}
                                                                modifiers={
                                                                  Object {
                                                                    "preventOverflow": Object {
                                                                      "boundariesElement": "viewport",
                                                                      "enabled": true,
                                                                      "padding": 8,
                                                                    },
                                                                  }
                                                                }
                                                                placement="bottom"
                                                                positionFixed={false}
                                                                referenceElement={
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    class="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="32px"
                                                                    icon="more"
                                                                    p="half"
                                                                    viewBox="0 0 24 24"
                                                                    width="32px"
                                                                  >
                                                                    <path
                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                    />
                                                                  </svg>
                                                                }
                                                              />
                                                            </Popper>
                                                          </Manager>
                                                        </button>
                                                      </IconicButton__WrapperButton>
                                                    </ForwardRef>
                                                  </Styled(Component)>
                                                </InnerReference>
                                              </Reference>
                                              <Popper
                                                modifiers={
                                                  Object {
                                                    "boundariesElement": "viewport",
                                                    "preventOverflow": Object {
                                                      "boundariesElement": "viewport",
                                                      "enabled": true,
                                                      "padding": 8,
                                                    },
                                                  }
                                                }
                                                placement="bottom-start"
                                              >
                                                <InnerPopper
                                                  eventsEnabled={true}
                                                  modifiers={
                                                    Object {
                                                      "boundariesElement": "viewport",
                                                      "preventOverflow": Object {
                                                        "boundariesElement": "viewport",
                                                        "enabled": true,
                                                        "padding": 8,
                                                      },
                                                    }
                                                  }
                                                  placement="bottom-start"
                                                  positionFixed={false}
                                                  referenceElement={
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="open"
                                                      class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="sc-AykKD kaUxeX"
                                                        color="currentColor"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="32px"
                                                        icon="more"
                                                        p="half"
                                                        viewBox="0 0 24 24"
                                                        width="32px"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  }
                                                />
                                              </Popper>
                                            </Manager>
                                          </ForwardRef>
                                        </ForwardRef>
                                      </div>
                                    </Box>
                                  </td>
                                </TableCell>
                              </tr>
                            </TableBody__StyledTr>
                          </TableBodyRow>
                          <TableBodyRow
                            columns={
                              Array [
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "selected",
                                  "headerFormatter": [Function],
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "expanded",
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "date",
                                  "label": "Date",
                                  "width": "15%",
                                },
                                Object {
                                  "dataKey": "expectedQuantity",
                                  "label": "Expected Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "actualQuantity",
                                  "label": "Actual Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "note",
                                  "label": "Note",
                                  "width": "45%",
                                },
                                Object {
                                  "cellRenderer": [Function],
                                  "dataKey": "actions",
                                  "label": "",
                                  "width": "5%",
                                },
                              ]
                            }
                            compact={false}
                            key="r3"
                            keyField="id"
                            row={
                              Object {
                                "actualQuantity": "2,250 eaches",
                                "date": "2019-10-02",
                                "expanded": false,
                                "expectedQuantity": "2,475 eaches",
                                "id": "r3",
                                "selected": false,
                              }
                            }
                            rowHovers={true}
                          >
                            <TableBody__StyledTr
                              rowHovers={true}
                            >
                              <tr
                                className="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
                              >
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "selected",
                                      "headerFormatter": [Function],
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="selected"
                                  row={
                                    Object {
                                      "actualQuantity": "2,250 eaches",
                                      "date": "2019-10-02",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r3",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <SelectCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "selected",
                                            "headerFormatter": [Function],
                                            "width": "30px",
                                          }
                                        }
                                        onSelectRow={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "2,250 eaches",
                                            "date": "2019-10-02",
                                            "expanded": false,
                                            "expectedQuantity": "2,475 eaches",
                                            "id": "r3",
                                            "selected": false,
                                          }
                                        }
                                      >
                                        <Styled(BaseCheckbox)
                                          aria-label="deselect row"
                                          checked={false}
                                          disabled={false}
                                          error={false}
                                          id={null}
                                          onChange={[Function]}
                                          required={false}
                                        >
                                          <BaseCheckbox
                                            aria-label="deselect row"
                                            checked={false}
                                            className="sc-fzXfNc bSPfCk"
                                            disabled={false}
                                            error={false}
                                            id={null}
                                            onChange={[Function]}
                                            required={false}
                                          >
                                            <Box
                                              className="sc-fzXfNc bSPfCk"
                                              theme={
                                                Object {
                                                  "borders": Array [],
                                                  "breakpoints": Object {
                                                    "extraLarge": "1920px",
                                                    "extraSmall": "0px",
                                                    "large": "1360px",
                                                    "medium": "1024px",
                                                    "small": "768px",
                                                  },
                                                  "colors": Object {
                                                    "black": "#011e38",
                                                    "blackBlue": "#122b47",
                                                    "blue": "#216beb",
                                                    "darkBlue": "#00438f",
                                                    "darkGrey": "#434d59",
                                                    "green": "#008059",
                                                    "grey": "#c0c8d1",
                                                    "lightBlue": "#e1ebfa",
                                                    "lightGreen": "#e9f7f2",
                                                    "lightGrey": "#e4e7eb",
                                                    "lightRed": "#fae6ea",
                                                    "lightYellow": "#fcf5e3",
                                                    "red": "#cc1439",
                                                    "white": "#ffffff",
                                                    "whiteGrey": "#f0f2f5",
                                                    "yellow": "#ffbb00",
                                                  },
                                                  "fontSizes": Object {
                                                    "large": "20px",
                                                    "larger": "26px",
                                                    "largest": "46px",
                                                    "medium": "16px",
                                                    "small": "14px",
                                                    "smaller": "12px",
                                                  },
                                                  "fontWeights": Object {
                                                    "bold": "600",
                                                    "light": "300",
                                                    "medium": "500",
                                                    "normal": "400",
                                                  },
                                                  "fonts": Object {
                                                    "base": "'IBM Plex Sans', sans-serif",
                                                    "mono": "'IBM Plex Mono', monospace",
                                                  },
                                                  "lineHeights": Object {
                                                    "base": "1.5",
                                                    "sectionTitle": "1.23076923",
                                                    "smallTextBase": "1.71428571",
                                                    "smallTextCompressed": "1.14285714",
                                                    "smallerText": "1.33333333",
                                                    "subsectionTitle": "1.2",
                                                    "title": "1.04347826",
                                                  },
                                                  "radii": Object {
                                                    "circle": "50%",
                                                    "medium": "4px",
                                                    "small": "2px",
                                                  },
                                                  "shadows": Object {
                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                  },
                                                  "space": Object {
                                                    "half": "4px",
                                                    "none": "0px",
                                                    "x1": "8px",
                                                    "x2": "16px",
                                                    "x3": "24px",
                                                    "x4": "32px",
                                                    "x5": "40px",
                                                    "x6": "48px",
                                                    "x8": "64px",
                                                  },
                                                  "zIndex": Object {
                                                    "content": 100,
                                                    "overlay": 1000,
                                                    "tabsBar": 210,
                                                    "tabsScollIndicator": 200,
                                                  },
                                                }
                                              }
                                            >
                                              <div
                                                className="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
                                              >
                                                <ClickInputLabel
                                                  disabled={false}
                                                >
                                                  <label
                                                    className="ClickInputLabel-j2axnv-0 hdKIjC"
                                                    disabled={false}
                                                  >
                                                    <Checkbox__CheckboxInput
                                                      aria-invalid={false}
                                                      aria-label="deselect row"
                                                      aria-required={false}
                                                      checked={false}
                                                      className="sc-fzXfNc bSPfCk"
                                                      disabled={false}
                                                      error={false}
                                                      id={null}
                                                      onChange={[Function]}
                                                      required={false}
                                                      type="checkbox"
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-label="deselect row"
                                                        aria-required={false}
                                                        checked={false}
                                                        className="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                                                        disabled={false}
                                                        id={null}
                                                        onChange={[Function]}
                                                        required={false}
                                                        type="checkbox"
                                                      />
                                                    </Checkbox__CheckboxInput>
                                                    <Checkbox__VisualCheckbox
                                                      checked={false}
                                                      disabled={false}
                                                    >
                                                      <div
                                                        checked={false}
                                                        className="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                                                        disabled={false}
                                                      />
                                                    </Checkbox__VisualCheckbox>
                                                  </label>
                                                </ClickInputLabel>
                                              </div>
                                            </Box>
                                          </BaseCheckbox>
                                        </Styled(BaseCheckbox)>
                                      </SelectCell>
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "expanded",
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="expanded"
                                  row={
                                    Object {
                                      "actualQuantity": "2,250 eaches",
                                      "date": "2019-10-02",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r3",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <ExpandCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "expanded",
                                            "width": "30px",
                                          }
                                        }
                                        onRowExpansionChange={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "2,250 eaches",
                                            "date": "2019-10-02",
                                            "expanded": false,
                                            "expectedQuantity": "2,475 eaches",
                                            "id": "r3",
                                            "selected": false,
                                          }
                                        }
                                      />
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2019-10-02"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "date",
                                      "label": "Date",
                                      "width": "15%",
                                    }
                                  }
                                  compact={false}
                                  key="date"
                                  row={
                                    Object {
                                      "actualQuantity": "2,250 eaches",
                                      "date": "2019-10-02",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r3",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      Wed, 02 Oct 2019
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2,475 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "expectedQuantity",
                                      "label": "Expected Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="expectedQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "2,250 eaches",
                                      "date": "2019-10-02",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r3",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      2,475 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2,250 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actualQuantity",
                                      "label": "Actual Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="actualQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "2,250 eaches",
                                      "date": "2019-10-02",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r3",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      2,250 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "note",
                                      "label": "Note",
                                      "width": "45%",
                                    }
                                  }
                                  compact={false}
                                  key="note"
                                  row={
                                    Object {
                                      "actualQuantity": "2,250 eaches",
                                      "date": "2019-10-02",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r3",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellRenderer": [Function],
                                      "dataKey": "actions",
                                      "label": "",
                                      "width": "5%",
                                    }
                                  }
                                  compact={false}
                                  key="actions"
                                  row={
                                    Object {
                                      "actualQuantity": "2,250 eaches",
                                      "date": "2019-10-02",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r3",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <td
                                    colSpan={null}
                                  >
                                    <Box
                                      pr="x3"
                                      textAlign="right"
                                      theme={
                                        Object {
                                          "borders": Array [],
                                          "breakpoints": Object {
                                            "extraLarge": "1920px",
                                            "extraSmall": "0px",
                                            "large": "1360px",
                                            "medium": "1024px",
                                            "small": "768px",
                                          },
                                          "colors": Object {
                                            "black": "#011e38",
                                            "blackBlue": "#122b47",
                                            "blue": "#216beb",
                                            "darkBlue": "#00438f",
                                            "darkGrey": "#434d59",
                                            "green": "#008059",
                                            "grey": "#c0c8d1",
                                            "lightBlue": "#e1ebfa",
                                            "lightGreen": "#e9f7f2",
                                            "lightGrey": "#e4e7eb",
                                            "lightRed": "#fae6ea",
                                            "lightYellow": "#fcf5e3",
                                            "red": "#cc1439",
                                            "white": "#ffffff",
                                            "whiteGrey": "#f0f2f5",
                                            "yellow": "#ffbb00",
                                          },
                                          "fontSizes": Object {
                                            "large": "20px",
                                            "larger": "26px",
                                            "largest": "46px",
                                            "medium": "16px",
                                            "small": "14px",
                                            "smaller": "12px",
                                          },
                                          "fontWeights": Object {
                                            "bold": "600",
                                            "light": "300",
                                            "medium": "500",
                                            "normal": "400",
                                          },
                                          "fonts": Object {
                                            "base": "'IBM Plex Sans', sans-serif",
                                            "mono": "'IBM Plex Mono', monospace",
                                          },
                                          "lineHeights": Object {
                                            "base": "1.5",
                                            "sectionTitle": "1.23076923",
                                            "smallTextBase": "1.71428571",
                                            "smallTextCompressed": "1.14285714",
                                            "smallerText": "1.33333333",
                                            "subsectionTitle": "1.2",
                                            "title": "1.04347826",
                                          },
                                          "radii": Object {
                                            "circle": "50%",
                                            "medium": "4px",
                                            "small": "2px",
                                          },
                                          "shadows": Object {
                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                          },
                                          "space": Object {
                                            "half": "4px",
                                            "none": "0px",
                                            "x1": "8px",
                                            "x2": "16px",
                                            "x3": "24px",
                                            "x4": "32px",
                                            "x5": "40px",
                                            "x6": "48px",
                                            "x8": "64px",
                                          },
                                          "zIndex": Object {
                                            "content": 100,
                                            "overlay": 1000,
                                            "tabsBar": 210,
                                            "tabsScollIndicator": 200,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="Box-sc-1qu1edy-0 dqSmZd"
                                      >
                                        <ForwardRef
                                          backgroundColor="whiteGrey"
                                          boundariesElement="viewport"
                                          defaultOpen={false}
                                          disabled={false}
                                          hideDelay="200"
                                          placement="bottom-start"
                                          showArrow={true}
                                          showDelay="100"
                                          trigger={[Function]}
                                        >
                                          <ForwardRef
                                            backgroundColor="whiteGrey"
                                            borderColor="whiteGrey"
                                            defaultOpen={false}
                                            hideDelay="200"
                                            id={null}
                                            modifiers={
                                              Object {
                                                "boundariesElement": "viewport",
                                                "preventOverflow": Object {
                                                  "boundariesElement": "viewport",
                                                  "enabled": true,
                                                  "padding": 8,
                                                },
                                              }
                                            }
                                            openOnClick={true}
                                            openOnHover={false}
                                            popperPlacement="bottom-start"
                                            showArrow={true}
                                            showDelay="100"
                                            trigger={
                                              <ForwardRef(Styled(Component))
                                                aria-haspopup={true}
                                                disabled={null}
                                                icon="more"
                                                type="button"
                                              />
                                            }
                                          >
                                            <Manager>
                                              <Reference>
                                                <InnerReference
                                                  setReferenceNode={[Function]}
                                                >
                                                  <Styled(Component)
                                                    aria-describedby={null}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    aria-label="open"
                                                    disabled={null}
                                                    icon="more"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseDown={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef
                                                      aria-describedby={null}
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      aria-label="open"
                                                      className="sc-fzXfLQ bZudva"
                                                      disabled={null}
                                                      icon="more"
                                                      labelHidden={false}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseDown={[Function]}
                                                      type="button"
                                                    >
                                                      <IconicButton__WrapperButton
                                                        aria-describedby={null}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-label="open"
                                                        className="sc-fzXfLQ bZudva"
                                                        disabled={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        type="button"
                                                      >
                                                        <button
                                                          aria-describedby={null}
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-label="open"
                                                          className="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                          disabled={null}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseDown={[Function]}
                                                          type="button"
                                                        >
                                                          <Manager>
                                                            <Reference>
                                                              <InnerReference
                                                                setReferenceNode={[Function]}
                                                              >
                                                                <Styled(Component)
                                                                  color="currentColor"
                                                                  icon="more"
                                                                  p="half"
                                                                  size="32px"
                                                                  title={null}
                                                                >
                                                                  <ForwardRef
                                                                    className="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    focusable={false}
                                                                    icon="more"
                                                                    p="half"
                                                                    size="32px"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="sc-AykKD kaUxeX"
                                                                      color="currentColor"
                                                                      fill="currentColor"
                                                                      focusable={false}
                                                                      height="32px"
                                                                      icon="more"
                                                                      p="half"
                                                                      size="32px"
                                                                      title={null}
                                                                      viewBox="0 0 24 24"
                                                                      width="32px"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                        key="0"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef>
                                                                </Styled(Component)>
                                                              </InnerReference>
                                                            </Reference>
                                                            <Popper
                                                              modifiers={
                                                                Object {
                                                                  "preventOverflow": Object {
                                                                    "boundariesElement": "viewport",
                                                                    "enabled": true,
                                                                    "padding": 8,
                                                                  },
                                                                }
                                                              }
                                                              placement="bottom"
                                                            >
                                                              <InnerPopper
                                                                eventsEnabled={true}
                                                                modifiers={
                                                                  Object {
                                                                    "preventOverflow": Object {
                                                                      "boundariesElement": "viewport",
                                                                      "enabled": true,
                                                                      "padding": 8,
                                                                    },
                                                                  }
                                                                }
                                                                placement="bottom"
                                                                positionFixed={false}
                                                                referenceElement={
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    class="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="32px"
                                                                    icon="more"
                                                                    p="half"
                                                                    viewBox="0 0 24 24"
                                                                    width="32px"
                                                                  >
                                                                    <path
                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                    />
                                                                  </svg>
                                                                }
                                                              />
                                                            </Popper>
                                                          </Manager>
                                                        </button>
                                                      </IconicButton__WrapperButton>
                                                    </ForwardRef>
                                                  </Styled(Component)>
                                                </InnerReference>
                                              </Reference>
                                              <Popper
                                                modifiers={
                                                  Object {
                                                    "boundariesElement": "viewport",
                                                    "preventOverflow": Object {
                                                      "boundariesElement": "viewport",
                                                      "enabled": true,
                                                      "padding": 8,
                                                    },
                                                  }
                                                }
                                                placement="bottom-start"
                                              >
                                                <InnerPopper
                                                  eventsEnabled={true}
                                                  modifiers={
                                                    Object {
                                                      "boundariesElement": "viewport",
                                                      "preventOverflow": Object {
                                                        "boundariesElement": "viewport",
                                                        "enabled": true,
                                                        "padding": 8,
                                                      },
                                                    }
                                                  }
                                                  placement="bottom-start"
                                                  positionFixed={false}
                                                  referenceElement={
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="open"
                                                      class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="sc-AykKD kaUxeX"
                                                        color="currentColor"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="32px"
                                                        icon="more"
                                                        p="half"
                                                        viewBox="0 0 24 24"
                                                        width="32px"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  }
                                                />
                                              </Popper>
                                            </Manager>
                                          </ForwardRef>
                                        </ForwardRef>
                                      </div>
                                    </Box>
                                  </td>
                                </TableCell>
                              </tr>
                            </TableBody__StyledTr>
                          </TableBodyRow>
                          <TableBodyRow
                            columns={
                              Array [
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "selected",
                                  "headerFormatter": [Function],
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "expanded",
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "date",
                                  "label": "Date",
                                  "width": "15%",
                                },
                                Object {
                                  "dataKey": "expectedQuantity",
                                  "label": "Expected Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "actualQuantity",
                                  "label": "Actual Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "note",
                                  "label": "Note",
                                  "width": "45%",
                                },
                                Object {
                                  "cellRenderer": [Function],
                                  "dataKey": "actions",
                                  "label": "",
                                  "width": "5%",
                                },
                              ]
                            }
                            compact={false}
                            key="r4"
                            keyField="id"
                            row={
                              Object {
                                "actualQuantity": "1,425 eaches",
                                "date": "2019-10-03",
                                "expanded": false,
                                "expectedQuantity": "2,475 eaches",
                                "id": "r4",
                                "selected": false,
                              }
                            }
                            rowHovers={true}
                          >
                            <TableBody__StyledTr
                              rowHovers={true}
                            >
                              <tr
                                className="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
                              >
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "selected",
                                      "headerFormatter": [Function],
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="selected"
                                  row={
                                    Object {
                                      "actualQuantity": "1,425 eaches",
                                      "date": "2019-10-03",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r4",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <SelectCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "selected",
                                            "headerFormatter": [Function],
                                            "width": "30px",
                                          }
                                        }
                                        onSelectRow={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "1,425 eaches",
                                            "date": "2019-10-03",
                                            "expanded": false,
                                            "expectedQuantity": "2,475 eaches",
                                            "id": "r4",
                                            "selected": false,
                                          }
                                        }
                                      >
                                        <Styled(BaseCheckbox)
                                          aria-label="deselect row"
                                          checked={false}
                                          disabled={false}
                                          error={false}
                                          id={null}
                                          onChange={[Function]}
                                          required={false}
                                        >
                                          <BaseCheckbox
                                            aria-label="deselect row"
                                            checked={false}
                                            className="sc-fzXfNc bSPfCk"
                                            disabled={false}
                                            error={false}
                                            id={null}
                                            onChange={[Function]}
                                            required={false}
                                          >
                                            <Box
                                              className="sc-fzXfNc bSPfCk"
                                              theme={
                                                Object {
                                                  "borders": Array [],
                                                  "breakpoints": Object {
                                                    "extraLarge": "1920px",
                                                    "extraSmall": "0px",
                                                    "large": "1360px",
                                                    "medium": "1024px",
                                                    "small": "768px",
                                                  },
                                                  "colors": Object {
                                                    "black": "#011e38",
                                                    "blackBlue": "#122b47",
                                                    "blue": "#216beb",
                                                    "darkBlue": "#00438f",
                                                    "darkGrey": "#434d59",
                                                    "green": "#008059",
                                                    "grey": "#c0c8d1",
                                                    "lightBlue": "#e1ebfa",
                                                    "lightGreen": "#e9f7f2",
                                                    "lightGrey": "#e4e7eb",
                                                    "lightRed": "#fae6ea",
                                                    "lightYellow": "#fcf5e3",
                                                    "red": "#cc1439",
                                                    "white": "#ffffff",
                                                    "whiteGrey": "#f0f2f5",
                                                    "yellow": "#ffbb00",
                                                  },
                                                  "fontSizes": Object {
                                                    "large": "20px",
                                                    "larger": "26px",
                                                    "largest": "46px",
                                                    "medium": "16px",
                                                    "small": "14px",
                                                    "smaller": "12px",
                                                  },
                                                  "fontWeights": Object {
                                                    "bold": "600",
                                                    "light": "300",
                                                    "medium": "500",
                                                    "normal": "400",
                                                  },
                                                  "fonts": Object {
                                                    "base": "'IBM Plex Sans', sans-serif",
                                                    "mono": "'IBM Plex Mono', monospace",
                                                  },
                                                  "lineHeights": Object {
                                                    "base": "1.5",
                                                    "sectionTitle": "1.23076923",
                                                    "smallTextBase": "1.71428571",
                                                    "smallTextCompressed": "1.14285714",
                                                    "smallerText": "1.33333333",
                                                    "subsectionTitle": "1.2",
                                                    "title": "1.04347826",
                                                  },
                                                  "radii": Object {
                                                    "circle": "50%",
                                                    "medium": "4px",
                                                    "small": "2px",
                                                  },
                                                  "shadows": Object {
                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                  },
                                                  "space": Object {
                                                    "half": "4px",
                                                    "none": "0px",
                                                    "x1": "8px",
                                                    "x2": "16px",
                                                    "x3": "24px",
                                                    "x4": "32px",
                                                    "x5": "40px",
                                                    "x6": "48px",
                                                    "x8": "64px",
                                                  },
                                                  "zIndex": Object {
                                                    "content": 100,
                                                    "overlay": 1000,
                                                    "tabsBar": 210,
                                                    "tabsScollIndicator": 200,
                                                  },
                                                }
                                              }
                                            >
                                              <div
                                                className="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
                                              >
                                                <ClickInputLabel
                                                  disabled={false}
                                                >
                                                  <label
                                                    className="ClickInputLabel-j2axnv-0 hdKIjC"
                                                    disabled={false}
                                                  >
                                                    <Checkbox__CheckboxInput
                                                      aria-invalid={false}
                                                      aria-label="deselect row"
                                                      aria-required={false}
                                                      checked={false}
                                                      className="sc-fzXfNc bSPfCk"
                                                      disabled={false}
                                                      error={false}
                                                      id={null}
                                                      onChange={[Function]}
                                                      required={false}
                                                      type="checkbox"
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-label="deselect row"
                                                        aria-required={false}
                                                        checked={false}
                                                        className="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                                                        disabled={false}
                                                        id={null}
                                                        onChange={[Function]}
                                                        required={false}
                                                        type="checkbox"
                                                      />
                                                    </Checkbox__CheckboxInput>
                                                    <Checkbox__VisualCheckbox
                                                      checked={false}
                                                      disabled={false}
                                                    >
                                                      <div
                                                        checked={false}
                                                        className="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                                                        disabled={false}
                                                      />
                                                    </Checkbox__VisualCheckbox>
                                                  </label>
                                                </ClickInputLabel>
                                              </div>
                                            </Box>
                                          </BaseCheckbox>
                                        </Styled(BaseCheckbox)>
                                      </SelectCell>
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "expanded",
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="expanded"
                                  row={
                                    Object {
                                      "actualQuantity": "1,425 eaches",
                                      "date": "2019-10-03",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r4",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <ExpandCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "expanded",
                                            "width": "30px",
                                          }
                                        }
                                        onRowExpansionChange={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "1,425 eaches",
                                            "date": "2019-10-03",
                                            "expanded": false,
                                            "expectedQuantity": "2,475 eaches",
                                            "id": "r4",
                                            "selected": false,
                                          }
                                        }
                                      />
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2019-10-03"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "date",
                                      "label": "Date",
                                      "width": "15%",
                                    }
                                  }
                                  compact={false}
                                  key="date"
                                  row={
                                    Object {
                                      "actualQuantity": "1,425 eaches",
                                      "date": "2019-10-03",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r4",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      Thu, 03 Oct 2019
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2,475 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "expectedQuantity",
                                      "label": "Expected Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="expectedQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "1,425 eaches",
                                      "date": "2019-10-03",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r4",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      2,475 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="1,425 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actualQuantity",
                                      "label": "Actual Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="actualQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "1,425 eaches",
                                      "date": "2019-10-03",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r4",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      1,425 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "note",
                                      "label": "Note",
                                      "width": "45%",
                                    }
                                  }
                                  compact={false}
                                  key="note"
                                  row={
                                    Object {
                                      "actualQuantity": "1,425 eaches",
                                      "date": "2019-10-03",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r4",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellRenderer": [Function],
                                      "dataKey": "actions",
                                      "label": "",
                                      "width": "5%",
                                    }
                                  }
                                  compact={false}
                                  key="actions"
                                  row={
                                    Object {
                                      "actualQuantity": "1,425 eaches",
                                      "date": "2019-10-03",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r4",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <td
                                    colSpan={null}
                                  >
                                    <Box
                                      pr="x3"
                                      textAlign="right"
                                      theme={
                                        Object {
                                          "borders": Array [],
                                          "breakpoints": Object {
                                            "extraLarge": "1920px",
                                            "extraSmall": "0px",
                                            "large": "1360px",
                                            "medium": "1024px",
                                            "small": "768px",
                                          },
                                          "colors": Object {
                                            "black": "#011e38",
                                            "blackBlue": "#122b47",
                                            "blue": "#216beb",
                                            "darkBlue": "#00438f",
                                            "darkGrey": "#434d59",
                                            "green": "#008059",
                                            "grey": "#c0c8d1",
                                            "lightBlue": "#e1ebfa",
                                            "lightGreen": "#e9f7f2",
                                            "lightGrey": "#e4e7eb",
                                            "lightRed": "#fae6ea",
                                            "lightYellow": "#fcf5e3",
                                            "red": "#cc1439",
                                            "white": "#ffffff",
                                            "whiteGrey": "#f0f2f5",
                                            "yellow": "#ffbb00",
                                          },
                                          "fontSizes": Object {
                                            "large": "20px",
                                            "larger": "26px",
                                            "largest": "46px",
                                            "medium": "16px",
                                            "small": "14px",
                                            "smaller": "12px",
                                          },
                                          "fontWeights": Object {
                                            "bold": "600",
                                            "light": "300",
                                            "medium": "500",
                                            "normal": "400",
                                          },
                                          "fonts": Object {
                                            "base": "'IBM Plex Sans', sans-serif",
                                            "mono": "'IBM Plex Mono', monospace",
                                          },
                                          "lineHeights": Object {
                                            "base": "1.5",
                                            "sectionTitle": "1.23076923",
                                            "smallTextBase": "1.71428571",
                                            "smallTextCompressed": "1.14285714",
                                            "smallerText": "1.33333333",
                                            "subsectionTitle": "1.2",
                                            "title": "1.04347826",
                                          },
                                          "radii": Object {
                                            "circle": "50%",
                                            "medium": "4px",
                                            "small": "2px",
                                          },
                                          "shadows": Object {
                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                          },
                                          "space": Object {
                                            "half": "4px",
                                            "none": "0px",
                                            "x1": "8px",
                                            "x2": "16px",
                                            "x3": "24px",
                                            "x4": "32px",
                                            "x5": "40px",
                                            "x6": "48px",
                                            "x8": "64px",
                                          },
                                          "zIndex": Object {
                                            "content": 100,
                                            "overlay": 1000,
                                            "tabsBar": 210,
                                            "tabsScollIndicator": 200,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="Box-sc-1qu1edy-0 dqSmZd"
                                      >
                                        <ForwardRef
                                          backgroundColor="whiteGrey"
                                          boundariesElement="viewport"
                                          defaultOpen={false}
                                          disabled={false}
                                          hideDelay="200"
                                          placement="bottom-start"
                                          showArrow={true}
                                          showDelay="100"
                                          trigger={[Function]}
                                        >
                                          <ForwardRef
                                            backgroundColor="whiteGrey"
                                            borderColor="whiteGrey"
                                            defaultOpen={false}
                                            hideDelay="200"
                                            id={null}
                                            modifiers={
                                              Object {
                                                "boundariesElement": "viewport",
                                                "preventOverflow": Object {
                                                  "boundariesElement": "viewport",
                                                  "enabled": true,
                                                  "padding": 8,
                                                },
                                              }
                                            }
                                            openOnClick={true}
                                            openOnHover={false}
                                            popperPlacement="bottom-start"
                                            showArrow={true}
                                            showDelay="100"
                                            trigger={
                                              <ForwardRef(Styled(Component))
                                                aria-haspopup={true}
                                                disabled={null}
                                                icon="more"
                                                type="button"
                                              />
                                            }
                                          >
                                            <Manager>
                                              <Reference>
                                                <InnerReference
                                                  setReferenceNode={[Function]}
                                                >
                                                  <Styled(Component)
                                                    aria-describedby={null}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    aria-label="open"
                                                    disabled={null}
                                                    icon="more"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseDown={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef
                                                      aria-describedby={null}
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      aria-label="open"
                                                      className="sc-fzXfLQ bZudva"
                                                      disabled={null}
                                                      icon="more"
                                                      labelHidden={false}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseDown={[Function]}
                                                      type="button"
                                                    >
                                                      <IconicButton__WrapperButton
                                                        aria-describedby={null}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-label="open"
                                                        className="sc-fzXfLQ bZudva"
                                                        disabled={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        type="button"
                                                      >
                                                        <button
                                                          aria-describedby={null}
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-label="open"
                                                          className="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                          disabled={null}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseDown={[Function]}
                                                          type="button"
                                                        >
                                                          <Manager>
                                                            <Reference>
                                                              <InnerReference
                                                                setReferenceNode={[Function]}
                                                              >
                                                                <Styled(Component)
                                                                  color="currentColor"
                                                                  icon="more"
                                                                  p="half"
                                                                  size="32px"
                                                                  title={null}
                                                                >
                                                                  <ForwardRef
                                                                    className="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    focusable={false}
                                                                    icon="more"
                                                                    p="half"
                                                                    size="32px"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="sc-AykKD kaUxeX"
                                                                      color="currentColor"
                                                                      fill="currentColor"
                                                                      focusable={false}
                                                                      height="32px"
                                                                      icon="more"
                                                                      p="half"
                                                                      size="32px"
                                                                      title={null}
                                                                      viewBox="0 0 24 24"
                                                                      width="32px"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                        key="0"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef>
                                                                </Styled(Component)>
                                                              </InnerReference>
                                                            </Reference>
                                                            <Popper
                                                              modifiers={
                                                                Object {
                                                                  "preventOverflow": Object {
                                                                    "boundariesElement": "viewport",
                                                                    "enabled": true,
                                                                    "padding": 8,
                                                                  },
                                                                }
                                                              }
                                                              placement="bottom"
                                                            >
                                                              <InnerPopper
                                                                eventsEnabled={true}
                                                                modifiers={
                                                                  Object {
                                                                    "preventOverflow": Object {
                                                                      "boundariesElement": "viewport",
                                                                      "enabled": true,
                                                                      "padding": 8,
                                                                    },
                                                                  }
                                                                }
                                                                placement="bottom"
                                                                positionFixed={false}
                                                                referenceElement={
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    class="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="32px"
                                                                    icon="more"
                                                                    p="half"
                                                                    viewBox="0 0 24 24"
                                                                    width="32px"
                                                                  >
                                                                    <path
                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                    />
                                                                  </svg>
                                                                }
                                                              />
                                                            </Popper>
                                                          </Manager>
                                                        </button>
                                                      </IconicButton__WrapperButton>
                                                    </ForwardRef>
                                                  </Styled(Component)>
                                                </InnerReference>
                                              </Reference>
                                              <Popper
                                                modifiers={
                                                  Object {
                                                    "boundariesElement": "viewport",
                                                    "preventOverflow": Object {
                                                      "boundariesElement": "viewport",
                                                      "enabled": true,
                                                      "padding": 8,
                                                    },
                                                  }
                                                }
                                                placement="bottom-start"
                                              >
                                                <InnerPopper
                                                  eventsEnabled={true}
                                                  modifiers={
                                                    Object {
                                                      "boundariesElement": "viewport",
                                                      "preventOverflow": Object {
                                                        "boundariesElement": "viewport",
                                                        "enabled": true,
                                                        "padding": 8,
                                                      },
                                                    }
                                                  }
                                                  placement="bottom-start"
                                                  positionFixed={false}
                                                  referenceElement={
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="open"
                                                      class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="sc-AykKD kaUxeX"
                                                        color="currentColor"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="32px"
                                                        icon="more"
                                                        p="half"
                                                        viewBox="0 0 24 24"
                                                        width="32px"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  }
                                                />
                                              </Popper>
                                            </Manager>
                                          </ForwardRef>
                                        </ForwardRef>
                                      </div>
                                    </Box>
                                  </td>
                                </TableCell>
                              </tr>
                            </TableBody__StyledTr>
                          </TableBodyRow>
                          <TableBodyRow
                            columns={
                              Array [
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "selected",
                                  "headerFormatter": [Function],
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "expanded",
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "date",
                                  "label": "Date",
                                  "width": "15%",
                                },
                                Object {
                                  "dataKey": "expectedQuantity",
                                  "label": "Expected Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "actualQuantity",
                                  "label": "Actual Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "note",
                                  "label": "Note",
                                  "width": "45%",
                                },
                                Object {
                                  "cellRenderer": [Function],
                                  "dataKey": "actions",
                                  "label": "",
                                  "width": "5%",
                                },
                              ]
                            }
                            compact={false}
                            key="r5"
                            keyField="id"
                            row={
                              Object {
                                "actualQuantity": "675 eaches",
                                "date": "2019-10-04",
                                "expanded": false,
                                "expectedQuantity": "2,475 eaches",
                                "id": "r5",
                                "note": "1c Other Plant-related issue, equipment issues",
                                "selected": false,
                              }
                            }
                            rowHovers={true}
                          >
                            <TableBody__StyledTr
                              rowHovers={true}
                            >
                              <tr
                                className="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
                              >
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "selected",
                                      "headerFormatter": [Function],
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="selected"
                                  row={
                                    Object {
                                      "actualQuantity": "675 eaches",
                                      "date": "2019-10-04",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r5",
                                      "note": "1c Other Plant-related issue, equipment issues",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <SelectCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "selected",
                                            "headerFormatter": [Function],
                                            "width": "30px",
                                          }
                                        }
                                        onSelectRow={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "675 eaches",
                                            "date": "2019-10-04",
                                            "expanded": false,
                                            "expectedQuantity": "2,475 eaches",
                                            "id": "r5",
                                            "note": "1c Other Plant-related issue, equipment issues",
                                            "selected": false,
                                          }
                                        }
                                      >
                                        <Styled(BaseCheckbox)
                                          aria-label="deselect row"
                                          checked={false}
                                          disabled={false}
                                          error={false}
                                          id={null}
                                          onChange={[Function]}
                                          required={false}
                                        >
                                          <BaseCheckbox
                                            aria-label="deselect row"
                                            checked={false}
                                            className="sc-fzXfNc bSPfCk"
                                            disabled={false}
                                            error={false}
                                            id={null}
                                            onChange={[Function]}
                                            required={false}
                                          >
                                            <Box
                                              className="sc-fzXfNc bSPfCk"
                                              theme={
                                                Object {
                                                  "borders": Array [],
                                                  "breakpoints": Object {
                                                    "extraLarge": "1920px",
                                                    "extraSmall": "0px",
                                                    "large": "1360px",
                                                    "medium": "1024px",
                                                    "small": "768px",
                                                  },
                                                  "colors": Object {
                                                    "black": "#011e38",
                                                    "blackBlue": "#122b47",
                                                    "blue": "#216beb",
                                                    "darkBlue": "#00438f",
                                                    "darkGrey": "#434d59",
                                                    "green": "#008059",
                                                    "grey": "#c0c8d1",
                                                    "lightBlue": "#e1ebfa",
                                                    "lightGreen": "#e9f7f2",
                                                    "lightGrey": "#e4e7eb",
                                                    "lightRed": "#fae6ea",
                                                    "lightYellow": "#fcf5e3",
                                                    "red": "#cc1439",
                                                    "white": "#ffffff",
                                                    "whiteGrey": "#f0f2f5",
                                                    "yellow": "#ffbb00",
                                                  },
                                                  "fontSizes": Object {
                                                    "large": "20px",
                                                    "larger": "26px",
                                                    "largest": "46px",
                                                    "medium": "16px",
                                                    "small": "14px",
                                                    "smaller": "12px",
                                                  },
                                                  "fontWeights": Object {
                                                    "bold": "600",
                                                    "light": "300",
                                                    "medium": "500",
                                                    "normal": "400",
                                                  },
                                                  "fonts": Object {
                                                    "base": "'IBM Plex Sans', sans-serif",
                                                    "mono": "'IBM Plex Mono', monospace",
                                                  },
                                                  "lineHeights": Object {
                                                    "base": "1.5",
                                                    "sectionTitle": "1.23076923",
                                                    "smallTextBase": "1.71428571",
                                                    "smallTextCompressed": "1.14285714",
                                                    "smallerText": "1.33333333",
                                                    "subsectionTitle": "1.2",
                                                    "title": "1.04347826",
                                                  },
                                                  "radii": Object {
                                                    "circle": "50%",
                                                    "medium": "4px",
                                                    "small": "2px",
                                                  },
                                                  "shadows": Object {
                                                    "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                    "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                    "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                    "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                    "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                  },
                                                  "space": Object {
                                                    "half": "4px",
                                                    "none": "0px",
                                                    "x1": "8px",
                                                    "x2": "16px",
                                                    "x3": "24px",
                                                    "x4": "32px",
                                                    "x5": "40px",
                                                    "x6": "48px",
                                                    "x8": "64px",
                                                  },
                                                  "zIndex": Object {
                                                    "content": 100,
                                                    "overlay": 1000,
                                                    "tabsBar": 210,
                                                    "tabsScollIndicator": 200,
                                                  },
                                                }
                                              }
                                            >
                                              <div
                                                className="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
                                              >
                                                <ClickInputLabel
                                                  disabled={false}
                                                >
                                                  <label
                                                    className="ClickInputLabel-j2axnv-0 hdKIjC"
                                                    disabled={false}
                                                  >
                                                    <Checkbox__CheckboxInput
                                                      aria-invalid={false}
                                                      aria-label="deselect row"
                                                      aria-required={false}
                                                      checked={false}
                                                      className="sc-fzXfNc bSPfCk"
                                                      disabled={false}
                                                      error={false}
                                                      id={null}
                                                      onChange={[Function]}
                                                      required={false}
                                                      type="checkbox"
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-label="deselect row"
                                                        aria-required={false}
                                                        checked={false}
                                                        className="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                                                        disabled={false}
                                                        id={null}
                                                        onChange={[Function]}
                                                        required={false}
                                                        type="checkbox"
                                                      />
                                                    </Checkbox__CheckboxInput>
                                                    <Checkbox__VisualCheckbox
                                                      checked={false}
                                                      disabled={false}
                                                    >
                                                      <div
                                                        checked={false}
                                                        className="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                                                        disabled={false}
                                                      />
                                                    </Checkbox__VisualCheckbox>
                                                  </label>
                                                </ClickInputLabel>
                                              </div>
                                            </Box>
                                          </BaseCheckbox>
                                        </Styled(BaseCheckbox)>
                                      </SelectCell>
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData={false}
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "expanded",
                                      "width": "30px",
                                    }
                                  }
                                  compact={false}
                                  key="expanded"
                                  row={
                                    Object {
                                      "actualQuantity": "675 eaches",
                                      "date": "2019-10-04",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r5",
                                      "note": "1c Other Plant-related issue, equipment issues",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      <ExpandCell
                                        cellData={false}
                                        column={
                                          Object {
                                            "cellFormatter": [Function],
                                            "dataKey": "expanded",
                                            "width": "30px",
                                          }
                                        }
                                        onRowExpansionChange={[Function]}
                                        row={
                                          Object {
                                            "actualQuantity": "675 eaches",
                                            "date": "2019-10-04",
                                            "expanded": false,
                                            "expectedQuantity": "2,475 eaches",
                                            "id": "r5",
                                            "note": "1c Other Plant-related issue, equipment issues",
                                            "selected": false,
                                          }
                                        }
                                      />
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2019-10-04"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellFormatter": [Function],
                                      "dataKey": "date",
                                      "label": "Date",
                                      "width": "15%",
                                    }
                                  }
                                  compact={false}
                                  key="date"
                                  row={
                                    Object {
                                      "actualQuantity": "675 eaches",
                                      "date": "2019-10-04",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r5",
                                      "note": "1c Other Plant-related issue, equipment issues",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      Fri, 04 Oct 2019
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="2,475 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "expectedQuantity",
                                      "label": "Expected Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="expectedQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "675 eaches",
                                      "date": "2019-10-04",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r5",
                                      "note": "1c Other Plant-related issue, equipment issues",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      2,475 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="675 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actualQuantity",
                                      "label": "Actual Quantity",
                                      "width": "20%",
                                    }
                                  }
                                  compact={false}
                                  key="actualQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "675 eaches",
                                      "date": "2019-10-04",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r5",
                                      "note": "1c Other Plant-related issue, equipment issues",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      675 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="1c Other Plant-related issue, equipment issues"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "note",
                                      "label": "Note",
                                      "width": "45%",
                                    }
                                  }
                                  compact={false}
                                  key="note"
                                  row={
                                    Object {
                                      "actualQuantity": "675 eaches",
                                      "date": "2019-10-04",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r5",
                                      "note": "1c Other Plant-related issue, equipment issues",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      1c Other Plant-related issue, equipment issues
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "cellRenderer": [Function],
                                      "dataKey": "actions",
                                      "label": "",
                                      "width": "5%",
                                    }
                                  }
                                  compact={false}
                                  key="actions"
                                  row={
                                    Object {
                                      "actualQuantity": "675 eaches",
                                      "date": "2019-10-04",
                                      "expanded": false,
                                      "expectedQuantity": "2,475 eaches",
                                      "id": "r5",
                                      "note": "1c Other Plant-related issue, equipment issues",
                                      "selected": false,
                                    }
                                  }
                                >
                                  <td
                                    colSpan={null}
                                  >
                                    <Box
                                      pr="x3"
                                      textAlign="right"
                                      theme={
                                        Object {
                                          "borders": Array [],
                                          "breakpoints": Object {
                                            "extraLarge": "1920px",
                                            "extraSmall": "0px",
                                            "large": "1360px",
                                            "medium": "1024px",
                                            "small": "768px",
                                          },
                                          "colors": Object {
                                            "black": "#011e38",
                                            "blackBlue": "#122b47",
                                            "blue": "#216beb",
                                            "darkBlue": "#00438f",
                                            "darkGrey": "#434d59",
                                            "green": "#008059",
                                            "grey": "#c0c8d1",
                                            "lightBlue": "#e1ebfa",
                                            "lightGreen": "#e9f7f2",
                                            "lightGrey": "#e4e7eb",
                                            "lightRed": "#fae6ea",
                                            "lightYellow": "#fcf5e3",
                                            "red": "#cc1439",
                                            "white": "#ffffff",
                                            "whiteGrey": "#f0f2f5",
                                            "yellow": "#ffbb00",
                                          },
                                          "fontSizes": Object {
                                            "large": "20px",
                                            "larger": "26px",
                                            "largest": "46px",
                                            "medium": "16px",
                                            "small": "14px",
                                            "smaller": "12px",
                                          },
                                          "fontWeights": Object {
                                            "bold": "600",
                                            "light": "300",
                                            "medium": "500",
                                            "normal": "400",
                                          },
                                          "fonts": Object {
                                            "base": "'IBM Plex Sans', sans-serif",
                                            "mono": "'IBM Plex Mono', monospace",
                                          },
                                          "lineHeights": Object {
                                            "base": "1.5",
                                            "sectionTitle": "1.23076923",
                                            "smallTextBase": "1.71428571",
                                            "smallTextCompressed": "1.14285714",
                                            "smallerText": "1.33333333",
                                            "subsectionTitle": "1.2",
                                            "title": "1.04347826",
                                          },
                                          "radii": Object {
                                            "circle": "50%",
                                            "medium": "4px",
                                            "small": "2px",
                                          },
                                          "shadows": Object {
                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                          },
                                          "space": Object {
                                            "half": "4px",
                                            "none": "0px",
                                            "x1": "8px",
                                            "x2": "16px",
                                            "x3": "24px",
                                            "x4": "32px",
                                            "x5": "40px",
                                            "x6": "48px",
                                            "x8": "64px",
                                          },
                                          "zIndex": Object {
                                            "content": 100,
                                            "overlay": 1000,
                                            "tabsBar": 210,
                                            "tabsScollIndicator": 200,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="Box-sc-1qu1edy-0 dqSmZd"
                                      >
                                        <ForwardRef
                                          backgroundColor="whiteGrey"
                                          boundariesElement="viewport"
                                          defaultOpen={false}
                                          disabled={false}
                                          hideDelay="200"
                                          placement="bottom-start"
                                          showArrow={true}
                                          showDelay="100"
                                          trigger={[Function]}
                                        >
                                          <ForwardRef
                                            backgroundColor="whiteGrey"
                                            borderColor="whiteGrey"
                                            defaultOpen={false}
                                            hideDelay="200"
                                            id={null}
                                            modifiers={
                                              Object {
                                                "boundariesElement": "viewport",
                                                "preventOverflow": Object {
                                                  "boundariesElement": "viewport",
                                                  "enabled": true,
                                                  "padding": 8,
                                                },
                                              }
                                            }
                                            openOnClick={true}
                                            openOnHover={false}
                                            popperPlacement="bottom-start"
                                            showArrow={true}
                                            showDelay="100"
                                            trigger={
                                              <ForwardRef(Styled(Component))
                                                aria-haspopup={true}
                                                disabled={null}
                                                icon="more"
                                                type="button"
                                              />
                                            }
                                          >
                                            <Manager>
                                              <Reference>
                                                <InnerReference
                                                  setReferenceNode={[Function]}
                                                >
                                                  <Styled(Component)
                                                    aria-describedby={null}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    aria-label="open"
                                                    disabled={null}
                                                    icon="more"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseDown={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef
                                                      aria-describedby={null}
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      aria-label="open"
                                                      className="sc-fzXfLQ bZudva"
                                                      disabled={null}
                                                      icon="more"
                                                      labelHidden={false}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseDown={[Function]}
                                                      type="button"
                                                    >
                                                      <IconicButton__WrapperButton
                                                        aria-describedby={null}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-label="open"
                                                        className="sc-fzXfLQ bZudva"
                                                        disabled={null}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        type="button"
                                                      >
                                                        <button
                                                          aria-describedby={null}
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-label="open"
                                                          className="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                          disabled={null}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseDown={[Function]}
                                                          type="button"
                                                        >
                                                          <Manager>
                                                            <Reference>
                                                              <InnerReference
                                                                setReferenceNode={[Function]}
                                                              >
                                                                <Styled(Component)
                                                                  color="currentColor"
                                                                  icon="more"
                                                                  p="half"
                                                                  size="32px"
                                                                  title={null}
                                                                >
                                                                  <ForwardRef
                                                                    className="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    focusable={false}
                                                                    icon="more"
                                                                    p="half"
                                                                    size="32px"
                                                                    title={null}
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="sc-AykKD kaUxeX"
                                                                      color="currentColor"
                                                                      fill="currentColor"
                                                                      focusable={false}
                                                                      height="32px"
                                                                      icon="more"
                                                                      p="half"
                                                                      size="32px"
                                                                      title={null}
                                                                      viewBox="0 0 24 24"
                                                                      width="32px"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                        key="0"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef>
                                                                </Styled(Component)>
                                                              </InnerReference>
                                                            </Reference>
                                                            <Popper
                                                              modifiers={
                                                                Object {
                                                                  "preventOverflow": Object {
                                                                    "boundariesElement": "viewport",
                                                                    "enabled": true,
                                                                    "padding": 8,
                                                                  },
                                                                }
                                                              }
                                                              placement="bottom"
                                                            >
                                                              <InnerPopper
                                                                eventsEnabled={true}
                                                                modifiers={
                                                                  Object {
                                                                    "preventOverflow": Object {
                                                                      "boundariesElement": "viewport",
                                                                      "enabled": true,
                                                                      "padding": 8,
                                                                    },
                                                                  }
                                                                }
                                                                placement="bottom"
                                                                positionFixed={false}
                                                                referenceElement={
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    class="sc-AykKD kaUxeX"
                                                                    color="currentColor"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="32px"
                                                                    icon="more"
                                                                    p="half"
                                                                    viewBox="0 0 24 24"
                                                                    width="32px"
                                                                  >
                                                                    <path
                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                    />
                                                                  </svg>
                                                                }
                                                              />
                                                            </Popper>
                                                          </Manager>
                                                        </button>
                                                      </IconicButton__WrapperButton>
                                                    </ForwardRef>
                                                  </Styled(Component)>
                                                </InnerReference>
                                              </Reference>
                                              <Popper
                                                modifiers={
                                                  Object {
                                                    "boundariesElement": "viewport",
                                                    "preventOverflow": Object {
                                                      "boundariesElement": "viewport",
                                                      "enabled": true,
                                                      "padding": 8,
                                                    },
                                                  }
                                                }
                                                placement="bottom-start"
                                              >
                                                <InnerPopper
                                                  eventsEnabled={true}
                                                  modifiers={
                                                    Object {
                                                      "boundariesElement": "viewport",
                                                      "preventOverflow": Object {
                                                        "boundariesElement": "viewport",
                                                        "enabled": true,
                                                        "padding": 8,
                                                      },
                                                    }
                                                  }
                                                  placement="bottom-start"
                                                  positionFixed={false}
                                                  referenceElement={
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="open"
                                                      class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                                                      type="button"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="sc-AykKD kaUxeX"
                                                        color="currentColor"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="32px"
                                                        icon="more"
                                                        p="half"
                                                        viewBox="0 0 24 24"
                                                        width="32px"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </button>
                                                  }
                                                />
                                              </Popper>
                                            </Manager>
                                          </ForwardRef>
                                        </ForwardRef>
                                      </div>
                                    </Box>
                                  </td>
                                </TableCell>
                              </tr>
                            </TableBody__StyledTr>
                          </TableBodyRow>
                        </tbody>
                      </TableBody>
                      <TableFoot
                        columns={
                          Array [
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "selected",
                              "headerFormatter": [Function],
                              "width": "30px",
                            },
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "expanded",
                              "width": "30px",
                            },
                            Object {
                              "cellFormatter": [Function],
                              "dataKey": "date",
                              "label": "Date",
                              "width": "15%",
                            },
                            Object {
                              "dataKey": "expectedQuantity",
                              "label": "Expected Quantity",
                              "width": "20%",
                            },
                            Object {
                              "dataKey": "actualQuantity",
                              "label": "Actual Quantity",
                              "width": "20%",
                            },
                            Object {
                              "dataKey": "note",
                              "label": "Note",
                              "width": "45%",
                            },
                            Object {
                              "cellRenderer": [Function],
                              "dataKey": "actions",
                              "label": "",
                              "width": "5%",
                            },
                          ]
                        }
                        keyField="id"
                        loading={false}
                        rows={
                          Array [
                            Object {
                              "actualQuantity": "7,725 eaches",
                              "date": "Total",
                              "expectedQuantity": "18,000 eaches",
                              "id": "f1",
                            },
                            Object {
                              "actualQuantity": "41.5%",
                              "date": "Attainment",
                              "expectedQuantity": "",
                              "id": "f2",
                            },
                          ]
                        }
                      >
                        <tfoot>
                          <TableFooterRow
                            columns={
                              Array [
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "selected",
                                  "headerFormatter": [Function],
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "expanded",
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "date",
                                  "label": "Date",
                                  "width": "15%",
                                },
                                Object {
                                  "dataKey": "expectedQuantity",
                                  "label": "Expected Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "actualQuantity",
                                  "label": "Actual Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "note",
                                  "label": "Note",
                                  "width": "45%",
                                },
                                Object {
                                  "cellRenderer": [Function],
                                  "dataKey": "actions",
                                  "label": "",
                                  "width": "5%",
                                },
                              ]
                            }
                            key="f1"
                            loading={false}
                            row={
                              Object {
                                "actualQuantity": "7,725 eaches",
                                "date": "Total",
                                "expectedQuantity": "18,000 eaches",
                                "id": "f1",
                              }
                            }
                          >
                            <TableFoot__StyledFooterRow>
                              <tr
                                className="TableFoot__StyledFooterRow-sc-1q56pdo-0 czwijJ"
                              >
                                <StyledTh
                                  colSpan={3}
                                  key="date"
                                  scope="row"
                                >
                                  <th
                                    className="StyledTh-sc-10nzyk9-0 cmwBAa"
                                    colSpan={3}
                                    scope="row"
                                  >
                                    Total
                                  </th>
                                </StyledTh>
                                <TableCell
                                  cellData="18,000 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "expectedQuantity",
                                      "label": "Expected Quantity",
                                    }
                                  }
                                  compact={false}
                                  key="expectedQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "7,725 eaches",
                                      "date": "Total",
                                      "expectedQuantity": "18,000 eaches",
                                      "id": "f1",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      18,000 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="7,725 eaches"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actualQuantity",
                                      "label": "Actual Quantity",
                                    }
                                  }
                                  compact={false}
                                  key="actualQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "7,725 eaches",
                                      "date": "Total",
                                      "expectedQuantity": "18,000 eaches",
                                      "id": "f1",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      7,725 eaches
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "note",
                                      "label": "Note",
                                    }
                                  }
                                  compact={false}
                                  key="note"
                                  row={
                                    Object {
                                      "actualQuantity": "7,725 eaches",
                                      "date": "Total",
                                      "expectedQuantity": "18,000 eaches",
                                      "id": "f1",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actions",
                                      "label": "",
                                    }
                                  }
                                  compact={false}
                                  key="actions"
                                  row={
                                    Object {
                                      "actualQuantity": "7,725 eaches",
                                      "date": "Total",
                                      "expectedQuantity": "18,000 eaches",
                                      "id": "f1",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                              </tr>
                            </TableFoot__StyledFooterRow>
                          </TableFooterRow>
                          <TableFooterRow
                            columns={
                              Array [
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "selected",
                                  "headerFormatter": [Function],
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "expanded",
                                  "width": "30px",
                                },
                                Object {
                                  "cellFormatter": [Function],
                                  "dataKey": "date",
                                  "label": "Date",
                                  "width": "15%",
                                },
                                Object {
                                  "dataKey": "expectedQuantity",
                                  "label": "Expected Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "actualQuantity",
                                  "label": "Actual Quantity",
                                  "width": "20%",
                                },
                                Object {
                                  "dataKey": "note",
                                  "label": "Note",
                                  "width": "45%",
                                },
                                Object {
                                  "cellRenderer": [Function],
                                  "dataKey": "actions",
                                  "label": "",
                                  "width": "5%",
                                },
                              ]
                            }
                            key="f2"
                            loading={false}
                            row={
                              Object {
                                "actualQuantity": "41.5%",
                                "date": "Attainment",
                                "expectedQuantity": "",
                                "id": "f2",
                              }
                            }
                          >
                            <TableFoot__StyledFooterRow>
                              <tr
                                className="TableFoot__StyledFooterRow-sc-1q56pdo-0 czwijJ"
                              >
                                <StyledTh
                                  colSpan={3}
                                  key="date"
                                  scope="row"
                                >
                                  <th
                                    className="StyledTh-sc-10nzyk9-0 cmwBAa"
                                    colSpan={3}
                                    scope="row"
                                  >
                                    Attainment
                                  </th>
                                </StyledTh>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "expectedQuantity",
                                      "label": "Expected Quantity",
                                    }
                                  }
                                  compact={false}
                                  key="expectedQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "41.5%",
                                      "date": "Attainment",
                                      "expectedQuantity": "",
                                      "id": "f2",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData="41.5%"
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actualQuantity",
                                      "label": "Actual Quantity",
                                    }
                                  }
                                  compact={false}
                                  key="actualQuantity"
                                  row={
                                    Object {
                                      "actualQuantity": "41.5%",
                                      "date": "Attainment",
                                      "expectedQuantity": "",
                                      "id": "f2",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    >
                                      41.5%
                                    </td>
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "note",
                                      "label": "Note",
                                    }
                                  }
                                  compact={false}
                                  key="note"
                                  row={
                                    Object {
                                      "actualQuantity": "41.5%",
                                      "date": "Attainment",
                                      "expectedQuantity": "",
                                      "id": "f2",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                                <TableCell
                                  cellData=""
                                  colSpan={null}
                                  column={
                                    Object {
                                      "dataKey": "actions",
                                      "label": "",
                                    }
                                  }
                                  compact={false}
                                  key="actions"
                                  row={
                                    Object {
                                      "actualQuantity": "41.5%",
                                      "date": "Attainment",
                                      "expectedQuantity": "",
                                      "id": "f2",
                                    }
                                  }
                                >
                                  <TableCell__StyledTableCell
                                    compact={false}
                                  >
                                    <td
                                      className="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
                                    />
                                  </TableCell__StyledTableCell>
                                </TableCell>
                              </tr>
                            </TableFoot__StyledFooterRow>
                          </TableFooterRow>
                        </tfoot>
                      </TableFoot>
                    </table>
                  </BaseTable__StyledTable>
                </BaseTable>
                <Pagination
                  currentPage={1}
                  justifyContent="flex-end"
                  onNext={[Function]}
                  onPrevious={[Function]}
                  onSelectPage={[Function]}
                  pt="x2"
                  totalPages={3}
=======
                  <path
                    d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                  />
                </svg>
              </button>
            </div>
          </td>
        </tr>
        <tr
          class="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
        >
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            <div
              class="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
            >
              <label
                class="ClickInputLabel-j2axnv-0 hdKIjC"
              >
                <input
                  aria-invalid="false"
                  aria-label="deselect row"
                  aria-required="false"
                  class="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                  type="checkbox"
                />
                <div
                  class="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                />
              </label>
            </div>
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            Wed, 02 Oct 2019
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            2,475 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            2,250 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td>
            <div
              class="Box-sc-1qu1edy-0 dqSmZd"
            >
              <button
                aria-expanded="false"
                aria-haspopup="true"
                aria-label="open"
                class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  class="sc-AykKD kaUxeX"
                  color="currentColor"
                  fill="currentColor"
                  focusable="false"
                  height="32px"
                  icon="more"
                  p="half"
                  viewBox="0 0 24 24"
                  width="32px"
                >
                  <path
                    d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                  />
                </svg>
              </button>
            </div>
          </td>
        </tr>
        <tr
          class="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
        >
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            <div
              class="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
            >
              <label
                class="ClickInputLabel-j2axnv-0 hdKIjC"
              >
                <input
                  aria-invalid="false"
                  aria-label="deselect row"
                  aria-required="false"
                  class="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                  type="checkbox"
                />
                <div
                  class="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                />
              </label>
            </div>
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            Thu, 03 Oct 2019
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            2,475 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            1,425 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td>
            <div
              class="Box-sc-1qu1edy-0 dqSmZd"
            >
              <button
                aria-expanded="false"
                aria-haspopup="true"
                aria-label="open"
                class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  class="sc-AykKD kaUxeX"
                  color="currentColor"
                  fill="currentColor"
                  focusable="false"
                  height="32px"
                  icon="more"
                  p="half"
                  viewBox="0 0 24 24"
                  width="32px"
>>>>>>> fix build errors
                >
                  <path
                    d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                  />
                </svg>
              </button>
            </div>
          </td>
        </tr>
        <tr
          class="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
        >
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            <div
              class="Box-sc-1qu1edy-0 jgHxgc sc-fzXfNc bSPfCk"
            >
              <label
                class="ClickInputLabel-j2axnv-0 hdKIjC"
              >
                <input
                  aria-invalid="false"
                  aria-label="deselect row"
                  aria-required="false"
                  class="Checkbox__CheckboxInput-sc-1nm58f1-1 bJQgsS sc-fzXfNc bSPfCk"
                  type="checkbox"
                />
                <div
                  class="Checkbox__VisualCheckbox-sc-1nm58f1-0 eVpbJR"
                />
              </label>
            </div>
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            Fri, 04 Oct 2019
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            2,475 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            675 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            1c Other Plant-related issue, equipment issues
          </td>
          <td>
            <div
              class="Box-sc-1qu1edy-0 dqSmZd"
            >
              <button
                aria-expanded="false"
                aria-haspopup="true"
                aria-label="open"
                class="IconicButton__WrapperButton-sc-1u3dojp-1 hgEYuX sc-fzXfLQ bZudva"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  class="sc-AykKD kaUxeX"
                  color="currentColor"
                  fill="currentColor"
                  focusable="false"
                  height="32px"
                  icon="more"
                  p="half"
                  viewBox="0 0 24 24"
                  width="32px"
                >
                  <path
                    d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                  />
                </svg>
              </button>
            </div>
          </td>
        </tr>
      </tbody>
      <tfoot>
        <tr
          class="TableFoot__StyledFooterRow-sc-1q56pdo-0 czwijJ"
        >
          <th
            class="StyledTh-sc-10nzyk9-0 cmwBAa"
            colspan="3"
            scope="row"
          >
            Total
          </th>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            18,000 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            7,725 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
        </tr>
        <tr
          class="TableFoot__StyledFooterRow-sc-1q56pdo-0 czwijJ"
        >
          <th
            class="StyledTh-sc-10nzyk9-0 cmwBAa"
            colspan="3"
            scope="row"
          >
            Attainment
          </th>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            41.5%
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          />
        </tr>
      </tfoot>
    </table>
    <nav
      aria-label="pagination navigation"
      class="Box-sc-1qu1edy-0 sc-AykKC htLZb"
    >
      <button
        aria-label="go to previous results"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 hWNkwR"
        disabled=""
      >
        <svg
          aria-hidden="true"
          class="sc-AykKD dKbtnU"
          color="currentColor"
          fill="currentColor"
          focusable="false"
          height="24px"
          icon="leftArrow"
          ml="-8px"
          viewBox="0 0 24 24"
          width="24px"
        >
          <path
            d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
          />
        </svg>
         Previous
      </button>
      <button
        aria-current="true"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL ikgQRY"
        disabled=""
      >
        1
      </button>
      <button
        aria-current="false"
        aria-label="go to page 2"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL fHUOFU"
      >
        2
      </button>
      <button
        aria-current="false"
        aria-label="go to page 3"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL fHUOFU"
      >
        3
      </button>
      <button
        aria-label="go to next results"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 kDWqWC"
      >
        Next 
        <svg
          aria-hidden="true"
          class="sc-AykKD faeHcD"
          color="currentColor"
          fill="currentColor"
          focusable="false"
          height="24px"
          icon="rightArrow"
          mr="-8px"
          viewBox="0 0 24 24"
          width="24px"
        >
          <path
            d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
          />
        </svg>
      </button>
    </nav>
  </div>
</div>
`;

exports[`Storyshots Table with pagination 1`] = `
<div
  style="padding:24px"
>
  <div
    class="NDSProvider__GlobalStyles-f28eoq-0 edIMFr"
  >
    <table
      class="BaseTable__StyledTable-sc-10lnp9m-0 dvrgBW"
    >
      <thead>
        <tr
          class="TableHead__StyledHeaderRow-msr3t5-0 kngHIX"
        >
          <th
            class="StyledTh-sc-10nzyk9-0 cmwBAa"
            scope="col"
          >
            Date
          </th>
          <th
            class="StyledTh-sc-10nzyk9-0 cmwBAa"
            scope="col"
          >
            Expected Quantity
          </th>
          <th
            class="StyledTh-sc-10nzyk9-0 cmwBAa"
            scope="col"
          >
            Actual Quantity
          </th>
        </tr>
      </thead>
      <tbody>
        <tr
          class="TableBody__StyledTr-sc-1amzhx8-0 gVJELy"
        >
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            2019-10-01
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            2,025 eaches
          </td>
          <td
            class="TableCell__StyledTableCell-sc-1t826om-0 iZwXyP"
          >
            1,800 eaches
          </td>
        </tr>
      </tbody>
      <tfoot />
    </table>
    <nav
      aria-label="pagination navigation"
      class="Box-sc-1qu1edy-0 sc-AykKC htLZb"
    >
      <button
        aria-label="go to previous results"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 hWNkwR"
        disabled=""
      >
        <svg
          aria-hidden="true"
          class="sc-AykKD dKbtnU"
          color="currentColor"
          fill="currentColor"
          focusable="false"
          height="24px"
          icon="leftArrow"
          ml="-8px"
          viewBox="0 0 24 24"
          width="24px"
        >
          <path
            d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
          />
        </svg>
         Previous
      </button>
      <button
        aria-current="true"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL ikgQRY"
        disabled=""
      >
        1
      </button>
      <button
        aria-current="false"
        aria-label="go to page 2"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL fHUOFU"
      >
        2
      </button>
      <button
        aria-current="false"
        aria-label="go to page 3"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL fHUOFU"
      >
        3
      </button>
      <button
        aria-current="false"
        aria-label="go to page 4"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL fHUOFU"
      >
        4
      </button>
      <button
        aria-current="false"
        aria-label="go to page 5"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL fHUOFU"
      >
        5
      </button>
      <p
        class="sc-AykKF deuCmq"
        color="currentColor"
        font-size="small"
      >
        ...
      </p>
      <button
        aria-current="false"
        aria-label="go to page 8"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 sc-fzXfNL fHUOFU"
      >
        8
      </button>
      <button
        aria-label="go to next results"
        class="Pagination__PaginationButton-sc-1fsx1pp-0 kDWqWC"
      >
        Next 
        <svg
          aria-hidden="true"
          class="sc-AykKD faeHcD"
          color="currentColor"
          fill="currentColor"
          focusable="false"
          height="24px"
          icon="rightArrow"
          mr="-8px"
          viewBox="0 0 24 24"
          width="24px"
        >
          <path
            d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
          />
        </svg>
      </button>
    </nav>
  </div>
</div>
`;
