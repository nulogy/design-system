// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Table with everything 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <GlobalStyleComponent />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NDSProvider__GlobalStyles-f28eoq-0",
              "isStatic": false,
              "lastClassName": "gWUgWA",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "NDSProvider__GlobalStyles",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NDSProvider__GlobalStyles-f28eoq-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        theme={
          Object {
            "borders": Array [],
            "breakpoints": Object {
              "extraLarge": "1920px",
              "extraSmall": "0px",
              "large": "1360px",
              "medium": "1024px",
              "small": "768px",
            },
            "colors": Object {
              "black": "#011e38",
              "blackBlue": "#122b47",
              "blue": "#216beb",
              "darkBlue": "#00438f",
              "darkGrey": "#434d59",
              "green": "#008059",
              "grey": "#c0c8d1",
              "lightBlue": "#e1ebfa",
              "lightGreen": "#e9f7f2",
              "lightGrey": "#e4e7eb",
              "lightRed": "#fae6ea",
              "lightYellow": "#fcf5e3",
              "red": "#cc1439",
              "white": "#ffffff",
              "whiteGrey": "#f0f2f5",
              "yellow": "#ffbb00",
            },
            "fontSizes": Object {
              "large": "20px",
              "larger": "26px",
              "largest": "46px",
              "medium": "16px",
              "small": "14px",
              "smaller": "12px",
            },
            "fontWeights": Object {
              "bold": "600",
              "light": "300",
              "medium": "500",
              "normal": "400",
            },
            "fonts": Object {
              "base": "'IBM Plex Sans', sans-serif",
              "mono": "'IBM Plex Mono', monospace",
            },
            "lineHeights": Object {
              "base": "1.5",
              "sectionTitle": "1.23076923",
              "smallTextBase": "1.71428571",
              "smallTextCompressed": "1.14285714",
              "smallerText": "1.33333333",
              "subsectionTitle": "1.2",
              "title": "1.04347826",
            },
            "radii": Object {
              "circle": "50%",
              "medium": "4px",
              "small": "2px",
            },
            "shadows": Object {
              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
            },
            "space": Object {
              "half": "4px",
              "none": "0px",
              "x1": "8px",
              "x2": "16px",
              "x3": "24px",
              "x4": "32px",
              "x5": "40px",
              "x6": "48px",
              "x8": "64px",
            },
            "zIndex": Object {
              "content": 100,
              "overlay": 1000,
              "tabsBar": 210,
              "tabsScollIndicator": 200,
            },
          }
        }
      >
        <div
          className="NDSProvider__GlobalStyles-f28eoq-0 gWUgWA"
        >
          <ThemeProvider
            theme={
              Object {
                "borders": Array [],
                "breakpoints": Object {
                  "extraLarge": "1920px",
                  "extraSmall": "0px",
                  "large": "1360px",
                  "medium": "1024px",
                  "small": "768px",
                },
                "colors": Object {
                  "black": "#011e38",
                  "blackBlue": "#122b47",
                  "blue": "#216beb",
                  "darkBlue": "#00438f",
                  "darkGrey": "#434d59",
                  "green": "#008059",
                  "grey": "#c0c8d1",
                  "lightBlue": "#e1ebfa",
                  "lightGreen": "#e9f7f2",
                  "lightGrey": "#e4e7eb",
                  "lightRed": "#fae6ea",
                  "lightYellow": "#fcf5e3",
                  "red": "#cc1439",
                  "white": "#ffffff",
                  "whiteGrey": "#f0f2f5",
                  "yellow": "#ffbb00",
                },
                "fontSizes": Object {
                  "large": "20px",
                  "larger": "26px",
                  "largest": "46px",
                  "medium": "16px",
                  "small": "14px",
                  "smaller": "12px",
                },
                "fontWeights": Object {
                  "bold": "600",
                  "light": "300",
                  "medium": "500",
                  "normal": "400",
                },
                "fonts": Object {
                  "base": "'IBM Plex Sans', sans-serif",
                  "mono": "'IBM Plex Mono', monospace",
                },
                "lineHeights": Object {
                  "base": "1.5",
                  "sectionTitle": "1.23076923",
                  "smallTextBase": "1.71428571",
                  "smallTextCompressed": "1.14285714",
                  "smallerText": "1.33333333",
                  "subsectionTitle": "1.2",
                  "title": "1.04347826",
                },
                "radii": Object {
                  "circle": "50%",
                  "medium": "4px",
                  "small": "2px",
                },
                "shadows": Object {
                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                },
                "space": Object {
                  "half": "4px",
                  "none": "0px",
                  "x1": "8px",
                  "x2": "16px",
                  "x3": "24px",
                  "x4": "32px",
                  "x5": "40px",
                  "x6": "48px",
                  "x8": "64px",
                },
                "zIndex": Object {
                  "content": 100,
                  "overlay": 1000,
                  "tabsBar": 210,
                  "tabsScollIndicator": 200,
                },
              }
            }
          >
            <Table
              columns={
                Array [
                  Object {
                    "cellFormatter": [Function],
                    "dataKey": "date",
                    "label": "Date",
                    "width": "15%",
                  },
                  Object {
                    "dataKey": "expectedQuantity",
                    "label": "Expected Quantity",
                    "width": "20%",
                  },
                  Object {
                    "dataKey": "actualQuantity",
                    "label": "Actual Quantity",
                    "width": "20%",
                  },
                  Object {
                    "dataKey": "note",
                    "label": "Note",
                    "width": "45%",
                  },
                  Object {
                    "cellRenderer": [Function],
                    "dataKey": "actions",
                    "label": "",
                    "width": "5%",
                  },
                ]
              }
              compact={false}
              footerRows={
                Array [
                  Object {
                    "actualQuantity": "7,725 eaches",
                    "date": "Total",
                    "expectedQuantity": "18,000 eaches",
                    "id": "f1",
                  },
                  Object {
                    "actualQuantity": "41.5%",
                    "date": "Attainment",
                    "expectedQuantity": "",
                    "id": "f2",
                  },
                ]
              }
              hasExpandableRows={true}
              hasSelectableRows={true}
              isHeaderSelected={false}
              keyField="id"
              loading={false}
              noRowsContent="No records have been created for this table."
              onPageChange={[Function]}
              onRowExpansionChange={[Function]}
              onRowSelectionChange={[Function]}
              rowHovers={true}
              rows={
                Array [
                  Object {
                    "cellRenderer": [Function],
                    "heading": "ABC & XYZ Company",
                    "id": "r1",
                  },
                  Object {
                    "actualQuantity": "1,800 eaches",
                    "date": "2019-10-01",
                    "expandedContent": [Function],
                    "expectedQuantity": "2,025 eaches",
                    "id": "r2",
                  },
                  Object {
                    "actualQuantity": "2,250 eaches",
                    "date": "2019-10-02",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r3",
                  },
                  Object {
                    "actualQuantity": "1,425 eaches",
                    "date": "2019-10-03",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r4",
                  },
                  Object {
                    "actualQuantity": "675 eaches",
                    "date": "2019-10-04",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r5",
                    "note": "1c Other Plant-related issue, equipment issues",
                  },
                  Object {
                    "actualQuantity": "1,575 eaches",
                    "date": "2019-10-07",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r6",
                  },
                  Object {
                    "actualQuantity": "-",
                    "date": "2019-10-22",
                    "expectedQuantity": "1,725 eaches",
                    "id": "r7",
                  },
                  Object {
                    "cellRenderer": [Function],
                    "heading": "And Another Company",
                    "id": "r8",
                  },
                  Object {
                    "actualQuantity": "-",
                    "date": "2019-10-23",
                    "expandedContent": [Function],
                    "expectedQuantity": "2,475 eaches",
                    "id": "r9",
                  },
                  Object {
                    "actualQuantity": "-",
                    "date": "2019-10-24",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r10",
                  },
                ]
              }
              rowsPerPage={5}
              selectedRows={Array []}
            >
              <StatefulTable
                columns={
                  Array [
                    Object {
                      "cellFormatter": [Function],
                      "dataKey": "date",
                      "label": "Date",
                      "width": "15%",
                    },
                    Object {
                      "dataKey": "expectedQuantity",
                      "label": "Expected Quantity",
                      "width": "20%",
                    },
                    Object {
                      "dataKey": "actualQuantity",
                      "label": "Actual Quantity",
                      "width": "20%",
                    },
                    Object {
                      "dataKey": "note",
                      "label": "Note",
                      "width": "45%",
                    },
                    Object {
                      "cellRenderer": [Function],
                      "dataKey": "actions",
                      "label": "",
                      "width": "5%",
                    },
                  ]
                }
                compact={false}
                footerRows={
                  Array [
                    Object {
                      "actualQuantity": "7,725 eaches",
                      "date": "Total",
                      "expectedQuantity": "18,000 eaches",
                      "id": "f1",
                    },
                    Object {
                      "actualQuantity": "41.5%",
                      "date": "Attainment",
                      "expectedQuantity": "",
                      "id": "f2",
                    },
                  ]
                }
                hasExpandableRows={true}
                hasSelectableRows={true}
                isHeaderSelected={false}
                keyField="id"
                loading={false}
                noRowsContent="No records have been created for this table."
                onPageChange={[Function]}
                onRowExpansionChange={[Function]}
                onRowSelectionChange={[Function]}
                rowHovers={true}
                rows={
                  Array [
                    Object {
                      "cellRenderer": [Function],
                      "heading": "ABC & XYZ Company",
                      "id": "r1",
                    },
                    Object {
                      "actualQuantity": "1,800 eaches",
                      "date": "2019-10-01",
                      "expandedContent": [Function],
                      "expectedQuantity": "2,025 eaches",
                      "id": "r2",
                    },
                    Object {
                      "actualQuantity": "2,250 eaches",
                      "date": "2019-10-02",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r3",
                    },
                    Object {
                      "actualQuantity": "1,425 eaches",
                      "date": "2019-10-03",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r4",
                    },
                    Object {
                      "actualQuantity": "675 eaches",
                      "date": "2019-10-04",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r5",
                      "note": "1c Other Plant-related issue, equipment issues",
                    },
                    Object {
                      "actualQuantity": "1,575 eaches",
                      "date": "2019-10-07",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r6",
                    },
                    Object {
                      "actualQuantity": "-",
                      "date": "2019-10-22",
                      "expectedQuantity": "1,725 eaches",
                      "id": "r7",
                    },
                    Object {
                      "cellRenderer": [Function],
                      "heading": "And Another Company",
                      "id": "r8",
                    },
                    Object {
                      "actualQuantity": "-",
                      "date": "2019-10-23",
                      "expandedContent": [Function],
                      "expectedQuantity": "2,475 eaches",
                      "id": "r9",
                    },
                    Object {
                      "actualQuantity": "-",
                      "date": "2019-10-24",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r10",
                    },
                  ]
                }
                rowsPerPage={5}
                selectedRows={Array []}
              >
                <BaseTable
                  columns={
                    Array [
                      Object {
                        "cellFormatter": [Function],
                        "dataKey": "selected",
                        "headerFormatter": [Function],
                        "width": "30px",
                      },
                      Object {
                        "cellFormatter": [Function],
                        "dataKey": "expanded",
                        "width": "30px",
                      },
                      Object {
                        "cellFormatter": [Function],
                        "dataKey": "date",
                        "label": "Date",
                        "width": "15%",
                      },
                      Object {
                        "dataKey": "expectedQuantity",
                        "label": "Expected Quantity",
                        "width": "20%",
                      },
                      Object {
                        "dataKey": "actualQuantity",
                        "label": "Actual Quantity",
                        "width": "20%",
                      },
                      Object {
                        "dataKey": "note",
                        "label": "Note",
                        "width": "45%",
                      },
                      Object {
                        "cellRenderer": [Function],
                        "dataKey": "actions",
                        "label": "",
                        "width": "5%",
                      },
                    ]
                  }
                  compact={false}
                  expandedRows={Array []}
                  footerRows={
                    Array [
                      Object {
                        "actualQuantity": "7,725 eaches",
                        "date": "Total",
                        "expectedQuantity": "18,000 eaches",
                        "id": "f1",
                      },
                      Object {
                        "actualQuantity": "41.5%",
                        "date": "Attainment",
                        "expectedQuantity": "",
                        "id": "f2",
                      },
                    ]
                  }
                  hasExpandableRows={true}
                  hasSelectableRows={true}
                  isHeaderSelected={false}
                  keyField="id"
                  loading={false}
                  noRowsContent="No records have been created for this table."
                  onPageChange={[Function]}
                  onRowExpansionChange={[Function]}
                  onRowSelectionChange={[Function]}
                  onSelectHeader={[Function]}
                  onSelectRow={[Function]}
                  rowHovers={true}
                  rows={
                    Array [
                      Object {
                        "cellRenderer": [Function],
                        "expanded": false,
                        "heading": "ABC & XYZ Company",
                        "id": "r1",
                        "selected": false,
                      },
                      Object {
                        "actualQuantity": "1,800 eaches",
                        "date": "2019-10-01",
                        "expanded": false,
                        "expandedContent": [Function],
                        "expectedQuantity": "2,025 eaches",
                        "id": "r2",
                        "selected": false,
                      },
                      Object {
                        "actualQuantity": "2,250 eaches",
                        "date": "2019-10-02",
                        "expanded": false,
                        "expectedQuantity": "2,475 eaches",
                        "id": "r3",
                        "selected": false,
                      },
                      Object {
                        "actualQuantity": "1,425 eaches",
                        "date": "2019-10-03",
                        "expanded": false,
                        "expectedQuantity": "2,475 eaches",
                        "id": "r4",
                        "selected": false,
                      },
                      Object {
                        "actualQuantity": "675 eaches",
                        "date": "2019-10-04",
                        "expanded": false,
                        "expectedQuantity": "2,475 eaches",
                        "id": "r5",
                        "note": "1c Other Plant-related issue, equipment issues",
                        "selected": false,
                      },
                    ]
                  }
                  rowsPerPage={5}
                  selectedRows={Array []}
                >
                  <BaseTable__StyledTable>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "BaseTable__StyledTable-sc-10lnp9m-0",
                            "isStatic": false,
                            "lastClassName": "ycode",
                            "rules": Array [
                              "border-collapse: collapse;",
                              "width: 100%;",
                              "background: white;",
                            ],
                          },
                          "displayName": "BaseTable__StyledTable",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "BaseTable__StyledTable-sc-10lnp9m-0",
                          "target": "table",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <table
                        className="BaseTable__StyledTable-sc-10lnp9m-0 ycode"
                      >
                        <TableHead
                          columns={
                            Array [
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "selected",
                                "headerFormatter": [Function],
                                "width": "30px",
                              },
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "expanded",
                                "width": "30px",
                              },
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "date",
                                "label": "Date",
                                "width": "15%",
                              },
                              Object {
                                "dataKey": "expectedQuantity",
                                "label": "Expected Quantity",
                                "width": "20%",
                              },
                              Object {
                                "dataKey": "actualQuantity",
                                "label": "Actual Quantity",
                                "width": "20%",
                              },
                              Object {
                                "dataKey": "note",
                                "label": "Note",
                                "width": "45%",
                              },
                              Object {
                                "cellRenderer": [Function],
                                "dataKey": "actions",
                                "label": "",
                                "width": "5%",
                              },
                            ]
                          }
                          compact={false}
                        >
                          <thead>
                            <TableHead__StyledHeaderRow>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "TableHead__StyledHeaderRow-msr3t5-0",
                                      "isStatic": false,
                                      "lastClassName": "dCTkDK",
                                      "rules": Array [
                                        "color: #434d59;",
                                        "border-bottom: 1px solid #e4e7eb;",
                                      ],
                                    },
                                    "displayName": "TableHead__StyledHeaderRow",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "TableHead__StyledHeaderRow-msr3t5-0",
                                    "target": "tr",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <tr
                                  className="TableHead__StyledHeaderRow-msr3t5-0 dCTkDK"
                                >
                                  <StyledTh
                                    compact={false}
                                    key="selected"
                                    scope="col"
                                    width="30px"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                      width="30px"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 cziffQ"
                                        scope="col"
                                        width="30px"
                                      >
                                        <Styled(BaseCheckbox)
                                          aria-label="toggle all row selections"
                                          checked={false}
                                          onChange={[Function]}
                                        >
                                          <StyledComponent
                                            aria-label="toggle all row selections"
                                            checked={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-iAyFgw",
                                                  "isStatic": false,
                                                  "lastClassName": "kDTxQF",
                                                  "rules": Array [
                                                    "padding: 4px 0;",
                                                    "& .sc-bxivhb {",
                                                    "margin-left: 8px;",
                                                    "}",
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "Styled(BaseCheckbox)",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-iAyFgw",
                                                "target": [Function],
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            onChange={[Function]}
                                          >
                                            <BaseCheckbox
                                              aria-label="toggle all row selections"
                                              checked={false}
                                              className="sc-iAyFgw kDTxQF"
                                              disabled={false}
                                              error={false}
                                              id={null}
                                              onChange={[Function]}
                                              required={false}
                                            >
                                              <Box
                                                className="sc-iAyFgw kDTxQF"
                                                theme={
                                                  Object {
                                                    "borders": Array [],
                                                    "breakpoints": Object {
                                                      "extraLarge": "1920px",
                                                      "extraSmall": "0px",
                                                      "large": "1360px",
                                                      "medium": "1024px",
                                                      "small": "768px",
                                                    },
                                                    "colors": Object {
                                                      "black": "#011e38",
                                                      "blackBlue": "#122b47",
                                                      "blue": "#216beb",
                                                      "darkBlue": "#00438f",
                                                      "darkGrey": "#434d59",
                                                      "green": "#008059",
                                                      "grey": "#c0c8d1",
                                                      "lightBlue": "#e1ebfa",
                                                      "lightGreen": "#e9f7f2",
                                                      "lightGrey": "#e4e7eb",
                                                      "lightRed": "#fae6ea",
                                                      "lightYellow": "#fcf5e3",
                                                      "red": "#cc1439",
                                                      "white": "#ffffff",
                                                      "whiteGrey": "#f0f2f5",
                                                      "yellow": "#ffbb00",
                                                    },
                                                    "fontSizes": Object {
                                                      "large": "20px",
                                                      "larger": "26px",
                                                      "largest": "46px",
                                                      "medium": "16px",
                                                      "small": "14px",
                                                      "smaller": "12px",
                                                    },
                                                    "fontWeights": Object {
                                                      "bold": "600",
                                                      "light": "300",
                                                      "medium": "500",
                                                      "normal": "400",
                                                    },
                                                    "fonts": Object {
                                                      "base": "'IBM Plex Sans', sans-serif",
                                                      "mono": "'IBM Plex Mono', monospace",
                                                    },
                                                    "lineHeights": Object {
                                                      "base": "1.5",
                                                      "sectionTitle": "1.23076923",
                                                      "smallTextBase": "1.71428571",
                                                      "smallTextCompressed": "1.14285714",
                                                      "smallerText": "1.33333333",
                                                      "subsectionTitle": "1.2",
                                                      "title": "1.04347826",
                                                    },
                                                    "radii": Object {
                                                      "circle": "50%",
                                                      "medium": "4px",
                                                      "small": "2px",
                                                    },
                                                    "shadows": Object {
                                                      "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                      "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                      "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                      "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                      "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                    },
                                                    "space": Object {
                                                      "half": "4px",
                                                      "none": "0px",
                                                      "x1": "8px",
                                                      "x2": "16px",
                                                      "x3": "24px",
                                                      "x4": "32px",
                                                      "x5": "40px",
                                                      "x6": "48px",
                                                      "x8": "64px",
                                                    },
                                                    "zIndex": Object {
                                                      "content": 100,
                                                      "overlay": 1000,
                                                      "tabsBar": 210,
                                                      "tabsScollIndicator": 200,
                                                    },
                                                  }
                                                }
                                              >
                                                <StyledComponent
                                                  className="sc-iAyFgw kDTxQF"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "_foldedDefaultProps": Object {
                                                        "theme": Object {
                                                          "borders": Array [],
                                                          "breakpoints": Object {
                                                            "extraLarge": "1920px",
                                                            "extraSmall": "0px",
                                                            "large": "1360px",
                                                            "medium": "1024px",
                                                            "small": "768px",
                                                          },
                                                          "colors": Object {
                                                            "black": "#011e38",
                                                            "blackBlue": "#122b47",
                                                            "blue": "#216beb",
                                                            "darkBlue": "#00438f",
                                                            "darkGrey": "#434d59",
                                                            "green": "#008059",
                                                            "grey": "#c0c8d1",
                                                            "lightBlue": "#e1ebfa",
                                                            "lightGreen": "#e9f7f2",
                                                            "lightGrey": "#e4e7eb",
                                                            "lightRed": "#fae6ea",
                                                            "lightYellow": "#fcf5e3",
                                                            "red": "#cc1439",
                                                            "white": "#ffffff",
                                                            "whiteGrey": "#f0f2f5",
                                                            "yellow": "#ffbb00",
                                                          },
                                                          "fontSizes": Object {
                                                            "large": "20px",
                                                            "larger": "26px",
                                                            "largest": "46px",
                                                            "medium": "16px",
                                                            "small": "14px",
                                                            "smaller": "12px",
                                                          },
                                                          "fontWeights": Object {
                                                            "bold": "600",
                                                            "light": "300",
                                                            "medium": "500",
                                                            "normal": "400",
                                                          },
                                                          "fonts": Object {
                                                            "base": "'IBM Plex Sans', sans-serif",
                                                            "mono": "'IBM Plex Mono', monospace",
                                                          },
                                                          "lineHeights": Object {
                                                            "base": "1.5",
                                                            "sectionTitle": "1.23076923",
                                                            "smallTextBase": "1.71428571",
                                                            "smallTextCompressed": "1.14285714",
                                                            "smallerText": "1.33333333",
                                                            "subsectionTitle": "1.2",
                                                            "title": "1.04347826",
                                                          },
                                                          "radii": Object {
                                                            "circle": "50%",
                                                            "medium": "4px",
                                                            "small": "2px",
                                                          },
                                                          "shadows": Object {
                                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                          },
                                                          "space": Object {
                                                            "half": "4px",
                                                            "none": "0px",
                                                            "x1": "8px",
                                                            "x2": "16px",
                                                            "x3": "24px",
                                                            "x4": "32px",
                                                            "x5": "40px",
                                                            "x6": "48px",
                                                            "x8": "64px",
                                                          },
                                                          "zIndex": Object {
                                                            "content": 100,
                                                            "overlay": 1000,
                                                            "tabsBar": 210,
                                                            "tabsScollIndicator": 200,
                                                          },
                                                        },
                                                      },
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "Box-sc-1qu1edy-0",
                                                        "isStatic": false,
                                                        "lastClassName": "fLXjLd",
                                                        "rules": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Box",
                                                      "foldedComponentIds": Array [],
                                                      "propTypes": Object {
                                                        "bg": [Function],
                                                        "border": [Function],
                                                        "borderBottom": [Function],
                                                        "borderLeft": [Function],
                                                        "borderRadius": [Function],
                                                        "borderRight": [Function],
                                                        "borderTop": [Function],
                                                        "boxShadow": [Function],
                                                        "color": [Function],
                                                        "display": [Function],
                                                        "flexGrow": [Function],
                                                        "height": [Function],
                                                        "m": [Function],
                                                        "maxHeight": [Function],
                                                        "maxWidth": [Function],
                                                        "mb": [Function],
                                                        "minHeight": [Function],
                                                        "minWidth": [Function],
                                                        "ml": [Function],
                                                        "mr": [Function],
                                                        "mt": [Function],
                                                        "mx": [Function],
                                                        "my": [Function],
                                                        "order": [Function],
                                                        "p": [Function],
                                                        "pb": [Function],
                                                        "pl": [Function],
                                                        "position": [Function],
                                                        "pr": [Function],
                                                        "pt": [Function],
                                                        "px": [Function],
                                                        "py": [Function],
                                                        "textAlign": [Function],
                                                        "width": [Function],
                                                      },
                                                      "render": [Function],
                                                      "styledComponentId": "Box-sc-1qu1edy-0",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "usesTheme": false,
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  theme={
                                                    Object {
                                                      "borders": Array [],
                                                      "breakpoints": Object {
                                                        "extraLarge": "1920px",
                                                        "extraSmall": "0px",
                                                        "large": "1360px",
                                                        "medium": "1024px",
                                                        "small": "768px",
                                                      },
                                                      "colors": Object {
                                                        "black": "#011e38",
                                                        "blackBlue": "#122b47",
                                                        "blue": "#216beb",
                                                        "darkBlue": "#00438f",
                                                        "darkGrey": "#434d59",
                                                        "green": "#008059",
                                                        "grey": "#c0c8d1",
                                                        "lightBlue": "#e1ebfa",
                                                        "lightGreen": "#e9f7f2",
                                                        "lightGrey": "#e4e7eb",
                                                        "lightRed": "#fae6ea",
                                                        "lightYellow": "#fcf5e3",
                                                        "red": "#cc1439",
                                                        "white": "#ffffff",
                                                        "whiteGrey": "#f0f2f5",
                                                        "yellow": "#ffbb00",
                                                      },
                                                      "fontSizes": Object {
                                                        "large": "20px",
                                                        "larger": "26px",
                                                        "largest": "46px",
                                                        "medium": "16px",
                                                        "small": "14px",
                                                        "smaller": "12px",
                                                      },
                                                      "fontWeights": Object {
                                                        "bold": "600",
                                                        "light": "300",
                                                        "medium": "500",
                                                        "normal": "400",
                                                      },
                                                      "fonts": Object {
                                                        "base": "'IBM Plex Sans', sans-serif",
                                                        "mono": "'IBM Plex Mono', monospace",
                                                      },
                                                      "lineHeights": Object {
                                                        "base": "1.5",
                                                        "sectionTitle": "1.23076923",
                                                        "smallTextBase": "1.71428571",
                                                        "smallTextCompressed": "1.14285714",
                                                        "smallerText": "1.33333333",
                                                        "subsectionTitle": "1.2",
                                                        "title": "1.04347826",
                                                      },
                                                      "radii": Object {
                                                        "circle": "50%",
                                                        "medium": "4px",
                                                        "small": "2px",
                                                      },
                                                      "shadows": Object {
                                                        "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                        "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                        "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                        "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                        "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                      },
                                                      "space": Object {
                                                        "half": "4px",
                                                        "none": "0px",
                                                        "x1": "8px",
                                                        "x2": "16px",
                                                        "x3": "24px",
                                                        "x4": "32px",
                                                        "x5": "40px",
                                                        "x6": "48px",
                                                        "x8": "64px",
                                                      },
                                                      "zIndex": Object {
                                                        "content": 100,
                                                        "overlay": 1000,
                                                        "tabsBar": 210,
                                                        "tabsScollIndicator": 200,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="Box-sc-1qu1edy-0 dusExj sc-iAyFgw kDTxQF"
                                                  >
                                                    <ClickInputLabel
                                                      disabled={false}
                                                    >
                                                      <StyledComponent
                                                        disabled={false}
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ClickInputLabel-j2axnv-0",
                                                              "isStatic": false,
                                                              "lastClassName": "eoyTaS",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ClickInputLabel",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ClickInputLabel-j2axnv-0",
                                                            "target": "label",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <label
                                                          className="ClickInputLabel-j2axnv-0 eoyTaS"
                                                          disabled={false}
                                                        >
                                                          <Checkbox__CheckboxInput
                                                            aria-invalid={false}
                                                            aria-label="toggle all row selections"
                                                            aria-required={false}
                                                            checked={false}
                                                            className="sc-iAyFgw kDTxQF"
                                                            disabled={false}
                                                            error={false}
                                                            id={null}
                                                            onChange={[Function]}
                                                            required={false}
                                                            type="checkbox"
                                                          >
                                                            <StyledComponent
                                                              aria-invalid={false}
                                                              aria-label="toggle all row selections"
                                                              aria-required={false}
                                                              checked={false}
                                                              className="sc-iAyFgw kDTxQF"
                                                              disabled={false}
                                                              error={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                    "isStatic": false,
                                                                    "lastClassName": "hawbaw",
                                                                    "rules": Array [
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                  "displayName": "Checkbox__CheckboxInput",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                  "target": "input",
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              id={null}
                                                              onChange={[Function]}
                                                              required={false}
                                                              type="checkbox"
                                                            >
                                                              <input
                                                                aria-invalid={false}
                                                                aria-label="toggle all row selections"
                                                                aria-required={false}
                                                                checked={false}
                                                                className="Checkbox__CheckboxInput-sc-1nm58f1-1 hawbaw sc-iAyFgw kDTxQF"
                                                                disabled={false}
                                                                id={null}
                                                                onChange={[Function]}
                                                                required={false}
                                                                type="checkbox"
                                                              />
                                                            </StyledComponent>
                                                          </Checkbox__CheckboxInput>
                                                          <Checkbox__VisualCheckbox
                                                            checked={false}
                                                            disabled={false}
                                                          >
                                                            <StyledComponent
                                                              checked={false}
                                                              disabled={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "klUiEr",
                                                                    "rules": Array [
                                                                      "min-width: 16px;",
                                                                      "height: 16px;",
                                                                      "border-radius: 2px;",
                                                                      "border: solid 1px;",
                                                                      "position: relative;",
                                                                      "align-self: center;",
                                                                      "&:before {",
                                                                      "content: '';",
                                                                      "display: none;",
                                                                      "position: relative;",
                                                                      "left: 4px;",
                                                                      "width: 3px;",
                                                                      "height: 9px;",
                                                                      "border: solid #ffffff;",
                                                                      "border-width: 0 3px 3px 0;",
                                                                      "border-radius: 1px;",
                                                                      "transform: rotate(45deg);",
                                                                      "}",
                                                                    ],
                                                                  },
                                                                  "displayName": "Checkbox__VisualCheckbox",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                  "target": "div",
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <div
                                                                checked={false}
                                                                className="Checkbox__VisualCheckbox-sc-1nm58f1-0 klUiEr"
                                                                disabled={false}
                                                              />
                                                            </StyledComponent>
                                                          </Checkbox__VisualCheckbox>
                                                        </label>
                                                      </StyledComponent>
                                                    </ClickInputLabel>
                                                  </div>
                                                </StyledComponent>
                                              </Box>
                                            </BaseCheckbox>
                                          </StyledComponent>
                                        </Styled(BaseCheckbox)>
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="expanded"
                                    scope="col"
                                    width="30px"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                      width="30px"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 cziffQ"
                                        scope="col"
                                        width="30px"
                                      />
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="date"
                                    scope="col"
                                    width="15%"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                      width="15%"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 kNucZG"
                                        scope="col"
                                        width="15%"
                                      >
                                        Date
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="expectedQuantity"
                                    scope="col"
                                    width="20%"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                      width="20%"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 hRSucr"
                                        scope="col"
                                        width="20%"
                                      >
                                        Expected Quantity
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="actualQuantity"
                                    scope="col"
                                    width="20%"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                      width="20%"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 hRSucr"
                                        scope="col"
                                        width="20%"
                                      >
                                        Actual Quantity
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="note"
                                    scope="col"
                                    width="45%"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                      width="45%"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 gkSAIN"
                                        scope="col"
                                        width="45%"
                                      >
                                        Note
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="actions"
                                    scope="col"
                                    width="5%"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                      width="5%"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 gfRmDv"
                                        scope="col"
                                        width="5%"
                                      />
                                    </StyledComponent>
                                  </StyledTh>
                                </tr>
                              </StyledComponent>
                            </TableHead__StyledHeaderRow>
                          </thead>
                        </TableHead>
                        <TableBody
                          columns={
                            Array [
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "selected",
                                "headerFormatter": [Function],
                                "width": "30px",
                              },
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "expanded",
                                "width": "30px",
                              },
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "date",
                                "label": "Date",
                                "width": "15%",
                              },
                              Object {
                                "dataKey": "expectedQuantity",
                                "label": "Expected Quantity",
                                "width": "20%",
                              },
                              Object {
                                "dataKey": "actualQuantity",
                                "label": "Actual Quantity",
                                "width": "20%",
                              },
                              Object {
                                "dataKey": "note",
                                "label": "Note",
                                "width": "45%",
                              },
                              Object {
                                "cellRenderer": [Function],
                                "dataKey": "actions",
                                "label": "",
                                "width": "5%",
                              },
                            ]
                          }
                          compact={false}
                          keyField="id"
                          loading={false}
                          noRowsContent="No records have been created for this table."
                          rowHovers={true}
                          rows={
                            Array [
                              Object {
                                "cellRenderer": [Function],
                                "expanded": false,
                                "heading": "ABC & XYZ Company",
                                "id": "r1",
                                "selected": false,
                              },
                              Object {
                                "actualQuantity": "1,800 eaches",
                                "date": "2019-10-01",
                                "expanded": false,
                                "expandedContent": [Function],
                                "expectedQuantity": "2,025 eaches",
                                "id": "r2",
                                "selected": false,
                              },
                              Object {
                                "actualQuantity": "2,250 eaches",
                                "date": "2019-10-02",
                                "expanded": false,
                                "expectedQuantity": "2,475 eaches",
                                "id": "r3",
                                "selected": false,
                              },
                              Object {
                                "actualQuantity": "1,425 eaches",
                                "date": "2019-10-03",
                                "expanded": false,
                                "expectedQuantity": "2,475 eaches",
                                "id": "r4",
                                "selected": false,
                              },
                              Object {
                                "actualQuantity": "675 eaches",
                                "date": "2019-10-04",
                                "expanded": false,
                                "expectedQuantity": "2,475 eaches",
                                "id": "r5",
                                "note": "1c Other Plant-related issue, equipment issues",
                                "selected": false,
                              },
                            ]
                          }
                        >
                          <tbody>
                            <TableBodyRow
                              columns={
                                Array [
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "selected",
                                    "headerFormatter": [Function],
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "expanded",
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "date",
                                    "label": "Date",
                                    "width": "15%",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "note",
                                    "label": "Note",
                                    "width": "45%",
                                  },
                                  Object {
                                    "cellRenderer": [Function],
                                    "dataKey": "actions",
                                    "label": "",
                                    "width": "5%",
                                  },
                                ]
                              }
                              compact={false}
                              key="r1"
                              keyField="id"
                              row={
                                Object {
                                  "cellRenderer": [Function],
                                  "expanded": false,
                                  "heading": "ABC & XYZ Company",
                                  "id": "r1",
                                  "selected": false,
                                }
                              }
                              rowHovers={true}
                            >
                              <TableBody__StyledTr
                                rowHovers={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                        "isStatic": false,
                                        "lastClassName": "gvDwxX",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "TableBody__StyledTr",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  rowHovers={true}
                                >
                                  <tr
                                    className="TableBody__StyledTr-sc-1amzhx8-0 gvDwxX"
                                  >
                                    <TableCell
                                      cellData="ABC & XYZ Company"
                                      colSpan={7}
                                      column={Object {}}
                                      compact={false}
                                      row={
                                        Object {
                                          "cellRenderer": [Function],
                                          "expanded": false,
                                          "heading": "ABC & XYZ Company",
                                          "id": "r1",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <td
                                        colSpan={7}
                                      >
                                        <Box
                                          bg="lightBlue"
                                          px="x2"
                                          py="x1"
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <StyledComponent
                                            bg="lightBlue"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "_foldedDefaultProps": Object {
                                                  "theme": Object {
                                                    "borders": Array [],
                                                    "breakpoints": Object {
                                                      "extraLarge": "1920px",
                                                      "extraSmall": "0px",
                                                      "large": "1360px",
                                                      "medium": "1024px",
                                                      "small": "768px",
                                                    },
                                                    "colors": Object {
                                                      "black": "#011e38",
                                                      "blackBlue": "#122b47",
                                                      "blue": "#216beb",
                                                      "darkBlue": "#00438f",
                                                      "darkGrey": "#434d59",
                                                      "green": "#008059",
                                                      "grey": "#c0c8d1",
                                                      "lightBlue": "#e1ebfa",
                                                      "lightGreen": "#e9f7f2",
                                                      "lightGrey": "#e4e7eb",
                                                      "lightRed": "#fae6ea",
                                                      "lightYellow": "#fcf5e3",
                                                      "red": "#cc1439",
                                                      "white": "#ffffff",
                                                      "whiteGrey": "#f0f2f5",
                                                      "yellow": "#ffbb00",
                                                    },
                                                    "fontSizes": Object {
                                                      "large": "20px",
                                                      "larger": "26px",
                                                      "largest": "46px",
                                                      "medium": "16px",
                                                      "small": "14px",
                                                      "smaller": "12px",
                                                    },
                                                    "fontWeights": Object {
                                                      "bold": "600",
                                                      "light": "300",
                                                      "medium": "500",
                                                      "normal": "400",
                                                    },
                                                    "fonts": Object {
                                                      "base": "'IBM Plex Sans', sans-serif",
                                                      "mono": "'IBM Plex Mono', monospace",
                                                    },
                                                    "lineHeights": Object {
                                                      "base": "1.5",
                                                      "sectionTitle": "1.23076923",
                                                      "smallTextBase": "1.71428571",
                                                      "smallTextCompressed": "1.14285714",
                                                      "smallerText": "1.33333333",
                                                      "subsectionTitle": "1.2",
                                                      "title": "1.04347826",
                                                    },
                                                    "radii": Object {
                                                      "circle": "50%",
                                                      "medium": "4px",
                                                      "small": "2px",
                                                    },
                                                    "shadows": Object {
                                                      "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                      "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                      "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                      "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                      "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                    },
                                                    "space": Object {
                                                      "half": "4px",
                                                      "none": "0px",
                                                      "x1": "8px",
                                                      "x2": "16px",
                                                      "x3": "24px",
                                                      "x4": "32px",
                                                      "x5": "40px",
                                                      "x6": "48px",
                                                      "x8": "64px",
                                                    },
                                                    "zIndex": Object {
                                                      "content": 100,
                                                      "overlay": 1000,
                                                      "tabsBar": 210,
                                                      "tabsScollIndicator": 200,
                                                    },
                                                  },
                                                },
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Box-sc-1qu1edy-0",
                                                  "isStatic": false,
                                                  "lastClassName": "fLXjLd",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "Box",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "bg": [Function],
                                                  "border": [Function],
                                                  "borderBottom": [Function],
                                                  "borderLeft": [Function],
                                                  "borderRadius": [Function],
                                                  "borderRight": [Function],
                                                  "borderTop": [Function],
                                                  "boxShadow": [Function],
                                                  "color": [Function],
                                                  "display": [Function],
                                                  "flexGrow": [Function],
                                                  "height": [Function],
                                                  "m": [Function],
                                                  "maxHeight": [Function],
                                                  "maxWidth": [Function],
                                                  "mb": [Function],
                                                  "minHeight": [Function],
                                                  "minWidth": [Function],
                                                  "ml": [Function],
                                                  "mr": [Function],
                                                  "mt": [Function],
                                                  "mx": [Function],
                                                  "my": [Function],
                                                  "order": [Function],
                                                  "p": [Function],
                                                  "pb": [Function],
                                                  "pl": [Function],
                                                  "position": [Function],
                                                  "pr": [Function],
                                                  "pt": [Function],
                                                  "px": [Function],
                                                  "py": [Function],
                                                  "textAlign": [Function],
                                                  "width": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "Box-sc-1qu1edy-0",
                                                "target": "div",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            px="x2"
                                            py="x1"
                                            theme={
                                              Object {
                                                "borders": Array [],
                                                "breakpoints": Object {
                                                  "extraLarge": "1920px",
                                                  "extraSmall": "0px",
                                                  "large": "1360px",
                                                  "medium": "1024px",
                                                  "small": "768px",
                                                },
                                                "colors": Object {
                                                  "black": "#011e38",
                                                  "blackBlue": "#122b47",
                                                  "blue": "#216beb",
                                                  "darkBlue": "#00438f",
                                                  "darkGrey": "#434d59",
                                                  "green": "#008059",
                                                  "grey": "#c0c8d1",
                                                  "lightBlue": "#e1ebfa",
                                                  "lightGreen": "#e9f7f2",
                                                  "lightGrey": "#e4e7eb",
                                                  "lightRed": "#fae6ea",
                                                  "lightYellow": "#fcf5e3",
                                                  "red": "#cc1439",
                                                  "white": "#ffffff",
                                                  "whiteGrey": "#f0f2f5",
                                                  "yellow": "#ffbb00",
                                                },
                                                "fontSizes": Object {
                                                  "large": "20px",
                                                  "larger": "26px",
                                                  "largest": "46px",
                                                  "medium": "16px",
                                                  "small": "14px",
                                                  "smaller": "12px",
                                                },
                                                "fontWeights": Object {
                                                  "bold": "600",
                                                  "light": "300",
                                                  "medium": "500",
                                                  "normal": "400",
                                                },
                                                "fonts": Object {
                                                  "base": "'IBM Plex Sans', sans-serif",
                                                  "mono": "'IBM Plex Mono', monospace",
                                                },
                                                "lineHeights": Object {
                                                  "base": "1.5",
                                                  "sectionTitle": "1.23076923",
                                                  "smallTextBase": "1.71428571",
                                                  "smallTextCompressed": "1.14285714",
                                                  "smallerText": "1.33333333",
                                                  "subsectionTitle": "1.2",
                                                  "title": "1.04347826",
                                                },
                                                "radii": Object {
                                                  "circle": "50%",
                                                  "medium": "4px",
                                                  "small": "2px",
                                                },
                                                "shadows": Object {
                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                },
                                                "space": Object {
                                                  "half": "4px",
                                                  "none": "0px",
                                                  "x1": "8px",
                                                  "x2": "16px",
                                                  "x3": "24px",
                                                  "x4": "32px",
                                                  "x5": "40px",
                                                  "x6": "48px",
                                                  "x8": "64px",
                                                },
                                                "zIndex": Object {
                                                  "content": 100,
                                                  "overlay": 1000,
                                                  "tabsBar": 210,
                                                  "tabsScollIndicator": 200,
                                                },
                                              }
                                            }
                                          >
                                            <div
                                              className="Box-sc-1qu1edy-0 giBBZH"
                                            >
                                              <styled.p
                                                color="blackBlue"
                                                disabled={false}
                                                fontSize="16px"
                                                fontWeight="bold"
                                                inline={false}
                                                lineHeight="1.5"
                                                m={0}
                                              >
                                                <StyledComponent
                                                  color="blackBlue"
                                                  disabled={false}
                                                  fontSize="16px"
                                                  fontWeight="bold"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "_foldedDefaultProps": Object {
                                                        "color": "currentColor",
                                                        "disabled": false,
                                                        "fontSize": "16px",
                                                        "inline": false,
                                                        "lineHeight": "1.5",
                                                        "m": 0,
                                                      },
                                                      "attrs": Array [
                                                        [Function],
                                                      ],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bxivhb",
                                                        "isStatic": false,
                                                        "lastClassName": "jaBsnX",
                                                        "rules": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "styled.p",
                                                      "foldedComponentIds": Array [],
                                                      "propTypes": Object {
                                                        "disabled": [Function],
                                                        "inline": [Function],
                                                      },
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bxivhb",
                                                      "target": "p",
                                                      "toString": [Function],
                                                      "usesTheme": false,
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  inline={false}
                                                  lineHeight="1.5"
                                                  m={0}
                                                >
                                                  <p
                                                    className="sc-bxivhb jaBsnX"
                                                    color="blackBlue"
                                                    disabled={false}
                                                    fontSize="16px"
                                                    fontWeight="bold"
                                                  >
                                                    ABC & XYZ Company
                                                  </p>
                                                </StyledComponent>
                                              </styled.p>
                                            </div>
                                          </StyledComponent>
                                        </Box>
                                      </td>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableBody__StyledTr>
                            </TableBodyRow>
                            <TableBodyRow
                              columns={
                                Array [
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "selected",
                                    "headerFormatter": [Function],
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "expanded",
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "date",
                                    "label": "Date",
                                    "width": "15%",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "note",
                                    "label": "Note",
                                    "width": "45%",
                                  },
                                  Object {
                                    "cellRenderer": [Function],
                                    "dataKey": "actions",
                                    "label": "",
                                    "width": "5%",
                                  },
                                ]
                              }
                              compact={false}
                              key="r2"
                              keyField="id"
                              row={
                                Object {
                                  "actualQuantity": "1,800 eaches",
                                  "date": "2019-10-01",
                                  "expanded": false,
                                  "expandedContent": [Function],
                                  "expectedQuantity": "2,025 eaches",
                                  "id": "r2",
                                  "selected": false,
                                }
                              }
                              rowHovers={true}
                            >
                              <TableBody__StyledTr
                                rowHovers={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                        "isStatic": false,
                                        "lastClassName": "gvDwxX",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "TableBody__StyledTr",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  rowHovers={true}
                                >
                                  <tr
                                    className="TableBody__StyledTr-sc-1amzhx8-0 gvDwxX"
                                  >
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "selected",
                                          "headerFormatter": [Function],
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="selected"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expanded": false,
                                          "expandedContent": [Function],
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r2",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <SelectCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "selected",
                                                  "headerFormatter": [Function],
                                                  "width": "30px",
                                                }
                                              }
                                              onSelectRow={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "1,800 eaches",
                                                  "date": "2019-10-01",
                                                  "expanded": false,
                                                  "expandedContent": [Function],
                                                  "expectedQuantity": "2,025 eaches",
                                                  "id": "r2",
                                                  "selected": false,
                                                }
                                              }
                                            >
                                              <Styled(BaseCheckbox)
                                                aria-label="toggle row selection"
                                                checked={false}
                                                onChange={[Function]}
                                              >
                                                <StyledComponent
                                                  aria-label="toggle row selection"
                                                  checked={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iAyFgw",
                                                        "isStatic": false,
                                                        "lastClassName": "kDTxQF",
                                                        "rules": Array [
                                                          "padding: 4px 0;",
                                                          "& .sc-bxivhb {",
                                                          "margin-left: 8px;",
                                                          "}",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(BaseCheckbox)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iAyFgw",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "usesTheme": false,
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onChange={[Function]}
                                                >
                                                  <BaseCheckbox
                                                    aria-label="toggle row selection"
                                                    checked={false}
                                                    className="sc-iAyFgw kDTxQF"
                                                    disabled={false}
                                                    error={false}
                                                    id={null}
                                                    onChange={[Function]}
                                                    required={false}
                                                  >
                                                    <Box
                                                      className="sc-iAyFgw kDTxQF"
                                                      theme={
                                                        Object {
                                                          "borders": Array [],
                                                          "breakpoints": Object {
                                                            "extraLarge": "1920px",
                                                            "extraSmall": "0px",
                                                            "large": "1360px",
                                                            "medium": "1024px",
                                                            "small": "768px",
                                                          },
                                                          "colors": Object {
                                                            "black": "#011e38",
                                                            "blackBlue": "#122b47",
                                                            "blue": "#216beb",
                                                            "darkBlue": "#00438f",
                                                            "darkGrey": "#434d59",
                                                            "green": "#008059",
                                                            "grey": "#c0c8d1",
                                                            "lightBlue": "#e1ebfa",
                                                            "lightGreen": "#e9f7f2",
                                                            "lightGrey": "#e4e7eb",
                                                            "lightRed": "#fae6ea",
                                                            "lightYellow": "#fcf5e3",
                                                            "red": "#cc1439",
                                                            "white": "#ffffff",
                                                            "whiteGrey": "#f0f2f5",
                                                            "yellow": "#ffbb00",
                                                          },
                                                          "fontSizes": Object {
                                                            "large": "20px",
                                                            "larger": "26px",
                                                            "largest": "46px",
                                                            "medium": "16px",
                                                            "small": "14px",
                                                            "smaller": "12px",
                                                          },
                                                          "fontWeights": Object {
                                                            "bold": "600",
                                                            "light": "300",
                                                            "medium": "500",
                                                            "normal": "400",
                                                          },
                                                          "fonts": Object {
                                                            "base": "'IBM Plex Sans', sans-serif",
                                                            "mono": "'IBM Plex Mono', monospace",
                                                          },
                                                          "lineHeights": Object {
                                                            "base": "1.5",
                                                            "sectionTitle": "1.23076923",
                                                            "smallTextBase": "1.71428571",
                                                            "smallTextCompressed": "1.14285714",
                                                            "smallerText": "1.33333333",
                                                            "subsectionTitle": "1.2",
                                                            "title": "1.04347826",
                                                          },
                                                          "radii": Object {
                                                            "circle": "50%",
                                                            "medium": "4px",
                                                            "small": "2px",
                                                          },
                                                          "shadows": Object {
                                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                          },
                                                          "space": Object {
                                                            "half": "4px",
                                                            "none": "0px",
                                                            "x1": "8px",
                                                            "x2": "16px",
                                                            "x3": "24px",
                                                            "x4": "32px",
                                                            "x5": "40px",
                                                            "x6": "48px",
                                                            "x8": "64px",
                                                          },
                                                          "zIndex": Object {
                                                            "content": 100,
                                                            "overlay": 1000,
                                                            "tabsBar": 210,
                                                            "tabsScollIndicator": 200,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <StyledComponent
                                                        className="sc-iAyFgw kDTxQF"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "_foldedDefaultProps": Object {
                                                              "theme": Object {
                                                                "borders": Array [],
                                                                "breakpoints": Object {
                                                                  "extraLarge": "1920px",
                                                                  "extraSmall": "0px",
                                                                  "large": "1360px",
                                                                  "medium": "1024px",
                                                                  "small": "768px",
                                                                },
                                                                "colors": Object {
                                                                  "black": "#011e38",
                                                                  "blackBlue": "#122b47",
                                                                  "blue": "#216beb",
                                                                  "darkBlue": "#00438f",
                                                                  "darkGrey": "#434d59",
                                                                  "green": "#008059",
                                                                  "grey": "#c0c8d1",
                                                                  "lightBlue": "#e1ebfa",
                                                                  "lightGreen": "#e9f7f2",
                                                                  "lightGrey": "#e4e7eb",
                                                                  "lightRed": "#fae6ea",
                                                                  "lightYellow": "#fcf5e3",
                                                                  "red": "#cc1439",
                                                                  "white": "#ffffff",
                                                                  "whiteGrey": "#f0f2f5",
                                                                  "yellow": "#ffbb00",
                                                                },
                                                                "fontSizes": Object {
                                                                  "large": "20px",
                                                                  "larger": "26px",
                                                                  "largest": "46px",
                                                                  "medium": "16px",
                                                                  "small": "14px",
                                                                  "smaller": "12px",
                                                                },
                                                                "fontWeights": Object {
                                                                  "bold": "600",
                                                                  "light": "300",
                                                                  "medium": "500",
                                                                  "normal": "400",
                                                                },
                                                                "fonts": Object {
                                                                  "base": "'IBM Plex Sans', sans-serif",
                                                                  "mono": "'IBM Plex Mono', monospace",
                                                                },
                                                                "lineHeights": Object {
                                                                  "base": "1.5",
                                                                  "sectionTitle": "1.23076923",
                                                                  "smallTextBase": "1.71428571",
                                                                  "smallTextCompressed": "1.14285714",
                                                                  "smallerText": "1.33333333",
                                                                  "subsectionTitle": "1.2",
                                                                  "title": "1.04347826",
                                                                },
                                                                "radii": Object {
                                                                  "circle": "50%",
                                                                  "medium": "4px",
                                                                  "small": "2px",
                                                                },
                                                                "shadows": Object {
                                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                },
                                                                "space": Object {
                                                                  "half": "4px",
                                                                  "none": "0px",
                                                                  "x1": "8px",
                                                                  "x2": "16px",
                                                                  "x3": "24px",
                                                                  "x4": "32px",
                                                                  "x5": "40px",
                                                                  "x6": "48px",
                                                                  "x8": "64px",
                                                                },
                                                                "zIndex": Object {
                                                                  "content": 100,
                                                                  "overlay": 1000,
                                                                  "tabsBar": 210,
                                                                  "tabsScollIndicator": 200,
                                                                },
                                                              },
                                                            },
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "Box-sc-1qu1edy-0",
                                                              "isStatic": false,
                                                              "lastClassName": "fLXjLd",
                                                              "rules": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "Box",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": Object {
                                                              "bg": [Function],
                                                              "border": [Function],
                                                              "borderBottom": [Function],
                                                              "borderLeft": [Function],
                                                              "borderRadius": [Function],
                                                              "borderRight": [Function],
                                                              "borderTop": [Function],
                                                              "boxShadow": [Function],
                                                              "color": [Function],
                                                              "display": [Function],
                                                              "flexGrow": [Function],
                                                              "height": [Function],
                                                              "m": [Function],
                                                              "maxHeight": [Function],
                                                              "maxWidth": [Function],
                                                              "mb": [Function],
                                                              "minHeight": [Function],
                                                              "minWidth": [Function],
                                                              "ml": [Function],
                                                              "mr": [Function],
                                                              "mt": [Function],
                                                              "mx": [Function],
                                                              "my": [Function],
                                                              "order": [Function],
                                                              "p": [Function],
                                                              "pb": [Function],
                                                              "pl": [Function],
                                                              "position": [Function],
                                                              "pr": [Function],
                                                              "pt": [Function],
                                                              "px": [Function],
                                                              "py": [Function],
                                                              "textAlign": [Function],
                                                              "width": [Function],
                                                            },
                                                            "render": [Function],
                                                            "styledComponentId": "Box-sc-1qu1edy-0",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        theme={
                                                          Object {
                                                            "borders": Array [],
                                                            "breakpoints": Object {
                                                              "extraLarge": "1920px",
                                                              "extraSmall": "0px",
                                                              "large": "1360px",
                                                              "medium": "1024px",
                                                              "small": "768px",
                                                            },
                                                            "colors": Object {
                                                              "black": "#011e38",
                                                              "blackBlue": "#122b47",
                                                              "blue": "#216beb",
                                                              "darkBlue": "#00438f",
                                                              "darkGrey": "#434d59",
                                                              "green": "#008059",
                                                              "grey": "#c0c8d1",
                                                              "lightBlue": "#e1ebfa",
                                                              "lightGreen": "#e9f7f2",
                                                              "lightGrey": "#e4e7eb",
                                                              "lightRed": "#fae6ea",
                                                              "lightYellow": "#fcf5e3",
                                                              "red": "#cc1439",
                                                              "white": "#ffffff",
                                                              "whiteGrey": "#f0f2f5",
                                                              "yellow": "#ffbb00",
                                                            },
                                                            "fontSizes": Object {
                                                              "large": "20px",
                                                              "larger": "26px",
                                                              "largest": "46px",
                                                              "medium": "16px",
                                                              "small": "14px",
                                                              "smaller": "12px",
                                                            },
                                                            "fontWeights": Object {
                                                              "bold": "600",
                                                              "light": "300",
                                                              "medium": "500",
                                                              "normal": "400",
                                                            },
                                                            "fonts": Object {
                                                              "base": "'IBM Plex Sans', sans-serif",
                                                              "mono": "'IBM Plex Mono', monospace",
                                                            },
                                                            "lineHeights": Object {
                                                              "base": "1.5",
                                                              "sectionTitle": "1.23076923",
                                                              "smallTextBase": "1.71428571",
                                                              "smallTextCompressed": "1.14285714",
                                                              "smallerText": "1.33333333",
                                                              "subsectionTitle": "1.2",
                                                              "title": "1.04347826",
                                                            },
                                                            "radii": Object {
                                                              "circle": "50%",
                                                              "medium": "4px",
                                                              "small": "2px",
                                                            },
                                                            "shadows": Object {
                                                              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                            },
                                                            "space": Object {
                                                              "half": "4px",
                                                              "none": "0px",
                                                              "x1": "8px",
                                                              "x2": "16px",
                                                              "x3": "24px",
                                                              "x4": "32px",
                                                              "x5": "40px",
                                                              "x6": "48px",
                                                              "x8": "64px",
                                                            },
                                                            "zIndex": Object {
                                                              "content": 100,
                                                              "overlay": 1000,
                                                              "tabsBar": 210,
                                                              "tabsScollIndicator": 200,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="Box-sc-1qu1edy-0 dusExj sc-iAyFgw kDTxQF"
                                                        >
                                                          <ClickInputLabel
                                                            disabled={false}
                                                          >
                                                            <StyledComponent
                                                              disabled={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "ClickInputLabel-j2axnv-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "eoyTaS",
                                                                    "rules": Array [
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                  "displayName": "ClickInputLabel",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "ClickInputLabel-j2axnv-0",
                                                                  "target": "label",
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <label
                                                                className="ClickInputLabel-j2axnv-0 eoyTaS"
                                                                disabled={false}
                                                              >
                                                                <Checkbox__CheckboxInput
                                                                  aria-invalid={false}
                                                                  aria-label="toggle row selection"
                                                                  aria-required={false}
                                                                  checked={false}
                                                                  className="sc-iAyFgw kDTxQF"
                                                                  disabled={false}
                                                                  error={false}
                                                                  id={null}
                                                                  onChange={[Function]}
                                                                  required={false}
                                                                  type="checkbox"
                                                                >
                                                                  <StyledComponent
                                                                    aria-invalid={false}
                                                                    aria-label="toggle row selection"
                                                                    aria-required={false}
                                                                    checked={false}
                                                                    className="sc-iAyFgw kDTxQF"
                                                                    disabled={false}
                                                                    error={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "hawbaw",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__CheckboxInput",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                        "target": "input",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                    id={null}
                                                                    onChange={[Function]}
                                                                    required={false}
                                                                    type="checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      aria-label="toggle row selection"
                                                                      aria-required={false}
                                                                      checked={false}
                                                                      className="Checkbox__CheckboxInput-sc-1nm58f1-1 hawbaw sc-iAyFgw kDTxQF"
                                                                      disabled={false}
                                                                      id={null}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      type="checkbox"
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__CheckboxInput>
                                                                <Checkbox__VisualCheckbox
                                                                  checked={false}
                                                                  disabled={false}
                                                                >
                                                                  <StyledComponent
                                                                    checked={false}
                                                                    disabled={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                          "isStatic": false,
                                                                          "lastClassName": "klUiEr",
                                                                          "rules": Array [
                                                                            "min-width: 16px;",
                                                                            "height: 16px;",
                                                                            "border-radius: 2px;",
                                                                            "border: solid 1px;",
                                                                            "position: relative;",
                                                                            "align-self: center;",
                                                                            "&:before {",
                                                                            "content: '';",
                                                                            "display: none;",
                                                                            "position: relative;",
                                                                            "left: 4px;",
                                                                            "width: 3px;",
                                                                            "height: 9px;",
                                                                            "border: solid #ffffff;",
                                                                            "border-width: 0 3px 3px 0;",
                                                                            "border-radius: 1px;",
                                                                            "transform: rotate(45deg);",
                                                                            "}",
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__VisualCheckbox",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                        "target": "div",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <div
                                                                      checked={false}
                                                                      className="Checkbox__VisualCheckbox-sc-1nm58f1-0 klUiEr"
                                                                      disabled={false}
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__VisualCheckbox>
                                                              </label>
                                                            </StyledComponent>
                                                          </ClickInputLabel>
                                                        </div>
                                                      </StyledComponent>
                                                    </Box>
                                                  </BaseCheckbox>
                                                </StyledComponent>
                                              </Styled(BaseCheckbox)>
                                            </SelectCell>
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "expanded",
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="expanded"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expanded": false,
                                          "expandedContent": [Function],
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r2",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <ExpandCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "expanded",
                                                  "width": "30px",
                                                }
                                              }
                                              onRowExpansionChange={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "1,800 eaches",
                                                  "date": "2019-10-01",
                                                  "expanded": false,
                                                  "expandedContent": [Function],
                                                  "expectedQuantity": "2,025 eaches",
                                                  "id": "r2",
                                                  "selected": false,
                                                }
                                              }
                                            >
                                              <ForwardRef
                                                disabled={false}
                                                icon="downArrow"
                                                label="toggle expansion"
                                                onClick={[Function]}
                                                size="32px"
                                                toggled={false}
                                              >
                                                <ControlIcon__StyledButton
                                                  aria-label="toggle expansion"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  toggled={false}
                                                >
                                                  <StyledComponent
                                                    aria-label="toggle expansion"
                                                    disabled={false}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "ControlIcon__StyledButton-sc-1h83lvi-0",
                                                          "isStatic": false,
                                                          "lastClassName": "kbwUMI",
                                                          "rules": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "ControlIcon__StyledButton",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "ControlIcon__StyledButton-sc-1h83lvi-0",
                                                        "target": "button",
                                                        "toString": [Function],
                                                        "usesTheme": false,
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onClick={[Function]}
                                                    toggled={false}
                                                  >
                                                    <button
                                                      aria-label="toggle expansion"
                                                      className="ControlIcon__StyledButton-sc-1h83lvi-0 kbwUMI"
                                                      disabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <Styled(Component)
                                                        color="currentColor"
                                                        icon="downArrow"
                                                        size="32px"
                                                        title={null}
                                                      >
                                                        <StyledComponent
                                                          color="currentColor"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "_foldedDefaultProps": Object {
                                                                "color": "currentColor",
                                                                "size": "24px",
                                                                "title": null,
                                                              },
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bwzfXH",
                                                                "isStatic": false,
                                                                "lastClassName": "bbrsYH",
                                                                "rules": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Styled(Component)",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": Object {
                                                                "color": [Function],
                                                                "icon": [Function],
                                                                "size": [Function],
                                                                "title": [Function],
                                                              },
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bwzfXH",
                                                              "target": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "defaultProps": Object {
                                                                  "className": undefined,
                                                                  "color": "currentColor",
                                                                  "focusable": false,
                                                                  "size": "24px",
                                                                  "title": null,
                                                                },
                                                                "propTypes": Object {
                                                                  "className": [Function],
                                                                  "color": [Function],
                                                                  "focusable": [Function],
                                                                  "icon": [Function],
                                                                  "size": [Function],
                                                                  "title": [Function],
                                                                },
                                                                "render": [Function],
                                                              },
                                                              "toString": [Function],
                                                              "usesTheme": false,
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          icon="downArrow"
                                                          size="32px"
                                                          title={null}
                                                        >
                                                          <ForwardRef
                                                            className="sc-bwzfXH jQNEzN"
                                                            color="currentColor"
                                                            focusable={false}
                                                            icon="downArrow"
                                                            size="32px"
                                                            title={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="sc-bwzfXH jQNEzN"
                                                              color="currentColor"
                                                              fill="currentColor"
                                                              focusable={false}
                                                              height="32px"
                                                              icon="downArrow"
                                                              size="32px"
                                                              title={null}
                                                              viewBox="0 0 24 24"
                                                              width="32px"
                                                            >
                                                              <path
                                                                d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                key="0"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledComponent>
                                                      </Styled(Component)>
                                                    </button>
                                                  </StyledComponent>
                                                </ControlIcon__StyledButton>
                                              </ForwardRef>
                                            </ExpandCell>
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2019-10-01"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "date",
                                          "label": "Date",
                                          "width": "15%",
                                        }
                                      }
                                      compact={false}
                                      key="date"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expanded": false,
                                          "expandedContent": [Function],
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r2",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            Tue, 01 Oct 2019
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2,025 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "expectedQuantity",
                                          "label": "Expected Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="expectedQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expanded": false,
                                          "expandedContent": [Function],
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r2",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            2,025 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="1,800 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actualQuantity",
                                          "label": "Actual Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="actualQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expanded": false,
                                          "expandedContent": [Function],
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r2",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            1,800 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "note",
                                          "label": "Note",
                                          "width": "45%",
                                        }
                                      }
                                      compact={false}
                                      key="note"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expanded": false,
                                          "expandedContent": [Function],
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r2",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellRenderer": [Function],
                                          "dataKey": "actions",
                                          "label": "",
                                          "width": "5%",
                                        }
                                      }
                                      compact={false}
                                      key="actions"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expanded": false,
                                          "expandedContent": [Function],
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r2",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <td
                                        colSpan={null}
                                      >
                                        <Box
                                          pr="x3"
                                          textAlign="right"
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "_foldedDefaultProps": Object {
                                                  "theme": Object {
                                                    "borders": Array [],
                                                    "breakpoints": Object {
                                                      "extraLarge": "1920px",
                                                      "extraSmall": "0px",
                                                      "large": "1360px",
                                                      "medium": "1024px",
                                                      "small": "768px",
                                                    },
                                                    "colors": Object {
                                                      "black": "#011e38",
                                                      "blackBlue": "#122b47",
                                                      "blue": "#216beb",
                                                      "darkBlue": "#00438f",
                                                      "darkGrey": "#434d59",
                                                      "green": "#008059",
                                                      "grey": "#c0c8d1",
                                                      "lightBlue": "#e1ebfa",
                                                      "lightGreen": "#e9f7f2",
                                                      "lightGrey": "#e4e7eb",
                                                      "lightRed": "#fae6ea",
                                                      "lightYellow": "#fcf5e3",
                                                      "red": "#cc1439",
                                                      "white": "#ffffff",
                                                      "whiteGrey": "#f0f2f5",
                                                      "yellow": "#ffbb00",
                                                    },
                                                    "fontSizes": Object {
                                                      "large": "20px",
                                                      "larger": "26px",
                                                      "largest": "46px",
                                                      "medium": "16px",
                                                      "small": "14px",
                                                      "smaller": "12px",
                                                    },
                                                    "fontWeights": Object {
                                                      "bold": "600",
                                                      "light": "300",
                                                      "medium": "500",
                                                      "normal": "400",
                                                    },
                                                    "fonts": Object {
                                                      "base": "'IBM Plex Sans', sans-serif",
                                                      "mono": "'IBM Plex Mono', monospace",
                                                    },
                                                    "lineHeights": Object {
                                                      "base": "1.5",
                                                      "sectionTitle": "1.23076923",
                                                      "smallTextBase": "1.71428571",
                                                      "smallTextCompressed": "1.14285714",
                                                      "smallerText": "1.33333333",
                                                      "subsectionTitle": "1.2",
                                                      "title": "1.04347826",
                                                    },
                                                    "radii": Object {
                                                      "circle": "50%",
                                                      "medium": "4px",
                                                      "small": "2px",
                                                    },
                                                    "shadows": Object {
                                                      "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                      "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                      "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                      "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                      "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                    },
                                                    "space": Object {
                                                      "half": "4px",
                                                      "none": "0px",
                                                      "x1": "8px",
                                                      "x2": "16px",
                                                      "x3": "24px",
                                                      "x4": "32px",
                                                      "x5": "40px",
                                                      "x6": "48px",
                                                      "x8": "64px",
                                                    },
                                                    "zIndex": Object {
                                                      "content": 100,
                                                      "overlay": 1000,
                                                      "tabsBar": 210,
                                                      "tabsScollIndicator": 200,
                                                    },
                                                  },
                                                },
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Box-sc-1qu1edy-0",
                                                  "isStatic": false,
                                                  "lastClassName": "fLXjLd",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "Box",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "bg": [Function],
                                                  "border": [Function],
                                                  "borderBottom": [Function],
                                                  "borderLeft": [Function],
                                                  "borderRadius": [Function],
                                                  "borderRight": [Function],
                                                  "borderTop": [Function],
                                                  "boxShadow": [Function],
                                                  "color": [Function],
                                                  "display": [Function],
                                                  "flexGrow": [Function],
                                                  "height": [Function],
                                                  "m": [Function],
                                                  "maxHeight": [Function],
                                                  "maxWidth": [Function],
                                                  "mb": [Function],
                                                  "minHeight": [Function],
                                                  "minWidth": [Function],
                                                  "ml": [Function],
                                                  "mr": [Function],
                                                  "mt": [Function],
                                                  "mx": [Function],
                                                  "my": [Function],
                                                  "order": [Function],
                                                  "p": [Function],
                                                  "pb": [Function],
                                                  "pl": [Function],
                                                  "position": [Function],
                                                  "pr": [Function],
                                                  "pt": [Function],
                                                  "px": [Function],
                                                  "py": [Function],
                                                  "textAlign": [Function],
                                                  "width": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "Box-sc-1qu1edy-0",
                                                "target": "div",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            pr="x3"
                                            textAlign="right"
                                            theme={
                                              Object {
                                                "borders": Array [],
                                                "breakpoints": Object {
                                                  "extraLarge": "1920px",
                                                  "extraSmall": "0px",
                                                  "large": "1360px",
                                                  "medium": "1024px",
                                                  "small": "768px",
                                                },
                                                "colors": Object {
                                                  "black": "#011e38",
                                                  "blackBlue": "#122b47",
                                                  "blue": "#216beb",
                                                  "darkBlue": "#00438f",
                                                  "darkGrey": "#434d59",
                                                  "green": "#008059",
                                                  "grey": "#c0c8d1",
                                                  "lightBlue": "#e1ebfa",
                                                  "lightGreen": "#e9f7f2",
                                                  "lightGrey": "#e4e7eb",
                                                  "lightRed": "#fae6ea",
                                                  "lightYellow": "#fcf5e3",
                                                  "red": "#cc1439",
                                                  "white": "#ffffff",
                                                  "whiteGrey": "#f0f2f5",
                                                  "yellow": "#ffbb00",
                                                },
                                                "fontSizes": Object {
                                                  "large": "20px",
                                                  "larger": "26px",
                                                  "largest": "46px",
                                                  "medium": "16px",
                                                  "small": "14px",
                                                  "smaller": "12px",
                                                },
                                                "fontWeights": Object {
                                                  "bold": "600",
                                                  "light": "300",
                                                  "medium": "500",
                                                  "normal": "400",
                                                },
                                                "fonts": Object {
                                                  "base": "'IBM Plex Sans', sans-serif",
                                                  "mono": "'IBM Plex Mono', monospace",
                                                },
                                                "lineHeights": Object {
                                                  "base": "1.5",
                                                  "sectionTitle": "1.23076923",
                                                  "smallTextBase": "1.71428571",
                                                  "smallTextCompressed": "1.14285714",
                                                  "smallerText": "1.33333333",
                                                  "subsectionTitle": "1.2",
                                                  "title": "1.04347826",
                                                },
                                                "radii": Object {
                                                  "circle": "50%",
                                                  "medium": "4px",
                                                  "small": "2px",
                                                },
                                                "shadows": Object {
                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                },
                                                "space": Object {
                                                  "half": "4px",
                                                  "none": "0px",
                                                  "x1": "8px",
                                                  "x2": "16px",
                                                  "x3": "24px",
                                                  "x4": "32px",
                                                  "x5": "40px",
                                                  "x6": "48px",
                                                  "x8": "64px",
                                                },
                                                "zIndex": Object {
                                                  "content": 100,
                                                  "overlay": 1000,
                                                  "tabsBar": 210,
                                                  "tabsScollIndicator": 200,
                                                },
                                              }
                                            }
                                          >
                                            <div
                                              className="Box-sc-1qu1edy-0 fLXjLd"
                                            >
                                              <MenuComponent
                                                defaultOpen={false}
                                                hideDelay="200"
                                                showDelay="100"
                                              >
                                                <MenuState
                                                  defaultOpen={false}
                                                  hideDelay="200"
                                                  showDelay="100"
                                                >
                                                  <StatelessDropdownMenu
                                                    disabled={false}
                                                    menuState={
                                                      Object {
                                                        "closeMenu": [Function],
                                                        "handleMenuKeydown": [Function],
                                                        "isOpen": false,
                                                        "openMenu": [Function],
                                                        "toggleMenu": [Function],
                                                      }
                                                    }
                                                    modifiers={
                                                      Object {
                                                        "preventOverflow": Object {
                                                          "boundariesElement": "viewport",
                                                          "enabled": true,
                                                          "padding": 8,
                                                        },
                                                      }
                                                    }
                                                    placement="bottom-start"
                                                    showArrow={true}
                                                    trigger={[Function]}
                                                  >
                                                    <Manager>
                                                      <Reference>
                                                        <InnerReference
                                                          setReferenceNode={[Function]}
                                                        >
                                                          <Styled(Component)
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Open menu"
                                                            disabled={null}
                                                            icon="more"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <StyledComponent
                                                              aria-expanded={false}
                                                              aria-haspopup={true}
                                                              aria-label="Open menu"
                                                              disabled={null}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "sc-gZMcBi",
                                                                    "isStatic": false,
                                                                    "lastClassName": "giNnHm",
                                                                    "rules": Array [],
                                                                  },
                                                                  "displayName": "Styled(Component)",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "sc-gZMcBi",
                                                                  "target": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "defaultProps": Object {
                                                                      "children": null,
                                                                      "className": undefined,
                                                                      "disabled": false,
                                                                      "labelHidden": false,
                                                                    },
                                                                    "propTypes": Object {
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "disabled": [Function],
                                                                      "icon": [Function],
                                                                      "labelHidden": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  },
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={[Function]}
                                                              icon="more"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <ForwardRef
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                aria-label="Open menu"
                                                                className="sc-gZMcBi giNnHm"
                                                                disabled={null}
                                                                icon="more"
                                                                labelHidden={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <IconicButton__WrapperButton
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Open menu"
                                                                  className="sc-gZMcBi giNnHm"
                                                                  disabled={null}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <StyledComponent
                                                                    aria-expanded={false}
                                                                    aria-haspopup={true}
                                                                    aria-label="Open menu"
                                                                    className="sc-gZMcBi giNnHm"
                                                                    disabled={null}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "dmBfBQ",
                                                                          "rules": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "IconicButton__WrapperButton",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                        "target": "button",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      aria-expanded={false}
                                                                      aria-haspopup={true}
                                                                      aria-label="Open menu"
                                                                      className="IconicButton__WrapperButton-sc-1u3dojp-1 dmBfBQ sc-gZMcBi giNnHm"
                                                                      disabled={null}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <Manager>
                                                                        <Reference>
                                                                          <InnerReference
                                                                            setReferenceNode={[Function]}
                                                                          >
                                                                            <Styled(Component)
                                                                              color="currentColor"
                                                                              icon="more"
                                                                              p="half"
                                                                              size="32px"
                                                                              title={null}
                                                                            >
                                                                              <StyledComponent
                                                                                color="currentColor"
                                                                                forwardedComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "_foldedDefaultProps": Object {
                                                                                      "color": "currentColor",
                                                                                      "size": "24px",
                                                                                      "title": null,
                                                                                    },
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "sc-bwzfXH",
                                                                                      "isStatic": false,
                                                                                      "lastClassName": "bbrsYH",
                                                                                      "rules": Array [
                                                                                        [Function],
                                                                                        [Function],
                                                                                        [Function],
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "Styled(Component)",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "propTypes": Object {
                                                                                      "color": [Function],
                                                                                      "icon": [Function],
                                                                                      "size": [Function],
                                                                                      "title": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "sc-bwzfXH",
                                                                                    "target": Object {
                                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                                      "defaultProps": Object {
                                                                                        "className": undefined,
                                                                                        "color": "currentColor",
                                                                                        "focusable": false,
                                                                                        "size": "24px",
                                                                                        "title": null,
                                                                                      },
                                                                                      "propTypes": Object {
                                                                                        "className": [Function],
                                                                                        "color": [Function],
                                                                                        "focusable": [Function],
                                                                                        "icon": [Function],
                                                                                        "size": [Function],
                                                                                        "title": [Function],
                                                                                      },
                                                                                      "render": [Function],
                                                                                    },
                                                                                    "toString": [Function],
                                                                                    "usesTheme": false,
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                                forwardedRef={[Function]}
                                                                                icon="more"
                                                                                p="half"
                                                                                size="32px"
                                                                                title={null}
                                                                              >
                                                                                <ForwardRef
                                                                                  className="sc-bwzfXH bbrsYH"
                                                                                  color="currentColor"
                                                                                  focusable={false}
                                                                                  icon="more"
                                                                                  p="half"
                                                                                  size="32px"
                                                                                  title={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="sc-bwzfXH bbrsYH"
                                                                                    color="currentColor"
                                                                                    fill="currentColor"
                                                                                    focusable={false}
                                                                                    height="32px"
                                                                                    icon="more"
                                                                                    p="half"
                                                                                    size="32px"
                                                                                    title={null}
                                                                                    viewBox="0 0 24 24"
                                                                                    width="32px"
                                                                                  >
                                                                                    <path
                                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                      key="0"
                                                                                    />
                                                                                  </svg>
                                                                                </ForwardRef>
                                                                              </StyledComponent>
                                                                            </Styled(Component)>
                                                                          </InnerReference>
                                                                        </Reference>
                                                                        <Popper
                                                                          modifiers={
                                                                            Object {
                                                                              "preventOverflow": Object {
                                                                                "boundariesElement": "viewport",
                                                                                "enabled": true,
                                                                                "padding": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                          placement="bottom"
                                                                        >
                                                                          <InnerPopper
                                                                            eventsEnabled={true}
                                                                            modifiers={
                                                                              Object {
                                                                                "preventOverflow": Object {
                                                                                  "boundariesElement": "viewport",
                                                                                  "enabled": true,
                                                                                  "padding": 8,
                                                                                },
                                                                              }
                                                                            }
                                                                            placement="bottom"
                                                                            positionFixed={false}
                                                                            referenceElement={
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                class="sc-bwzfXH bbrsYH"
                                                                                color="currentColor"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="32px"
                                                                                icon="more"
                                                                                p="half"
                                                                                viewBox="0 0 24 24"
                                                                                width="32px"
                                                                              >
                                                                                <path
                                                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                />
                                                                              </svg>
                                                                            }
                                                                          />
                                                                        </Popper>
                                                                      </Manager>
                                                                    </button>
                                                                  </StyledComponent>
                                                                </IconicButton__WrapperButton>
                                                              </ForwardRef>
                                                            </StyledComponent>
                                                          </Styled(Component)>
                                                        </InnerReference>
                                                      </Reference>
                                                    </Manager>
                                                  </StatelessDropdownMenu>
                                                </MenuState>
                                              </MenuComponent>
                                            </div>
                                          </StyledComponent>
                                        </Box>
                                      </td>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableBody__StyledTr>
                            </TableBodyRow>
                            <TableBodyRow
                              columns={
                                Array [
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "selected",
                                    "headerFormatter": [Function],
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "expanded",
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "date",
                                    "label": "Date",
                                    "width": "15%",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "note",
                                    "label": "Note",
                                    "width": "45%",
                                  },
                                  Object {
                                    "cellRenderer": [Function],
                                    "dataKey": "actions",
                                    "label": "",
                                    "width": "5%",
                                  },
                                ]
                              }
                              compact={false}
                              key="r3"
                              keyField="id"
                              row={
                                Object {
                                  "actualQuantity": "2,250 eaches",
                                  "date": "2019-10-02",
                                  "expanded": false,
                                  "expectedQuantity": "2,475 eaches",
                                  "id": "r3",
                                  "selected": false,
                                }
                              }
                              rowHovers={true}
                            >
                              <TableBody__StyledTr
                                rowHovers={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                        "isStatic": false,
                                        "lastClassName": "gvDwxX",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "TableBody__StyledTr",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  rowHovers={true}
                                >
                                  <tr
                                    className="TableBody__StyledTr-sc-1amzhx8-0 gvDwxX"
                                  >
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "selected",
                                          "headerFormatter": [Function],
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="selected"
                                      row={
                                        Object {
                                          "actualQuantity": "2,250 eaches",
                                          "date": "2019-10-02",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r3",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <SelectCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "selected",
                                                  "headerFormatter": [Function],
                                                  "width": "30px",
                                                }
                                              }
                                              onSelectRow={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "2,250 eaches",
                                                  "date": "2019-10-02",
                                                  "expanded": false,
                                                  "expectedQuantity": "2,475 eaches",
                                                  "id": "r3",
                                                  "selected": false,
                                                }
                                              }
                                            >
                                              <Styled(BaseCheckbox)
                                                aria-label="toggle row selection"
                                                checked={false}
                                                onChange={[Function]}
                                              >
                                                <StyledComponent
                                                  aria-label="toggle row selection"
                                                  checked={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iAyFgw",
                                                        "isStatic": false,
                                                        "lastClassName": "kDTxQF",
                                                        "rules": Array [
                                                          "padding: 4px 0;",
                                                          "& .sc-bxivhb {",
                                                          "margin-left: 8px;",
                                                          "}",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(BaseCheckbox)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iAyFgw",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "usesTheme": false,
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onChange={[Function]}
                                                >
                                                  <BaseCheckbox
                                                    aria-label="toggle row selection"
                                                    checked={false}
                                                    className="sc-iAyFgw kDTxQF"
                                                    disabled={false}
                                                    error={false}
                                                    id={null}
                                                    onChange={[Function]}
                                                    required={false}
                                                  >
                                                    <Box
                                                      className="sc-iAyFgw kDTxQF"
                                                      theme={
                                                        Object {
                                                          "borders": Array [],
                                                          "breakpoints": Object {
                                                            "extraLarge": "1920px",
                                                            "extraSmall": "0px",
                                                            "large": "1360px",
                                                            "medium": "1024px",
                                                            "small": "768px",
                                                          },
                                                          "colors": Object {
                                                            "black": "#011e38",
                                                            "blackBlue": "#122b47",
                                                            "blue": "#216beb",
                                                            "darkBlue": "#00438f",
                                                            "darkGrey": "#434d59",
                                                            "green": "#008059",
                                                            "grey": "#c0c8d1",
                                                            "lightBlue": "#e1ebfa",
                                                            "lightGreen": "#e9f7f2",
                                                            "lightGrey": "#e4e7eb",
                                                            "lightRed": "#fae6ea",
                                                            "lightYellow": "#fcf5e3",
                                                            "red": "#cc1439",
                                                            "white": "#ffffff",
                                                            "whiteGrey": "#f0f2f5",
                                                            "yellow": "#ffbb00",
                                                          },
                                                          "fontSizes": Object {
                                                            "large": "20px",
                                                            "larger": "26px",
                                                            "largest": "46px",
                                                            "medium": "16px",
                                                            "small": "14px",
                                                            "smaller": "12px",
                                                          },
                                                          "fontWeights": Object {
                                                            "bold": "600",
                                                            "light": "300",
                                                            "medium": "500",
                                                            "normal": "400",
                                                          },
                                                          "fonts": Object {
                                                            "base": "'IBM Plex Sans', sans-serif",
                                                            "mono": "'IBM Plex Mono', monospace",
                                                          },
                                                          "lineHeights": Object {
                                                            "base": "1.5",
                                                            "sectionTitle": "1.23076923",
                                                            "smallTextBase": "1.71428571",
                                                            "smallTextCompressed": "1.14285714",
                                                            "smallerText": "1.33333333",
                                                            "subsectionTitle": "1.2",
                                                            "title": "1.04347826",
                                                          },
                                                          "radii": Object {
                                                            "circle": "50%",
                                                            "medium": "4px",
                                                            "small": "2px",
                                                          },
                                                          "shadows": Object {
                                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                          },
                                                          "space": Object {
                                                            "half": "4px",
                                                            "none": "0px",
                                                            "x1": "8px",
                                                            "x2": "16px",
                                                            "x3": "24px",
                                                            "x4": "32px",
                                                            "x5": "40px",
                                                            "x6": "48px",
                                                            "x8": "64px",
                                                          },
                                                          "zIndex": Object {
                                                            "content": 100,
                                                            "overlay": 1000,
                                                            "tabsBar": 210,
                                                            "tabsScollIndicator": 200,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <StyledComponent
                                                        className="sc-iAyFgw kDTxQF"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "_foldedDefaultProps": Object {
                                                              "theme": Object {
                                                                "borders": Array [],
                                                                "breakpoints": Object {
                                                                  "extraLarge": "1920px",
                                                                  "extraSmall": "0px",
                                                                  "large": "1360px",
                                                                  "medium": "1024px",
                                                                  "small": "768px",
                                                                },
                                                                "colors": Object {
                                                                  "black": "#011e38",
                                                                  "blackBlue": "#122b47",
                                                                  "blue": "#216beb",
                                                                  "darkBlue": "#00438f",
                                                                  "darkGrey": "#434d59",
                                                                  "green": "#008059",
                                                                  "grey": "#c0c8d1",
                                                                  "lightBlue": "#e1ebfa",
                                                                  "lightGreen": "#e9f7f2",
                                                                  "lightGrey": "#e4e7eb",
                                                                  "lightRed": "#fae6ea",
                                                                  "lightYellow": "#fcf5e3",
                                                                  "red": "#cc1439",
                                                                  "white": "#ffffff",
                                                                  "whiteGrey": "#f0f2f5",
                                                                  "yellow": "#ffbb00",
                                                                },
                                                                "fontSizes": Object {
                                                                  "large": "20px",
                                                                  "larger": "26px",
                                                                  "largest": "46px",
                                                                  "medium": "16px",
                                                                  "small": "14px",
                                                                  "smaller": "12px",
                                                                },
                                                                "fontWeights": Object {
                                                                  "bold": "600",
                                                                  "light": "300",
                                                                  "medium": "500",
                                                                  "normal": "400",
                                                                },
                                                                "fonts": Object {
                                                                  "base": "'IBM Plex Sans', sans-serif",
                                                                  "mono": "'IBM Plex Mono', monospace",
                                                                },
                                                                "lineHeights": Object {
                                                                  "base": "1.5",
                                                                  "sectionTitle": "1.23076923",
                                                                  "smallTextBase": "1.71428571",
                                                                  "smallTextCompressed": "1.14285714",
                                                                  "smallerText": "1.33333333",
                                                                  "subsectionTitle": "1.2",
                                                                  "title": "1.04347826",
                                                                },
                                                                "radii": Object {
                                                                  "circle": "50%",
                                                                  "medium": "4px",
                                                                  "small": "2px",
                                                                },
                                                                "shadows": Object {
                                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                },
                                                                "space": Object {
                                                                  "half": "4px",
                                                                  "none": "0px",
                                                                  "x1": "8px",
                                                                  "x2": "16px",
                                                                  "x3": "24px",
                                                                  "x4": "32px",
                                                                  "x5": "40px",
                                                                  "x6": "48px",
                                                                  "x8": "64px",
                                                                },
                                                                "zIndex": Object {
                                                                  "content": 100,
                                                                  "overlay": 1000,
                                                                  "tabsBar": 210,
                                                                  "tabsScollIndicator": 200,
                                                                },
                                                              },
                                                            },
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "Box-sc-1qu1edy-0",
                                                              "isStatic": false,
                                                              "lastClassName": "fLXjLd",
                                                              "rules": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "Box",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": Object {
                                                              "bg": [Function],
                                                              "border": [Function],
                                                              "borderBottom": [Function],
                                                              "borderLeft": [Function],
                                                              "borderRadius": [Function],
                                                              "borderRight": [Function],
                                                              "borderTop": [Function],
                                                              "boxShadow": [Function],
                                                              "color": [Function],
                                                              "display": [Function],
                                                              "flexGrow": [Function],
                                                              "height": [Function],
                                                              "m": [Function],
                                                              "maxHeight": [Function],
                                                              "maxWidth": [Function],
                                                              "mb": [Function],
                                                              "minHeight": [Function],
                                                              "minWidth": [Function],
                                                              "ml": [Function],
                                                              "mr": [Function],
                                                              "mt": [Function],
                                                              "mx": [Function],
                                                              "my": [Function],
                                                              "order": [Function],
                                                              "p": [Function],
                                                              "pb": [Function],
                                                              "pl": [Function],
                                                              "position": [Function],
                                                              "pr": [Function],
                                                              "pt": [Function],
                                                              "px": [Function],
                                                              "py": [Function],
                                                              "textAlign": [Function],
                                                              "width": [Function],
                                                            },
                                                            "render": [Function],
                                                            "styledComponentId": "Box-sc-1qu1edy-0",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        theme={
                                                          Object {
                                                            "borders": Array [],
                                                            "breakpoints": Object {
                                                              "extraLarge": "1920px",
                                                              "extraSmall": "0px",
                                                              "large": "1360px",
                                                              "medium": "1024px",
                                                              "small": "768px",
                                                            },
                                                            "colors": Object {
                                                              "black": "#011e38",
                                                              "blackBlue": "#122b47",
                                                              "blue": "#216beb",
                                                              "darkBlue": "#00438f",
                                                              "darkGrey": "#434d59",
                                                              "green": "#008059",
                                                              "grey": "#c0c8d1",
                                                              "lightBlue": "#e1ebfa",
                                                              "lightGreen": "#e9f7f2",
                                                              "lightGrey": "#e4e7eb",
                                                              "lightRed": "#fae6ea",
                                                              "lightYellow": "#fcf5e3",
                                                              "red": "#cc1439",
                                                              "white": "#ffffff",
                                                              "whiteGrey": "#f0f2f5",
                                                              "yellow": "#ffbb00",
                                                            },
                                                            "fontSizes": Object {
                                                              "large": "20px",
                                                              "larger": "26px",
                                                              "largest": "46px",
                                                              "medium": "16px",
                                                              "small": "14px",
                                                              "smaller": "12px",
                                                            },
                                                            "fontWeights": Object {
                                                              "bold": "600",
                                                              "light": "300",
                                                              "medium": "500",
                                                              "normal": "400",
                                                            },
                                                            "fonts": Object {
                                                              "base": "'IBM Plex Sans', sans-serif",
                                                              "mono": "'IBM Plex Mono', monospace",
                                                            },
                                                            "lineHeights": Object {
                                                              "base": "1.5",
                                                              "sectionTitle": "1.23076923",
                                                              "smallTextBase": "1.71428571",
                                                              "smallTextCompressed": "1.14285714",
                                                              "smallerText": "1.33333333",
                                                              "subsectionTitle": "1.2",
                                                              "title": "1.04347826",
                                                            },
                                                            "radii": Object {
                                                              "circle": "50%",
                                                              "medium": "4px",
                                                              "small": "2px",
                                                            },
                                                            "shadows": Object {
                                                              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                            },
                                                            "space": Object {
                                                              "half": "4px",
                                                              "none": "0px",
                                                              "x1": "8px",
                                                              "x2": "16px",
                                                              "x3": "24px",
                                                              "x4": "32px",
                                                              "x5": "40px",
                                                              "x6": "48px",
                                                              "x8": "64px",
                                                            },
                                                            "zIndex": Object {
                                                              "content": 100,
                                                              "overlay": 1000,
                                                              "tabsBar": 210,
                                                              "tabsScollIndicator": 200,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="Box-sc-1qu1edy-0 dusExj sc-iAyFgw kDTxQF"
                                                        >
                                                          <ClickInputLabel
                                                            disabled={false}
                                                          >
                                                            <StyledComponent
                                                              disabled={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "ClickInputLabel-j2axnv-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "eoyTaS",
                                                                    "rules": Array [
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                  "displayName": "ClickInputLabel",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "ClickInputLabel-j2axnv-0",
                                                                  "target": "label",
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <label
                                                                className="ClickInputLabel-j2axnv-0 eoyTaS"
                                                                disabled={false}
                                                              >
                                                                <Checkbox__CheckboxInput
                                                                  aria-invalid={false}
                                                                  aria-label="toggle row selection"
                                                                  aria-required={false}
                                                                  checked={false}
                                                                  className="sc-iAyFgw kDTxQF"
                                                                  disabled={false}
                                                                  error={false}
                                                                  id={null}
                                                                  onChange={[Function]}
                                                                  required={false}
                                                                  type="checkbox"
                                                                >
                                                                  <StyledComponent
                                                                    aria-invalid={false}
                                                                    aria-label="toggle row selection"
                                                                    aria-required={false}
                                                                    checked={false}
                                                                    className="sc-iAyFgw kDTxQF"
                                                                    disabled={false}
                                                                    error={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "hawbaw",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__CheckboxInput",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                        "target": "input",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                    id={null}
                                                                    onChange={[Function]}
                                                                    required={false}
                                                                    type="checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      aria-label="toggle row selection"
                                                                      aria-required={false}
                                                                      checked={false}
                                                                      className="Checkbox__CheckboxInput-sc-1nm58f1-1 hawbaw sc-iAyFgw kDTxQF"
                                                                      disabled={false}
                                                                      id={null}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      type="checkbox"
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__CheckboxInput>
                                                                <Checkbox__VisualCheckbox
                                                                  checked={false}
                                                                  disabled={false}
                                                                >
                                                                  <StyledComponent
                                                                    checked={false}
                                                                    disabled={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                          "isStatic": false,
                                                                          "lastClassName": "klUiEr",
                                                                          "rules": Array [
                                                                            "min-width: 16px;",
                                                                            "height: 16px;",
                                                                            "border-radius: 2px;",
                                                                            "border: solid 1px;",
                                                                            "position: relative;",
                                                                            "align-self: center;",
                                                                            "&:before {",
                                                                            "content: '';",
                                                                            "display: none;",
                                                                            "position: relative;",
                                                                            "left: 4px;",
                                                                            "width: 3px;",
                                                                            "height: 9px;",
                                                                            "border: solid #ffffff;",
                                                                            "border-width: 0 3px 3px 0;",
                                                                            "border-radius: 1px;",
                                                                            "transform: rotate(45deg);",
                                                                            "}",
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__VisualCheckbox",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                        "target": "div",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <div
                                                                      checked={false}
                                                                      className="Checkbox__VisualCheckbox-sc-1nm58f1-0 klUiEr"
                                                                      disabled={false}
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__VisualCheckbox>
                                                              </label>
                                                            </StyledComponent>
                                                          </ClickInputLabel>
                                                        </div>
                                                      </StyledComponent>
                                                    </Box>
                                                  </BaseCheckbox>
                                                </StyledComponent>
                                              </Styled(BaseCheckbox)>
                                            </SelectCell>
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "expanded",
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="expanded"
                                      row={
                                        Object {
                                          "actualQuantity": "2,250 eaches",
                                          "date": "2019-10-02",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r3",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <ExpandCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "expanded",
                                                  "width": "30px",
                                                }
                                              }
                                              onRowExpansionChange={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "2,250 eaches",
                                                  "date": "2019-10-02",
                                                  "expanded": false,
                                                  "expectedQuantity": "2,475 eaches",
                                                  "id": "r3",
                                                  "selected": false,
                                                }
                                              }
                                            />
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2019-10-02"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "date",
                                          "label": "Date",
                                          "width": "15%",
                                        }
                                      }
                                      compact={false}
                                      key="date"
                                      row={
                                        Object {
                                          "actualQuantity": "2,250 eaches",
                                          "date": "2019-10-02",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r3",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            Wed, 02 Oct 2019
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2,475 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "expectedQuantity",
                                          "label": "Expected Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="expectedQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "2,250 eaches",
                                          "date": "2019-10-02",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r3",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            2,475 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2,250 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actualQuantity",
                                          "label": "Actual Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="actualQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "2,250 eaches",
                                          "date": "2019-10-02",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r3",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            2,250 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "note",
                                          "label": "Note",
                                          "width": "45%",
                                        }
                                      }
                                      compact={false}
                                      key="note"
                                      row={
                                        Object {
                                          "actualQuantity": "2,250 eaches",
                                          "date": "2019-10-02",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r3",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellRenderer": [Function],
                                          "dataKey": "actions",
                                          "label": "",
                                          "width": "5%",
                                        }
                                      }
                                      compact={false}
                                      key="actions"
                                      row={
                                        Object {
                                          "actualQuantity": "2,250 eaches",
                                          "date": "2019-10-02",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r3",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <td
                                        colSpan={null}
                                      >
                                        <Box
                                          pr="x3"
                                          textAlign="right"
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "_foldedDefaultProps": Object {
                                                  "theme": Object {
                                                    "borders": Array [],
                                                    "breakpoints": Object {
                                                      "extraLarge": "1920px",
                                                      "extraSmall": "0px",
                                                      "large": "1360px",
                                                      "medium": "1024px",
                                                      "small": "768px",
                                                    },
                                                    "colors": Object {
                                                      "black": "#011e38",
                                                      "blackBlue": "#122b47",
                                                      "blue": "#216beb",
                                                      "darkBlue": "#00438f",
                                                      "darkGrey": "#434d59",
                                                      "green": "#008059",
                                                      "grey": "#c0c8d1",
                                                      "lightBlue": "#e1ebfa",
                                                      "lightGreen": "#e9f7f2",
                                                      "lightGrey": "#e4e7eb",
                                                      "lightRed": "#fae6ea",
                                                      "lightYellow": "#fcf5e3",
                                                      "red": "#cc1439",
                                                      "white": "#ffffff",
                                                      "whiteGrey": "#f0f2f5",
                                                      "yellow": "#ffbb00",
                                                    },
                                                    "fontSizes": Object {
                                                      "large": "20px",
                                                      "larger": "26px",
                                                      "largest": "46px",
                                                      "medium": "16px",
                                                      "small": "14px",
                                                      "smaller": "12px",
                                                    },
                                                    "fontWeights": Object {
                                                      "bold": "600",
                                                      "light": "300",
                                                      "medium": "500",
                                                      "normal": "400",
                                                    },
                                                    "fonts": Object {
                                                      "base": "'IBM Plex Sans', sans-serif",
                                                      "mono": "'IBM Plex Mono', monospace",
                                                    },
                                                    "lineHeights": Object {
                                                      "base": "1.5",
                                                      "sectionTitle": "1.23076923",
                                                      "smallTextBase": "1.71428571",
                                                      "smallTextCompressed": "1.14285714",
                                                      "smallerText": "1.33333333",
                                                      "subsectionTitle": "1.2",
                                                      "title": "1.04347826",
                                                    },
                                                    "radii": Object {
                                                      "circle": "50%",
                                                      "medium": "4px",
                                                      "small": "2px",
                                                    },
                                                    "shadows": Object {
                                                      "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                      "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                      "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                      "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                      "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                    },
                                                    "space": Object {
                                                      "half": "4px",
                                                      "none": "0px",
                                                      "x1": "8px",
                                                      "x2": "16px",
                                                      "x3": "24px",
                                                      "x4": "32px",
                                                      "x5": "40px",
                                                      "x6": "48px",
                                                      "x8": "64px",
                                                    },
                                                    "zIndex": Object {
                                                      "content": 100,
                                                      "overlay": 1000,
                                                      "tabsBar": 210,
                                                      "tabsScollIndicator": 200,
                                                    },
                                                  },
                                                },
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Box-sc-1qu1edy-0",
                                                  "isStatic": false,
                                                  "lastClassName": "fLXjLd",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "Box",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "bg": [Function],
                                                  "border": [Function],
                                                  "borderBottom": [Function],
                                                  "borderLeft": [Function],
                                                  "borderRadius": [Function],
                                                  "borderRight": [Function],
                                                  "borderTop": [Function],
                                                  "boxShadow": [Function],
                                                  "color": [Function],
                                                  "display": [Function],
                                                  "flexGrow": [Function],
                                                  "height": [Function],
                                                  "m": [Function],
                                                  "maxHeight": [Function],
                                                  "maxWidth": [Function],
                                                  "mb": [Function],
                                                  "minHeight": [Function],
                                                  "minWidth": [Function],
                                                  "ml": [Function],
                                                  "mr": [Function],
                                                  "mt": [Function],
                                                  "mx": [Function],
                                                  "my": [Function],
                                                  "order": [Function],
                                                  "p": [Function],
                                                  "pb": [Function],
                                                  "pl": [Function],
                                                  "position": [Function],
                                                  "pr": [Function],
                                                  "pt": [Function],
                                                  "px": [Function],
                                                  "py": [Function],
                                                  "textAlign": [Function],
                                                  "width": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "Box-sc-1qu1edy-0",
                                                "target": "div",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            pr="x3"
                                            textAlign="right"
                                            theme={
                                              Object {
                                                "borders": Array [],
                                                "breakpoints": Object {
                                                  "extraLarge": "1920px",
                                                  "extraSmall": "0px",
                                                  "large": "1360px",
                                                  "medium": "1024px",
                                                  "small": "768px",
                                                },
                                                "colors": Object {
                                                  "black": "#011e38",
                                                  "blackBlue": "#122b47",
                                                  "blue": "#216beb",
                                                  "darkBlue": "#00438f",
                                                  "darkGrey": "#434d59",
                                                  "green": "#008059",
                                                  "grey": "#c0c8d1",
                                                  "lightBlue": "#e1ebfa",
                                                  "lightGreen": "#e9f7f2",
                                                  "lightGrey": "#e4e7eb",
                                                  "lightRed": "#fae6ea",
                                                  "lightYellow": "#fcf5e3",
                                                  "red": "#cc1439",
                                                  "white": "#ffffff",
                                                  "whiteGrey": "#f0f2f5",
                                                  "yellow": "#ffbb00",
                                                },
                                                "fontSizes": Object {
                                                  "large": "20px",
                                                  "larger": "26px",
                                                  "largest": "46px",
                                                  "medium": "16px",
                                                  "small": "14px",
                                                  "smaller": "12px",
                                                },
                                                "fontWeights": Object {
                                                  "bold": "600",
                                                  "light": "300",
                                                  "medium": "500",
                                                  "normal": "400",
                                                },
                                                "fonts": Object {
                                                  "base": "'IBM Plex Sans', sans-serif",
                                                  "mono": "'IBM Plex Mono', monospace",
                                                },
                                                "lineHeights": Object {
                                                  "base": "1.5",
                                                  "sectionTitle": "1.23076923",
                                                  "smallTextBase": "1.71428571",
                                                  "smallTextCompressed": "1.14285714",
                                                  "smallerText": "1.33333333",
                                                  "subsectionTitle": "1.2",
                                                  "title": "1.04347826",
                                                },
                                                "radii": Object {
                                                  "circle": "50%",
                                                  "medium": "4px",
                                                  "small": "2px",
                                                },
                                                "shadows": Object {
                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                },
                                                "space": Object {
                                                  "half": "4px",
                                                  "none": "0px",
                                                  "x1": "8px",
                                                  "x2": "16px",
                                                  "x3": "24px",
                                                  "x4": "32px",
                                                  "x5": "40px",
                                                  "x6": "48px",
                                                  "x8": "64px",
                                                },
                                                "zIndex": Object {
                                                  "content": 100,
                                                  "overlay": 1000,
                                                  "tabsBar": 210,
                                                  "tabsScollIndicator": 200,
                                                },
                                              }
                                            }
                                          >
                                            <div
                                              className="Box-sc-1qu1edy-0 fLXjLd"
                                            >
                                              <MenuComponent
                                                defaultOpen={false}
                                                hideDelay="200"
                                                showDelay="100"
                                              >
                                                <MenuState
                                                  defaultOpen={false}
                                                  hideDelay="200"
                                                  showDelay="100"
                                                >
                                                  <StatelessDropdownMenu
                                                    disabled={false}
                                                    menuState={
                                                      Object {
                                                        "closeMenu": [Function],
                                                        "handleMenuKeydown": [Function],
                                                        "isOpen": false,
                                                        "openMenu": [Function],
                                                        "toggleMenu": [Function],
                                                      }
                                                    }
                                                    modifiers={
                                                      Object {
                                                        "preventOverflow": Object {
                                                          "boundariesElement": "viewport",
                                                          "enabled": true,
                                                          "padding": 8,
                                                        },
                                                      }
                                                    }
                                                    placement="bottom-start"
                                                    showArrow={true}
                                                    trigger={[Function]}
                                                  >
                                                    <Manager>
                                                      <Reference>
                                                        <InnerReference
                                                          setReferenceNode={[Function]}
                                                        >
                                                          <Styled(Component)
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Open menu"
                                                            disabled={null}
                                                            icon="more"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <StyledComponent
                                                              aria-expanded={false}
                                                              aria-haspopup={true}
                                                              aria-label="Open menu"
                                                              disabled={null}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "sc-gZMcBi",
                                                                    "isStatic": false,
                                                                    "lastClassName": "giNnHm",
                                                                    "rules": Array [],
                                                                  },
                                                                  "displayName": "Styled(Component)",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "sc-gZMcBi",
                                                                  "target": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "defaultProps": Object {
                                                                      "children": null,
                                                                      "className": undefined,
                                                                      "disabled": false,
                                                                      "labelHidden": false,
                                                                    },
                                                                    "propTypes": Object {
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "disabled": [Function],
                                                                      "icon": [Function],
                                                                      "labelHidden": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  },
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={[Function]}
                                                              icon="more"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <ForwardRef
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                aria-label="Open menu"
                                                                className="sc-gZMcBi giNnHm"
                                                                disabled={null}
                                                                icon="more"
                                                                labelHidden={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <IconicButton__WrapperButton
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Open menu"
                                                                  className="sc-gZMcBi giNnHm"
                                                                  disabled={null}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <StyledComponent
                                                                    aria-expanded={false}
                                                                    aria-haspopup={true}
                                                                    aria-label="Open menu"
                                                                    className="sc-gZMcBi giNnHm"
                                                                    disabled={null}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "dmBfBQ",
                                                                          "rules": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "IconicButton__WrapperButton",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                        "target": "button",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      aria-expanded={false}
                                                                      aria-haspopup={true}
                                                                      aria-label="Open menu"
                                                                      className="IconicButton__WrapperButton-sc-1u3dojp-1 dmBfBQ sc-gZMcBi giNnHm"
                                                                      disabled={null}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <Manager>
                                                                        <Reference>
                                                                          <InnerReference
                                                                            setReferenceNode={[Function]}
                                                                          >
                                                                            <Styled(Component)
                                                                              color="currentColor"
                                                                              icon="more"
                                                                              p="half"
                                                                              size="32px"
                                                                              title={null}
                                                                            >
                                                                              <StyledComponent
                                                                                color="currentColor"
                                                                                forwardedComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "_foldedDefaultProps": Object {
                                                                                      "color": "currentColor",
                                                                                      "size": "24px",
                                                                                      "title": null,
                                                                                    },
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "sc-bwzfXH",
                                                                                      "isStatic": false,
                                                                                      "lastClassName": "bbrsYH",
                                                                                      "rules": Array [
                                                                                        [Function],
                                                                                        [Function],
                                                                                        [Function],
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "Styled(Component)",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "propTypes": Object {
                                                                                      "color": [Function],
                                                                                      "icon": [Function],
                                                                                      "size": [Function],
                                                                                      "title": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "sc-bwzfXH",
                                                                                    "target": Object {
                                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                                      "defaultProps": Object {
                                                                                        "className": undefined,
                                                                                        "color": "currentColor",
                                                                                        "focusable": false,
                                                                                        "size": "24px",
                                                                                        "title": null,
                                                                                      },
                                                                                      "propTypes": Object {
                                                                                        "className": [Function],
                                                                                        "color": [Function],
                                                                                        "focusable": [Function],
                                                                                        "icon": [Function],
                                                                                        "size": [Function],
                                                                                        "title": [Function],
                                                                                      },
                                                                                      "render": [Function],
                                                                                    },
                                                                                    "toString": [Function],
                                                                                    "usesTheme": false,
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                                forwardedRef={[Function]}
                                                                                icon="more"
                                                                                p="half"
                                                                                size="32px"
                                                                                title={null}
                                                                              >
                                                                                <ForwardRef
                                                                                  className="sc-bwzfXH bbrsYH"
                                                                                  color="currentColor"
                                                                                  focusable={false}
                                                                                  icon="more"
                                                                                  p="half"
                                                                                  size="32px"
                                                                                  title={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="sc-bwzfXH bbrsYH"
                                                                                    color="currentColor"
                                                                                    fill="currentColor"
                                                                                    focusable={false}
                                                                                    height="32px"
                                                                                    icon="more"
                                                                                    p="half"
                                                                                    size="32px"
                                                                                    title={null}
                                                                                    viewBox="0 0 24 24"
                                                                                    width="32px"
                                                                                  >
                                                                                    <path
                                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                      key="0"
                                                                                    />
                                                                                  </svg>
                                                                                </ForwardRef>
                                                                              </StyledComponent>
                                                                            </Styled(Component)>
                                                                          </InnerReference>
                                                                        </Reference>
                                                                        <Popper
                                                                          modifiers={
                                                                            Object {
                                                                              "preventOverflow": Object {
                                                                                "boundariesElement": "viewport",
                                                                                "enabled": true,
                                                                                "padding": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                          placement="bottom"
                                                                        >
                                                                          <InnerPopper
                                                                            eventsEnabled={true}
                                                                            modifiers={
                                                                              Object {
                                                                                "preventOverflow": Object {
                                                                                  "boundariesElement": "viewport",
                                                                                  "enabled": true,
                                                                                  "padding": 8,
                                                                                },
                                                                              }
                                                                            }
                                                                            placement="bottom"
                                                                            positionFixed={false}
                                                                            referenceElement={
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                class="sc-bwzfXH bbrsYH"
                                                                                color="currentColor"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="32px"
                                                                                icon="more"
                                                                                p="half"
                                                                                viewBox="0 0 24 24"
                                                                                width="32px"
                                                                              >
                                                                                <path
                                                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                />
                                                                              </svg>
                                                                            }
                                                                          />
                                                                        </Popper>
                                                                      </Manager>
                                                                    </button>
                                                                  </StyledComponent>
                                                                </IconicButton__WrapperButton>
                                                              </ForwardRef>
                                                            </StyledComponent>
                                                          </Styled(Component)>
                                                        </InnerReference>
                                                      </Reference>
                                                    </Manager>
                                                  </StatelessDropdownMenu>
                                                </MenuState>
                                              </MenuComponent>
                                            </div>
                                          </StyledComponent>
                                        </Box>
                                      </td>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableBody__StyledTr>
                            </TableBodyRow>
                            <TableBodyRow
                              columns={
                                Array [
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "selected",
                                    "headerFormatter": [Function],
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "expanded",
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "date",
                                    "label": "Date",
                                    "width": "15%",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "note",
                                    "label": "Note",
                                    "width": "45%",
                                  },
                                  Object {
                                    "cellRenderer": [Function],
                                    "dataKey": "actions",
                                    "label": "",
                                    "width": "5%",
                                  },
                                ]
                              }
                              compact={false}
                              key="r4"
                              keyField="id"
                              row={
                                Object {
                                  "actualQuantity": "1,425 eaches",
                                  "date": "2019-10-03",
                                  "expanded": false,
                                  "expectedQuantity": "2,475 eaches",
                                  "id": "r4",
                                  "selected": false,
                                }
                              }
                              rowHovers={true}
                            >
                              <TableBody__StyledTr
                                rowHovers={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                        "isStatic": false,
                                        "lastClassName": "gvDwxX",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "TableBody__StyledTr",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  rowHovers={true}
                                >
                                  <tr
                                    className="TableBody__StyledTr-sc-1amzhx8-0 gvDwxX"
                                  >
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "selected",
                                          "headerFormatter": [Function],
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="selected"
                                      row={
                                        Object {
                                          "actualQuantity": "1,425 eaches",
                                          "date": "2019-10-03",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r4",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <SelectCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "selected",
                                                  "headerFormatter": [Function],
                                                  "width": "30px",
                                                }
                                              }
                                              onSelectRow={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "1,425 eaches",
                                                  "date": "2019-10-03",
                                                  "expanded": false,
                                                  "expectedQuantity": "2,475 eaches",
                                                  "id": "r4",
                                                  "selected": false,
                                                }
                                              }
                                            >
                                              <Styled(BaseCheckbox)
                                                aria-label="toggle row selection"
                                                checked={false}
                                                onChange={[Function]}
                                              >
                                                <StyledComponent
                                                  aria-label="toggle row selection"
                                                  checked={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iAyFgw",
                                                        "isStatic": false,
                                                        "lastClassName": "kDTxQF",
                                                        "rules": Array [
                                                          "padding: 4px 0;",
                                                          "& .sc-bxivhb {",
                                                          "margin-left: 8px;",
                                                          "}",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(BaseCheckbox)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iAyFgw",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "usesTheme": false,
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onChange={[Function]}
                                                >
                                                  <BaseCheckbox
                                                    aria-label="toggle row selection"
                                                    checked={false}
                                                    className="sc-iAyFgw kDTxQF"
                                                    disabled={false}
                                                    error={false}
                                                    id={null}
                                                    onChange={[Function]}
                                                    required={false}
                                                  >
                                                    <Box
                                                      className="sc-iAyFgw kDTxQF"
                                                      theme={
                                                        Object {
                                                          "borders": Array [],
                                                          "breakpoints": Object {
                                                            "extraLarge": "1920px",
                                                            "extraSmall": "0px",
                                                            "large": "1360px",
                                                            "medium": "1024px",
                                                            "small": "768px",
                                                          },
                                                          "colors": Object {
                                                            "black": "#011e38",
                                                            "blackBlue": "#122b47",
                                                            "blue": "#216beb",
                                                            "darkBlue": "#00438f",
                                                            "darkGrey": "#434d59",
                                                            "green": "#008059",
                                                            "grey": "#c0c8d1",
                                                            "lightBlue": "#e1ebfa",
                                                            "lightGreen": "#e9f7f2",
                                                            "lightGrey": "#e4e7eb",
                                                            "lightRed": "#fae6ea",
                                                            "lightYellow": "#fcf5e3",
                                                            "red": "#cc1439",
                                                            "white": "#ffffff",
                                                            "whiteGrey": "#f0f2f5",
                                                            "yellow": "#ffbb00",
                                                          },
                                                          "fontSizes": Object {
                                                            "large": "20px",
                                                            "larger": "26px",
                                                            "largest": "46px",
                                                            "medium": "16px",
                                                            "small": "14px",
                                                            "smaller": "12px",
                                                          },
                                                          "fontWeights": Object {
                                                            "bold": "600",
                                                            "light": "300",
                                                            "medium": "500",
                                                            "normal": "400",
                                                          },
                                                          "fonts": Object {
                                                            "base": "'IBM Plex Sans', sans-serif",
                                                            "mono": "'IBM Plex Mono', monospace",
                                                          },
                                                          "lineHeights": Object {
                                                            "base": "1.5",
                                                            "sectionTitle": "1.23076923",
                                                            "smallTextBase": "1.71428571",
                                                            "smallTextCompressed": "1.14285714",
                                                            "smallerText": "1.33333333",
                                                            "subsectionTitle": "1.2",
                                                            "title": "1.04347826",
                                                          },
                                                          "radii": Object {
                                                            "circle": "50%",
                                                            "medium": "4px",
                                                            "small": "2px",
                                                          },
                                                          "shadows": Object {
                                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                          },
                                                          "space": Object {
                                                            "half": "4px",
                                                            "none": "0px",
                                                            "x1": "8px",
                                                            "x2": "16px",
                                                            "x3": "24px",
                                                            "x4": "32px",
                                                            "x5": "40px",
                                                            "x6": "48px",
                                                            "x8": "64px",
                                                          },
                                                          "zIndex": Object {
                                                            "content": 100,
                                                            "overlay": 1000,
                                                            "tabsBar": 210,
                                                            "tabsScollIndicator": 200,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <StyledComponent
                                                        className="sc-iAyFgw kDTxQF"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "_foldedDefaultProps": Object {
                                                              "theme": Object {
                                                                "borders": Array [],
                                                                "breakpoints": Object {
                                                                  "extraLarge": "1920px",
                                                                  "extraSmall": "0px",
                                                                  "large": "1360px",
                                                                  "medium": "1024px",
                                                                  "small": "768px",
                                                                },
                                                                "colors": Object {
                                                                  "black": "#011e38",
                                                                  "blackBlue": "#122b47",
                                                                  "blue": "#216beb",
                                                                  "darkBlue": "#00438f",
                                                                  "darkGrey": "#434d59",
                                                                  "green": "#008059",
                                                                  "grey": "#c0c8d1",
                                                                  "lightBlue": "#e1ebfa",
                                                                  "lightGreen": "#e9f7f2",
                                                                  "lightGrey": "#e4e7eb",
                                                                  "lightRed": "#fae6ea",
                                                                  "lightYellow": "#fcf5e3",
                                                                  "red": "#cc1439",
                                                                  "white": "#ffffff",
                                                                  "whiteGrey": "#f0f2f5",
                                                                  "yellow": "#ffbb00",
                                                                },
                                                                "fontSizes": Object {
                                                                  "large": "20px",
                                                                  "larger": "26px",
                                                                  "largest": "46px",
                                                                  "medium": "16px",
                                                                  "small": "14px",
                                                                  "smaller": "12px",
                                                                },
                                                                "fontWeights": Object {
                                                                  "bold": "600",
                                                                  "light": "300",
                                                                  "medium": "500",
                                                                  "normal": "400",
                                                                },
                                                                "fonts": Object {
                                                                  "base": "'IBM Plex Sans', sans-serif",
                                                                  "mono": "'IBM Plex Mono', monospace",
                                                                },
                                                                "lineHeights": Object {
                                                                  "base": "1.5",
                                                                  "sectionTitle": "1.23076923",
                                                                  "smallTextBase": "1.71428571",
                                                                  "smallTextCompressed": "1.14285714",
                                                                  "smallerText": "1.33333333",
                                                                  "subsectionTitle": "1.2",
                                                                  "title": "1.04347826",
                                                                },
                                                                "radii": Object {
                                                                  "circle": "50%",
                                                                  "medium": "4px",
                                                                  "small": "2px",
                                                                },
                                                                "shadows": Object {
                                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                },
                                                                "space": Object {
                                                                  "half": "4px",
                                                                  "none": "0px",
                                                                  "x1": "8px",
                                                                  "x2": "16px",
                                                                  "x3": "24px",
                                                                  "x4": "32px",
                                                                  "x5": "40px",
                                                                  "x6": "48px",
                                                                  "x8": "64px",
                                                                },
                                                                "zIndex": Object {
                                                                  "content": 100,
                                                                  "overlay": 1000,
                                                                  "tabsBar": 210,
                                                                  "tabsScollIndicator": 200,
                                                                },
                                                              },
                                                            },
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "Box-sc-1qu1edy-0",
                                                              "isStatic": false,
                                                              "lastClassName": "fLXjLd",
                                                              "rules": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "Box",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": Object {
                                                              "bg": [Function],
                                                              "border": [Function],
                                                              "borderBottom": [Function],
                                                              "borderLeft": [Function],
                                                              "borderRadius": [Function],
                                                              "borderRight": [Function],
                                                              "borderTop": [Function],
                                                              "boxShadow": [Function],
                                                              "color": [Function],
                                                              "display": [Function],
                                                              "flexGrow": [Function],
                                                              "height": [Function],
                                                              "m": [Function],
                                                              "maxHeight": [Function],
                                                              "maxWidth": [Function],
                                                              "mb": [Function],
                                                              "minHeight": [Function],
                                                              "minWidth": [Function],
                                                              "ml": [Function],
                                                              "mr": [Function],
                                                              "mt": [Function],
                                                              "mx": [Function],
                                                              "my": [Function],
                                                              "order": [Function],
                                                              "p": [Function],
                                                              "pb": [Function],
                                                              "pl": [Function],
                                                              "position": [Function],
                                                              "pr": [Function],
                                                              "pt": [Function],
                                                              "px": [Function],
                                                              "py": [Function],
                                                              "textAlign": [Function],
                                                              "width": [Function],
                                                            },
                                                            "render": [Function],
                                                            "styledComponentId": "Box-sc-1qu1edy-0",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        theme={
                                                          Object {
                                                            "borders": Array [],
                                                            "breakpoints": Object {
                                                              "extraLarge": "1920px",
                                                              "extraSmall": "0px",
                                                              "large": "1360px",
                                                              "medium": "1024px",
                                                              "small": "768px",
                                                            },
                                                            "colors": Object {
                                                              "black": "#011e38",
                                                              "blackBlue": "#122b47",
                                                              "blue": "#216beb",
                                                              "darkBlue": "#00438f",
                                                              "darkGrey": "#434d59",
                                                              "green": "#008059",
                                                              "grey": "#c0c8d1",
                                                              "lightBlue": "#e1ebfa",
                                                              "lightGreen": "#e9f7f2",
                                                              "lightGrey": "#e4e7eb",
                                                              "lightRed": "#fae6ea",
                                                              "lightYellow": "#fcf5e3",
                                                              "red": "#cc1439",
                                                              "white": "#ffffff",
                                                              "whiteGrey": "#f0f2f5",
                                                              "yellow": "#ffbb00",
                                                            },
                                                            "fontSizes": Object {
                                                              "large": "20px",
                                                              "larger": "26px",
                                                              "largest": "46px",
                                                              "medium": "16px",
                                                              "small": "14px",
                                                              "smaller": "12px",
                                                            },
                                                            "fontWeights": Object {
                                                              "bold": "600",
                                                              "light": "300",
                                                              "medium": "500",
                                                              "normal": "400",
                                                            },
                                                            "fonts": Object {
                                                              "base": "'IBM Plex Sans', sans-serif",
                                                              "mono": "'IBM Plex Mono', monospace",
                                                            },
                                                            "lineHeights": Object {
                                                              "base": "1.5",
                                                              "sectionTitle": "1.23076923",
                                                              "smallTextBase": "1.71428571",
                                                              "smallTextCompressed": "1.14285714",
                                                              "smallerText": "1.33333333",
                                                              "subsectionTitle": "1.2",
                                                              "title": "1.04347826",
                                                            },
                                                            "radii": Object {
                                                              "circle": "50%",
                                                              "medium": "4px",
                                                              "small": "2px",
                                                            },
                                                            "shadows": Object {
                                                              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                            },
                                                            "space": Object {
                                                              "half": "4px",
                                                              "none": "0px",
                                                              "x1": "8px",
                                                              "x2": "16px",
                                                              "x3": "24px",
                                                              "x4": "32px",
                                                              "x5": "40px",
                                                              "x6": "48px",
                                                              "x8": "64px",
                                                            },
                                                            "zIndex": Object {
                                                              "content": 100,
                                                              "overlay": 1000,
                                                              "tabsBar": 210,
                                                              "tabsScollIndicator": 200,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="Box-sc-1qu1edy-0 dusExj sc-iAyFgw kDTxQF"
                                                        >
                                                          <ClickInputLabel
                                                            disabled={false}
                                                          >
                                                            <StyledComponent
                                                              disabled={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "ClickInputLabel-j2axnv-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "eoyTaS",
                                                                    "rules": Array [
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                  "displayName": "ClickInputLabel",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "ClickInputLabel-j2axnv-0",
                                                                  "target": "label",
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <label
                                                                className="ClickInputLabel-j2axnv-0 eoyTaS"
                                                                disabled={false}
                                                              >
                                                                <Checkbox__CheckboxInput
                                                                  aria-invalid={false}
                                                                  aria-label="toggle row selection"
                                                                  aria-required={false}
                                                                  checked={false}
                                                                  className="sc-iAyFgw kDTxQF"
                                                                  disabled={false}
                                                                  error={false}
                                                                  id={null}
                                                                  onChange={[Function]}
                                                                  required={false}
                                                                  type="checkbox"
                                                                >
                                                                  <StyledComponent
                                                                    aria-invalid={false}
                                                                    aria-label="toggle row selection"
                                                                    aria-required={false}
                                                                    checked={false}
                                                                    className="sc-iAyFgw kDTxQF"
                                                                    disabled={false}
                                                                    error={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "hawbaw",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__CheckboxInput",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                        "target": "input",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                    id={null}
                                                                    onChange={[Function]}
                                                                    required={false}
                                                                    type="checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      aria-label="toggle row selection"
                                                                      aria-required={false}
                                                                      checked={false}
                                                                      className="Checkbox__CheckboxInput-sc-1nm58f1-1 hawbaw sc-iAyFgw kDTxQF"
                                                                      disabled={false}
                                                                      id={null}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      type="checkbox"
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__CheckboxInput>
                                                                <Checkbox__VisualCheckbox
                                                                  checked={false}
                                                                  disabled={false}
                                                                >
                                                                  <StyledComponent
                                                                    checked={false}
                                                                    disabled={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                          "isStatic": false,
                                                                          "lastClassName": "klUiEr",
                                                                          "rules": Array [
                                                                            "min-width: 16px;",
                                                                            "height: 16px;",
                                                                            "border-radius: 2px;",
                                                                            "border: solid 1px;",
                                                                            "position: relative;",
                                                                            "align-self: center;",
                                                                            "&:before {",
                                                                            "content: '';",
                                                                            "display: none;",
                                                                            "position: relative;",
                                                                            "left: 4px;",
                                                                            "width: 3px;",
                                                                            "height: 9px;",
                                                                            "border: solid #ffffff;",
                                                                            "border-width: 0 3px 3px 0;",
                                                                            "border-radius: 1px;",
                                                                            "transform: rotate(45deg);",
                                                                            "}",
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__VisualCheckbox",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                        "target": "div",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <div
                                                                      checked={false}
                                                                      className="Checkbox__VisualCheckbox-sc-1nm58f1-0 klUiEr"
                                                                      disabled={false}
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__VisualCheckbox>
                                                              </label>
                                                            </StyledComponent>
                                                          </ClickInputLabel>
                                                        </div>
                                                      </StyledComponent>
                                                    </Box>
                                                  </BaseCheckbox>
                                                </StyledComponent>
                                              </Styled(BaseCheckbox)>
                                            </SelectCell>
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "expanded",
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="expanded"
                                      row={
                                        Object {
                                          "actualQuantity": "1,425 eaches",
                                          "date": "2019-10-03",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r4",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <ExpandCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "expanded",
                                                  "width": "30px",
                                                }
                                              }
                                              onRowExpansionChange={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "1,425 eaches",
                                                  "date": "2019-10-03",
                                                  "expanded": false,
                                                  "expectedQuantity": "2,475 eaches",
                                                  "id": "r4",
                                                  "selected": false,
                                                }
                                              }
                                            />
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2019-10-03"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "date",
                                          "label": "Date",
                                          "width": "15%",
                                        }
                                      }
                                      compact={false}
                                      key="date"
                                      row={
                                        Object {
                                          "actualQuantity": "1,425 eaches",
                                          "date": "2019-10-03",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r4",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            Thu, 03 Oct 2019
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2,475 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "expectedQuantity",
                                          "label": "Expected Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="expectedQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "1,425 eaches",
                                          "date": "2019-10-03",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r4",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            2,475 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="1,425 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actualQuantity",
                                          "label": "Actual Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="actualQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "1,425 eaches",
                                          "date": "2019-10-03",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r4",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            1,425 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "note",
                                          "label": "Note",
                                          "width": "45%",
                                        }
                                      }
                                      compact={false}
                                      key="note"
                                      row={
                                        Object {
                                          "actualQuantity": "1,425 eaches",
                                          "date": "2019-10-03",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r4",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellRenderer": [Function],
                                          "dataKey": "actions",
                                          "label": "",
                                          "width": "5%",
                                        }
                                      }
                                      compact={false}
                                      key="actions"
                                      row={
                                        Object {
                                          "actualQuantity": "1,425 eaches",
                                          "date": "2019-10-03",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r4",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <td
                                        colSpan={null}
                                      >
                                        <Box
                                          pr="x3"
                                          textAlign="right"
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "_foldedDefaultProps": Object {
                                                  "theme": Object {
                                                    "borders": Array [],
                                                    "breakpoints": Object {
                                                      "extraLarge": "1920px",
                                                      "extraSmall": "0px",
                                                      "large": "1360px",
                                                      "medium": "1024px",
                                                      "small": "768px",
                                                    },
                                                    "colors": Object {
                                                      "black": "#011e38",
                                                      "blackBlue": "#122b47",
                                                      "blue": "#216beb",
                                                      "darkBlue": "#00438f",
                                                      "darkGrey": "#434d59",
                                                      "green": "#008059",
                                                      "grey": "#c0c8d1",
                                                      "lightBlue": "#e1ebfa",
                                                      "lightGreen": "#e9f7f2",
                                                      "lightGrey": "#e4e7eb",
                                                      "lightRed": "#fae6ea",
                                                      "lightYellow": "#fcf5e3",
                                                      "red": "#cc1439",
                                                      "white": "#ffffff",
                                                      "whiteGrey": "#f0f2f5",
                                                      "yellow": "#ffbb00",
                                                    },
                                                    "fontSizes": Object {
                                                      "large": "20px",
                                                      "larger": "26px",
                                                      "largest": "46px",
                                                      "medium": "16px",
                                                      "small": "14px",
                                                      "smaller": "12px",
                                                    },
                                                    "fontWeights": Object {
                                                      "bold": "600",
                                                      "light": "300",
                                                      "medium": "500",
                                                      "normal": "400",
                                                    },
                                                    "fonts": Object {
                                                      "base": "'IBM Plex Sans', sans-serif",
                                                      "mono": "'IBM Plex Mono', monospace",
                                                    },
                                                    "lineHeights": Object {
                                                      "base": "1.5",
                                                      "sectionTitle": "1.23076923",
                                                      "smallTextBase": "1.71428571",
                                                      "smallTextCompressed": "1.14285714",
                                                      "smallerText": "1.33333333",
                                                      "subsectionTitle": "1.2",
                                                      "title": "1.04347826",
                                                    },
                                                    "radii": Object {
                                                      "circle": "50%",
                                                      "medium": "4px",
                                                      "small": "2px",
                                                    },
                                                    "shadows": Object {
                                                      "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                      "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                      "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                      "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                      "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                    },
                                                    "space": Object {
                                                      "half": "4px",
                                                      "none": "0px",
                                                      "x1": "8px",
                                                      "x2": "16px",
                                                      "x3": "24px",
                                                      "x4": "32px",
                                                      "x5": "40px",
                                                      "x6": "48px",
                                                      "x8": "64px",
                                                    },
                                                    "zIndex": Object {
                                                      "content": 100,
                                                      "overlay": 1000,
                                                      "tabsBar": 210,
                                                      "tabsScollIndicator": 200,
                                                    },
                                                  },
                                                },
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Box-sc-1qu1edy-0",
                                                  "isStatic": false,
                                                  "lastClassName": "fLXjLd",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "Box",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "bg": [Function],
                                                  "border": [Function],
                                                  "borderBottom": [Function],
                                                  "borderLeft": [Function],
                                                  "borderRadius": [Function],
                                                  "borderRight": [Function],
                                                  "borderTop": [Function],
                                                  "boxShadow": [Function],
                                                  "color": [Function],
                                                  "display": [Function],
                                                  "flexGrow": [Function],
                                                  "height": [Function],
                                                  "m": [Function],
                                                  "maxHeight": [Function],
                                                  "maxWidth": [Function],
                                                  "mb": [Function],
                                                  "minHeight": [Function],
                                                  "minWidth": [Function],
                                                  "ml": [Function],
                                                  "mr": [Function],
                                                  "mt": [Function],
                                                  "mx": [Function],
                                                  "my": [Function],
                                                  "order": [Function],
                                                  "p": [Function],
                                                  "pb": [Function],
                                                  "pl": [Function],
                                                  "position": [Function],
                                                  "pr": [Function],
                                                  "pt": [Function],
                                                  "px": [Function],
                                                  "py": [Function],
                                                  "textAlign": [Function],
                                                  "width": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "Box-sc-1qu1edy-0",
                                                "target": "div",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            pr="x3"
                                            textAlign="right"
                                            theme={
                                              Object {
                                                "borders": Array [],
                                                "breakpoints": Object {
                                                  "extraLarge": "1920px",
                                                  "extraSmall": "0px",
                                                  "large": "1360px",
                                                  "medium": "1024px",
                                                  "small": "768px",
                                                },
                                                "colors": Object {
                                                  "black": "#011e38",
                                                  "blackBlue": "#122b47",
                                                  "blue": "#216beb",
                                                  "darkBlue": "#00438f",
                                                  "darkGrey": "#434d59",
                                                  "green": "#008059",
                                                  "grey": "#c0c8d1",
                                                  "lightBlue": "#e1ebfa",
                                                  "lightGreen": "#e9f7f2",
                                                  "lightGrey": "#e4e7eb",
                                                  "lightRed": "#fae6ea",
                                                  "lightYellow": "#fcf5e3",
                                                  "red": "#cc1439",
                                                  "white": "#ffffff",
                                                  "whiteGrey": "#f0f2f5",
                                                  "yellow": "#ffbb00",
                                                },
                                                "fontSizes": Object {
                                                  "large": "20px",
                                                  "larger": "26px",
                                                  "largest": "46px",
                                                  "medium": "16px",
                                                  "small": "14px",
                                                  "smaller": "12px",
                                                },
                                                "fontWeights": Object {
                                                  "bold": "600",
                                                  "light": "300",
                                                  "medium": "500",
                                                  "normal": "400",
                                                },
                                                "fonts": Object {
                                                  "base": "'IBM Plex Sans', sans-serif",
                                                  "mono": "'IBM Plex Mono', monospace",
                                                },
                                                "lineHeights": Object {
                                                  "base": "1.5",
                                                  "sectionTitle": "1.23076923",
                                                  "smallTextBase": "1.71428571",
                                                  "smallTextCompressed": "1.14285714",
                                                  "smallerText": "1.33333333",
                                                  "subsectionTitle": "1.2",
                                                  "title": "1.04347826",
                                                },
                                                "radii": Object {
                                                  "circle": "50%",
                                                  "medium": "4px",
                                                  "small": "2px",
                                                },
                                                "shadows": Object {
                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                },
                                                "space": Object {
                                                  "half": "4px",
                                                  "none": "0px",
                                                  "x1": "8px",
                                                  "x2": "16px",
                                                  "x3": "24px",
                                                  "x4": "32px",
                                                  "x5": "40px",
                                                  "x6": "48px",
                                                  "x8": "64px",
                                                },
                                                "zIndex": Object {
                                                  "content": 100,
                                                  "overlay": 1000,
                                                  "tabsBar": 210,
                                                  "tabsScollIndicator": 200,
                                                },
                                              }
                                            }
                                          >
                                            <div
                                              className="Box-sc-1qu1edy-0 fLXjLd"
                                            >
                                              <MenuComponent
                                                defaultOpen={false}
                                                hideDelay="200"
                                                showDelay="100"
                                              >
                                                <MenuState
                                                  defaultOpen={false}
                                                  hideDelay="200"
                                                  showDelay="100"
                                                >
                                                  <StatelessDropdownMenu
                                                    disabled={false}
                                                    menuState={
                                                      Object {
                                                        "closeMenu": [Function],
                                                        "handleMenuKeydown": [Function],
                                                        "isOpen": false,
                                                        "openMenu": [Function],
                                                        "toggleMenu": [Function],
                                                      }
                                                    }
                                                    modifiers={
                                                      Object {
                                                        "preventOverflow": Object {
                                                          "boundariesElement": "viewport",
                                                          "enabled": true,
                                                          "padding": 8,
                                                        },
                                                      }
                                                    }
                                                    placement="bottom-start"
                                                    showArrow={true}
                                                    trigger={[Function]}
                                                  >
                                                    <Manager>
                                                      <Reference>
                                                        <InnerReference
                                                          setReferenceNode={[Function]}
                                                        >
                                                          <Styled(Component)
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Open menu"
                                                            disabled={null}
                                                            icon="more"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <StyledComponent
                                                              aria-expanded={false}
                                                              aria-haspopup={true}
                                                              aria-label="Open menu"
                                                              disabled={null}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "sc-gZMcBi",
                                                                    "isStatic": false,
                                                                    "lastClassName": "giNnHm",
                                                                    "rules": Array [],
                                                                  },
                                                                  "displayName": "Styled(Component)",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "sc-gZMcBi",
                                                                  "target": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "defaultProps": Object {
                                                                      "children": null,
                                                                      "className": undefined,
                                                                      "disabled": false,
                                                                      "labelHidden": false,
                                                                    },
                                                                    "propTypes": Object {
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "disabled": [Function],
                                                                      "icon": [Function],
                                                                      "labelHidden": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  },
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={[Function]}
                                                              icon="more"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <ForwardRef
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                aria-label="Open menu"
                                                                className="sc-gZMcBi giNnHm"
                                                                disabled={null}
                                                                icon="more"
                                                                labelHidden={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <IconicButton__WrapperButton
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Open menu"
                                                                  className="sc-gZMcBi giNnHm"
                                                                  disabled={null}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <StyledComponent
                                                                    aria-expanded={false}
                                                                    aria-haspopup={true}
                                                                    aria-label="Open menu"
                                                                    className="sc-gZMcBi giNnHm"
                                                                    disabled={null}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "dmBfBQ",
                                                                          "rules": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "IconicButton__WrapperButton",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                        "target": "button",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      aria-expanded={false}
                                                                      aria-haspopup={true}
                                                                      aria-label="Open menu"
                                                                      className="IconicButton__WrapperButton-sc-1u3dojp-1 dmBfBQ sc-gZMcBi giNnHm"
                                                                      disabled={null}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <Manager>
                                                                        <Reference>
                                                                          <InnerReference
                                                                            setReferenceNode={[Function]}
                                                                          >
                                                                            <Styled(Component)
                                                                              color="currentColor"
                                                                              icon="more"
                                                                              p="half"
                                                                              size="32px"
                                                                              title={null}
                                                                            >
                                                                              <StyledComponent
                                                                                color="currentColor"
                                                                                forwardedComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "_foldedDefaultProps": Object {
                                                                                      "color": "currentColor",
                                                                                      "size": "24px",
                                                                                      "title": null,
                                                                                    },
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "sc-bwzfXH",
                                                                                      "isStatic": false,
                                                                                      "lastClassName": "bbrsYH",
                                                                                      "rules": Array [
                                                                                        [Function],
                                                                                        [Function],
                                                                                        [Function],
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "Styled(Component)",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "propTypes": Object {
                                                                                      "color": [Function],
                                                                                      "icon": [Function],
                                                                                      "size": [Function],
                                                                                      "title": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "sc-bwzfXH",
                                                                                    "target": Object {
                                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                                      "defaultProps": Object {
                                                                                        "className": undefined,
                                                                                        "color": "currentColor",
                                                                                        "focusable": false,
                                                                                        "size": "24px",
                                                                                        "title": null,
                                                                                      },
                                                                                      "propTypes": Object {
                                                                                        "className": [Function],
                                                                                        "color": [Function],
                                                                                        "focusable": [Function],
                                                                                        "icon": [Function],
                                                                                        "size": [Function],
                                                                                        "title": [Function],
                                                                                      },
                                                                                      "render": [Function],
                                                                                    },
                                                                                    "toString": [Function],
                                                                                    "usesTheme": false,
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                                forwardedRef={[Function]}
                                                                                icon="more"
                                                                                p="half"
                                                                                size="32px"
                                                                                title={null}
                                                                              >
                                                                                <ForwardRef
                                                                                  className="sc-bwzfXH bbrsYH"
                                                                                  color="currentColor"
                                                                                  focusable={false}
                                                                                  icon="more"
                                                                                  p="half"
                                                                                  size="32px"
                                                                                  title={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="sc-bwzfXH bbrsYH"
                                                                                    color="currentColor"
                                                                                    fill="currentColor"
                                                                                    focusable={false}
                                                                                    height="32px"
                                                                                    icon="more"
                                                                                    p="half"
                                                                                    size="32px"
                                                                                    title={null}
                                                                                    viewBox="0 0 24 24"
                                                                                    width="32px"
                                                                                  >
                                                                                    <path
                                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                      key="0"
                                                                                    />
                                                                                  </svg>
                                                                                </ForwardRef>
                                                                              </StyledComponent>
                                                                            </Styled(Component)>
                                                                          </InnerReference>
                                                                        </Reference>
                                                                        <Popper
                                                                          modifiers={
                                                                            Object {
                                                                              "preventOverflow": Object {
                                                                                "boundariesElement": "viewport",
                                                                                "enabled": true,
                                                                                "padding": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                          placement="bottom"
                                                                        >
                                                                          <InnerPopper
                                                                            eventsEnabled={true}
                                                                            modifiers={
                                                                              Object {
                                                                                "preventOverflow": Object {
                                                                                  "boundariesElement": "viewport",
                                                                                  "enabled": true,
                                                                                  "padding": 8,
                                                                                },
                                                                              }
                                                                            }
                                                                            placement="bottom"
                                                                            positionFixed={false}
                                                                            referenceElement={
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                class="sc-bwzfXH bbrsYH"
                                                                                color="currentColor"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="32px"
                                                                                icon="more"
                                                                                p="half"
                                                                                viewBox="0 0 24 24"
                                                                                width="32px"
                                                                              >
                                                                                <path
                                                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                />
                                                                              </svg>
                                                                            }
                                                                          />
                                                                        </Popper>
                                                                      </Manager>
                                                                    </button>
                                                                  </StyledComponent>
                                                                </IconicButton__WrapperButton>
                                                              </ForwardRef>
                                                            </StyledComponent>
                                                          </Styled(Component)>
                                                        </InnerReference>
                                                      </Reference>
                                                    </Manager>
                                                  </StatelessDropdownMenu>
                                                </MenuState>
                                              </MenuComponent>
                                            </div>
                                          </StyledComponent>
                                        </Box>
                                      </td>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableBody__StyledTr>
                            </TableBodyRow>
                            <TableBodyRow
                              columns={
                                Array [
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "selected",
                                    "headerFormatter": [Function],
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "expanded",
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "date",
                                    "label": "Date",
                                    "width": "15%",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "note",
                                    "label": "Note",
                                    "width": "45%",
                                  },
                                  Object {
                                    "cellRenderer": [Function],
                                    "dataKey": "actions",
                                    "label": "",
                                    "width": "5%",
                                  },
                                ]
                              }
                              compact={false}
                              key="r5"
                              keyField="id"
                              row={
                                Object {
                                  "actualQuantity": "675 eaches",
                                  "date": "2019-10-04",
                                  "expanded": false,
                                  "expectedQuantity": "2,475 eaches",
                                  "id": "r5",
                                  "note": "1c Other Plant-related issue, equipment issues",
                                  "selected": false,
                                }
                              }
                              rowHovers={true}
                            >
                              <TableBody__StyledTr
                                rowHovers={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                        "isStatic": false,
                                        "lastClassName": "gvDwxX",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "TableBody__StyledTr",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  rowHovers={true}
                                >
                                  <tr
                                    className="TableBody__StyledTr-sc-1amzhx8-0 gvDwxX"
                                  >
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "selected",
                                          "headerFormatter": [Function],
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="selected"
                                      row={
                                        Object {
                                          "actualQuantity": "675 eaches",
                                          "date": "2019-10-04",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r5",
                                          "note": "1c Other Plant-related issue, equipment issues",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <SelectCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "selected",
                                                  "headerFormatter": [Function],
                                                  "width": "30px",
                                                }
                                              }
                                              onSelectRow={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "675 eaches",
                                                  "date": "2019-10-04",
                                                  "expanded": false,
                                                  "expectedQuantity": "2,475 eaches",
                                                  "id": "r5",
                                                  "note": "1c Other Plant-related issue, equipment issues",
                                                  "selected": false,
                                                }
                                              }
                                            >
                                              <Styled(BaseCheckbox)
                                                aria-label="toggle row selection"
                                                checked={false}
                                                onChange={[Function]}
                                              >
                                                <StyledComponent
                                                  aria-label="toggle row selection"
                                                  checked={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iAyFgw",
                                                        "isStatic": false,
                                                        "lastClassName": "kDTxQF",
                                                        "rules": Array [
                                                          "padding: 4px 0;",
                                                          "& .sc-bxivhb {",
                                                          "margin-left: 8px;",
                                                          "}",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(BaseCheckbox)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iAyFgw",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "usesTheme": false,
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  onChange={[Function]}
                                                >
                                                  <BaseCheckbox
                                                    aria-label="toggle row selection"
                                                    checked={false}
                                                    className="sc-iAyFgw kDTxQF"
                                                    disabled={false}
                                                    error={false}
                                                    id={null}
                                                    onChange={[Function]}
                                                    required={false}
                                                  >
                                                    <Box
                                                      className="sc-iAyFgw kDTxQF"
                                                      theme={
                                                        Object {
                                                          "borders": Array [],
                                                          "breakpoints": Object {
                                                            "extraLarge": "1920px",
                                                            "extraSmall": "0px",
                                                            "large": "1360px",
                                                            "medium": "1024px",
                                                            "small": "768px",
                                                          },
                                                          "colors": Object {
                                                            "black": "#011e38",
                                                            "blackBlue": "#122b47",
                                                            "blue": "#216beb",
                                                            "darkBlue": "#00438f",
                                                            "darkGrey": "#434d59",
                                                            "green": "#008059",
                                                            "grey": "#c0c8d1",
                                                            "lightBlue": "#e1ebfa",
                                                            "lightGreen": "#e9f7f2",
                                                            "lightGrey": "#e4e7eb",
                                                            "lightRed": "#fae6ea",
                                                            "lightYellow": "#fcf5e3",
                                                            "red": "#cc1439",
                                                            "white": "#ffffff",
                                                            "whiteGrey": "#f0f2f5",
                                                            "yellow": "#ffbb00",
                                                          },
                                                          "fontSizes": Object {
                                                            "large": "20px",
                                                            "larger": "26px",
                                                            "largest": "46px",
                                                            "medium": "16px",
                                                            "small": "14px",
                                                            "smaller": "12px",
                                                          },
                                                          "fontWeights": Object {
                                                            "bold": "600",
                                                            "light": "300",
                                                            "medium": "500",
                                                            "normal": "400",
                                                          },
                                                          "fonts": Object {
                                                            "base": "'IBM Plex Sans', sans-serif",
                                                            "mono": "'IBM Plex Mono', monospace",
                                                          },
                                                          "lineHeights": Object {
                                                            "base": "1.5",
                                                            "sectionTitle": "1.23076923",
                                                            "smallTextBase": "1.71428571",
                                                            "smallTextCompressed": "1.14285714",
                                                            "smallerText": "1.33333333",
                                                            "subsectionTitle": "1.2",
                                                            "title": "1.04347826",
                                                          },
                                                          "radii": Object {
                                                            "circle": "50%",
                                                            "medium": "4px",
                                                            "small": "2px",
                                                          },
                                                          "shadows": Object {
                                                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                          },
                                                          "space": Object {
                                                            "half": "4px",
                                                            "none": "0px",
                                                            "x1": "8px",
                                                            "x2": "16px",
                                                            "x3": "24px",
                                                            "x4": "32px",
                                                            "x5": "40px",
                                                            "x6": "48px",
                                                            "x8": "64px",
                                                          },
                                                          "zIndex": Object {
                                                            "content": 100,
                                                            "overlay": 1000,
                                                            "tabsBar": 210,
                                                            "tabsScollIndicator": 200,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <StyledComponent
                                                        className="sc-iAyFgw kDTxQF"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "_foldedDefaultProps": Object {
                                                              "theme": Object {
                                                                "borders": Array [],
                                                                "breakpoints": Object {
                                                                  "extraLarge": "1920px",
                                                                  "extraSmall": "0px",
                                                                  "large": "1360px",
                                                                  "medium": "1024px",
                                                                  "small": "768px",
                                                                },
                                                                "colors": Object {
                                                                  "black": "#011e38",
                                                                  "blackBlue": "#122b47",
                                                                  "blue": "#216beb",
                                                                  "darkBlue": "#00438f",
                                                                  "darkGrey": "#434d59",
                                                                  "green": "#008059",
                                                                  "grey": "#c0c8d1",
                                                                  "lightBlue": "#e1ebfa",
                                                                  "lightGreen": "#e9f7f2",
                                                                  "lightGrey": "#e4e7eb",
                                                                  "lightRed": "#fae6ea",
                                                                  "lightYellow": "#fcf5e3",
                                                                  "red": "#cc1439",
                                                                  "white": "#ffffff",
                                                                  "whiteGrey": "#f0f2f5",
                                                                  "yellow": "#ffbb00",
                                                                },
                                                                "fontSizes": Object {
                                                                  "large": "20px",
                                                                  "larger": "26px",
                                                                  "largest": "46px",
                                                                  "medium": "16px",
                                                                  "small": "14px",
                                                                  "smaller": "12px",
                                                                },
                                                                "fontWeights": Object {
                                                                  "bold": "600",
                                                                  "light": "300",
                                                                  "medium": "500",
                                                                  "normal": "400",
                                                                },
                                                                "fonts": Object {
                                                                  "base": "'IBM Plex Sans', sans-serif",
                                                                  "mono": "'IBM Plex Mono', monospace",
                                                                },
                                                                "lineHeights": Object {
                                                                  "base": "1.5",
                                                                  "sectionTitle": "1.23076923",
                                                                  "smallTextBase": "1.71428571",
                                                                  "smallTextCompressed": "1.14285714",
                                                                  "smallerText": "1.33333333",
                                                                  "subsectionTitle": "1.2",
                                                                  "title": "1.04347826",
                                                                },
                                                                "radii": Object {
                                                                  "circle": "50%",
                                                                  "medium": "4px",
                                                                  "small": "2px",
                                                                },
                                                                "shadows": Object {
                                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                                },
                                                                "space": Object {
                                                                  "half": "4px",
                                                                  "none": "0px",
                                                                  "x1": "8px",
                                                                  "x2": "16px",
                                                                  "x3": "24px",
                                                                  "x4": "32px",
                                                                  "x5": "40px",
                                                                  "x6": "48px",
                                                                  "x8": "64px",
                                                                },
                                                                "zIndex": Object {
                                                                  "content": 100,
                                                                  "overlay": 1000,
                                                                  "tabsBar": 210,
                                                                  "tabsScollIndicator": 200,
                                                                },
                                                              },
                                                            },
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "Box-sc-1qu1edy-0",
                                                              "isStatic": false,
                                                              "lastClassName": "fLXjLd",
                                                              "rules": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "Box",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": Object {
                                                              "bg": [Function],
                                                              "border": [Function],
                                                              "borderBottom": [Function],
                                                              "borderLeft": [Function],
                                                              "borderRadius": [Function],
                                                              "borderRight": [Function],
                                                              "borderTop": [Function],
                                                              "boxShadow": [Function],
                                                              "color": [Function],
                                                              "display": [Function],
                                                              "flexGrow": [Function],
                                                              "height": [Function],
                                                              "m": [Function],
                                                              "maxHeight": [Function],
                                                              "maxWidth": [Function],
                                                              "mb": [Function],
                                                              "minHeight": [Function],
                                                              "minWidth": [Function],
                                                              "ml": [Function],
                                                              "mr": [Function],
                                                              "mt": [Function],
                                                              "mx": [Function],
                                                              "my": [Function],
                                                              "order": [Function],
                                                              "p": [Function],
                                                              "pb": [Function],
                                                              "pl": [Function],
                                                              "position": [Function],
                                                              "pr": [Function],
                                                              "pt": [Function],
                                                              "px": [Function],
                                                              "py": [Function],
                                                              "textAlign": [Function],
                                                              "width": [Function],
                                                            },
                                                            "render": [Function],
                                                            "styledComponentId": "Box-sc-1qu1edy-0",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        theme={
                                                          Object {
                                                            "borders": Array [],
                                                            "breakpoints": Object {
                                                              "extraLarge": "1920px",
                                                              "extraSmall": "0px",
                                                              "large": "1360px",
                                                              "medium": "1024px",
                                                              "small": "768px",
                                                            },
                                                            "colors": Object {
                                                              "black": "#011e38",
                                                              "blackBlue": "#122b47",
                                                              "blue": "#216beb",
                                                              "darkBlue": "#00438f",
                                                              "darkGrey": "#434d59",
                                                              "green": "#008059",
                                                              "grey": "#c0c8d1",
                                                              "lightBlue": "#e1ebfa",
                                                              "lightGreen": "#e9f7f2",
                                                              "lightGrey": "#e4e7eb",
                                                              "lightRed": "#fae6ea",
                                                              "lightYellow": "#fcf5e3",
                                                              "red": "#cc1439",
                                                              "white": "#ffffff",
                                                              "whiteGrey": "#f0f2f5",
                                                              "yellow": "#ffbb00",
                                                            },
                                                            "fontSizes": Object {
                                                              "large": "20px",
                                                              "larger": "26px",
                                                              "largest": "46px",
                                                              "medium": "16px",
                                                              "small": "14px",
                                                              "smaller": "12px",
                                                            },
                                                            "fontWeights": Object {
                                                              "bold": "600",
                                                              "light": "300",
                                                              "medium": "500",
                                                              "normal": "400",
                                                            },
                                                            "fonts": Object {
                                                              "base": "'IBM Plex Sans', sans-serif",
                                                              "mono": "'IBM Plex Mono', monospace",
                                                            },
                                                            "lineHeights": Object {
                                                              "base": "1.5",
                                                              "sectionTitle": "1.23076923",
                                                              "smallTextBase": "1.71428571",
                                                              "smallTextCompressed": "1.14285714",
                                                              "smallerText": "1.33333333",
                                                              "subsectionTitle": "1.2",
                                                              "title": "1.04347826",
                                                            },
                                                            "radii": Object {
                                                              "circle": "50%",
                                                              "medium": "4px",
                                                              "small": "2px",
                                                            },
                                                            "shadows": Object {
                                                              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                            },
                                                            "space": Object {
                                                              "half": "4px",
                                                              "none": "0px",
                                                              "x1": "8px",
                                                              "x2": "16px",
                                                              "x3": "24px",
                                                              "x4": "32px",
                                                              "x5": "40px",
                                                              "x6": "48px",
                                                              "x8": "64px",
                                                            },
                                                            "zIndex": Object {
                                                              "content": 100,
                                                              "overlay": 1000,
                                                              "tabsBar": 210,
                                                              "tabsScollIndicator": 200,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="Box-sc-1qu1edy-0 dusExj sc-iAyFgw kDTxQF"
                                                        >
                                                          <ClickInputLabel
                                                            disabled={false}
                                                          >
                                                            <StyledComponent
                                                              disabled={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "ClickInputLabel-j2axnv-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "eoyTaS",
                                                                    "rules": Array [
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                  "displayName": "ClickInputLabel",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "ClickInputLabel-j2axnv-0",
                                                                  "target": "label",
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <label
                                                                className="ClickInputLabel-j2axnv-0 eoyTaS"
                                                                disabled={false}
                                                              >
                                                                <Checkbox__CheckboxInput
                                                                  aria-invalid={false}
                                                                  aria-label="toggle row selection"
                                                                  aria-required={false}
                                                                  checked={false}
                                                                  className="sc-iAyFgw kDTxQF"
                                                                  disabled={false}
                                                                  error={false}
                                                                  id={null}
                                                                  onChange={[Function]}
                                                                  required={false}
                                                                  type="checkbox"
                                                                >
                                                                  <StyledComponent
                                                                    aria-invalid={false}
                                                                    aria-label="toggle row selection"
                                                                    aria-required={false}
                                                                    checked={false}
                                                                    className="sc-iAyFgw kDTxQF"
                                                                    disabled={false}
                                                                    error={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "hawbaw",
                                                                          "rules": Array [
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__CheckboxInput",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__CheckboxInput-sc-1nm58f1-1",
                                                                        "target": "input",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                    id={null}
                                                                    onChange={[Function]}
                                                                    required={false}
                                                                    type="checkbox"
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      aria-label="toggle row selection"
                                                                      aria-required={false}
                                                                      checked={false}
                                                                      className="Checkbox__CheckboxInput-sc-1nm58f1-1 hawbaw sc-iAyFgw kDTxQF"
                                                                      disabled={false}
                                                                      id={null}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      type="checkbox"
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__CheckboxInput>
                                                                <Checkbox__VisualCheckbox
                                                                  checked={false}
                                                                  disabled={false}
                                                                >
                                                                  <StyledComponent
                                                                    checked={false}
                                                                    disabled={false}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                          "isStatic": false,
                                                                          "lastClassName": "klUiEr",
                                                                          "rules": Array [
                                                                            "min-width: 16px;",
                                                                            "height: 16px;",
                                                                            "border-radius: 2px;",
                                                                            "border: solid 1px;",
                                                                            "position: relative;",
                                                                            "align-self: center;",
                                                                            "&:before {",
                                                                            "content: '';",
                                                                            "display: none;",
                                                                            "position: relative;",
                                                                            "left: 4px;",
                                                                            "width: 3px;",
                                                                            "height: 9px;",
                                                                            "border: solid #ffffff;",
                                                                            "border-width: 0 3px 3px 0;",
                                                                            "border-radius: 1px;",
                                                                            "transform: rotate(45deg);",
                                                                            "}",
                                                                          ],
                                                                        },
                                                                        "displayName": "Checkbox__VisualCheckbox",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Checkbox__VisualCheckbox-sc-1nm58f1-0",
                                                                        "target": "div",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <div
                                                                      checked={false}
                                                                      className="Checkbox__VisualCheckbox-sc-1nm58f1-0 klUiEr"
                                                                      disabled={false}
                                                                    />
                                                                  </StyledComponent>
                                                                </Checkbox__VisualCheckbox>
                                                              </label>
                                                            </StyledComponent>
                                                          </ClickInputLabel>
                                                        </div>
                                                      </StyledComponent>
                                                    </Box>
                                                  </BaseCheckbox>
                                                </StyledComponent>
                                              </Styled(BaseCheckbox)>
                                            </SelectCell>
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData={false}
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "expanded",
                                          "width": "30px",
                                        }
                                      }
                                      compact={false}
                                      key="expanded"
                                      row={
                                        Object {
                                          "actualQuantity": "675 eaches",
                                          "date": "2019-10-04",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r5",
                                          "note": "1c Other Plant-related issue, equipment issues",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            <ExpandCell
                                              cellData={false}
                                              column={
                                                Object {
                                                  "cellFormatter": [Function],
                                                  "dataKey": "expanded",
                                                  "width": "30px",
                                                }
                                              }
                                              onRowExpansionChange={[Function]}
                                              row={
                                                Object {
                                                  "actualQuantity": "675 eaches",
                                                  "date": "2019-10-04",
                                                  "expanded": false,
                                                  "expectedQuantity": "2,475 eaches",
                                                  "id": "r5",
                                                  "note": "1c Other Plant-related issue, equipment issues",
                                                  "selected": false,
                                                }
                                              }
                                            />
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2019-10-04"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellFormatter": [Function],
                                          "dataKey": "date",
                                          "label": "Date",
                                          "width": "15%",
                                        }
                                      }
                                      compact={false}
                                      key="date"
                                      row={
                                        Object {
                                          "actualQuantity": "675 eaches",
                                          "date": "2019-10-04",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r5",
                                          "note": "1c Other Plant-related issue, equipment issues",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            Fri, 04 Oct 2019
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2,475 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "expectedQuantity",
                                          "label": "Expected Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="expectedQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "675 eaches",
                                          "date": "2019-10-04",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r5",
                                          "note": "1c Other Plant-related issue, equipment issues",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            2,475 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="675 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actualQuantity",
                                          "label": "Actual Quantity",
                                          "width": "20%",
                                        }
                                      }
                                      compact={false}
                                      key="actualQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "675 eaches",
                                          "date": "2019-10-04",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r5",
                                          "note": "1c Other Plant-related issue, equipment issues",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            675 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="1c Other Plant-related issue, equipment issues"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "note",
                                          "label": "Note",
                                          "width": "45%",
                                        }
                                      }
                                      compact={false}
                                      key="note"
                                      row={
                                        Object {
                                          "actualQuantity": "675 eaches",
                                          "date": "2019-10-04",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r5",
                                          "note": "1c Other Plant-related issue, equipment issues",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            1c Other Plant-related issue, equipment issues
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "cellRenderer": [Function],
                                          "dataKey": "actions",
                                          "label": "",
                                          "width": "5%",
                                        }
                                      }
                                      compact={false}
                                      key="actions"
                                      row={
                                        Object {
                                          "actualQuantity": "675 eaches",
                                          "date": "2019-10-04",
                                          "expanded": false,
                                          "expectedQuantity": "2,475 eaches",
                                          "id": "r5",
                                          "note": "1c Other Plant-related issue, equipment issues",
                                          "selected": false,
                                        }
                                      }
                                    >
                                      <td
                                        colSpan={null}
                                      >
                                        <Box
                                          pr="x3"
                                          textAlign="right"
                                          theme={
                                            Object {
                                              "borders": Array [],
                                              "breakpoints": Object {
                                                "extraLarge": "1920px",
                                                "extraSmall": "0px",
                                                "large": "1360px",
                                                "medium": "1024px",
                                                "small": "768px",
                                              },
                                              "colors": Object {
                                                "black": "#011e38",
                                                "blackBlue": "#122b47",
                                                "blue": "#216beb",
                                                "darkBlue": "#00438f",
                                                "darkGrey": "#434d59",
                                                "green": "#008059",
                                                "grey": "#c0c8d1",
                                                "lightBlue": "#e1ebfa",
                                                "lightGreen": "#e9f7f2",
                                                "lightGrey": "#e4e7eb",
                                                "lightRed": "#fae6ea",
                                                "lightYellow": "#fcf5e3",
                                                "red": "#cc1439",
                                                "white": "#ffffff",
                                                "whiteGrey": "#f0f2f5",
                                                "yellow": "#ffbb00",
                                              },
                                              "fontSizes": Object {
                                                "large": "20px",
                                                "larger": "26px",
                                                "largest": "46px",
                                                "medium": "16px",
                                                "small": "14px",
                                                "smaller": "12px",
                                              },
                                              "fontWeights": Object {
                                                "bold": "600",
                                                "light": "300",
                                                "medium": "500",
                                                "normal": "400",
                                              },
                                              "fonts": Object {
                                                "base": "'IBM Plex Sans', sans-serif",
                                                "mono": "'IBM Plex Mono', monospace",
                                              },
                                              "lineHeights": Object {
                                                "base": "1.5",
                                                "sectionTitle": "1.23076923",
                                                "smallTextBase": "1.71428571",
                                                "smallTextCompressed": "1.14285714",
                                                "smallerText": "1.33333333",
                                                "subsectionTitle": "1.2",
                                                "title": "1.04347826",
                                              },
                                              "radii": Object {
                                                "circle": "50%",
                                                "medium": "4px",
                                                "small": "2px",
                                              },
                                              "shadows": Object {
                                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                              },
                                              "space": Object {
                                                "half": "4px",
                                                "none": "0px",
                                                "x1": "8px",
                                                "x2": "16px",
                                                "x3": "24px",
                                                "x4": "32px",
                                                "x5": "40px",
                                                "x6": "48px",
                                                "x8": "64px",
                                              },
                                              "zIndex": Object {
                                                "content": 100,
                                                "overlay": 1000,
                                                "tabsBar": 210,
                                                "tabsScollIndicator": 200,
                                              },
                                            }
                                          }
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "_foldedDefaultProps": Object {
                                                  "theme": Object {
                                                    "borders": Array [],
                                                    "breakpoints": Object {
                                                      "extraLarge": "1920px",
                                                      "extraSmall": "0px",
                                                      "large": "1360px",
                                                      "medium": "1024px",
                                                      "small": "768px",
                                                    },
                                                    "colors": Object {
                                                      "black": "#011e38",
                                                      "blackBlue": "#122b47",
                                                      "blue": "#216beb",
                                                      "darkBlue": "#00438f",
                                                      "darkGrey": "#434d59",
                                                      "green": "#008059",
                                                      "grey": "#c0c8d1",
                                                      "lightBlue": "#e1ebfa",
                                                      "lightGreen": "#e9f7f2",
                                                      "lightGrey": "#e4e7eb",
                                                      "lightRed": "#fae6ea",
                                                      "lightYellow": "#fcf5e3",
                                                      "red": "#cc1439",
                                                      "white": "#ffffff",
                                                      "whiteGrey": "#f0f2f5",
                                                      "yellow": "#ffbb00",
                                                    },
                                                    "fontSizes": Object {
                                                      "large": "20px",
                                                      "larger": "26px",
                                                      "largest": "46px",
                                                      "medium": "16px",
                                                      "small": "14px",
                                                      "smaller": "12px",
                                                    },
                                                    "fontWeights": Object {
                                                      "bold": "600",
                                                      "light": "300",
                                                      "medium": "500",
                                                      "normal": "400",
                                                    },
                                                    "fonts": Object {
                                                      "base": "'IBM Plex Sans', sans-serif",
                                                      "mono": "'IBM Plex Mono', monospace",
                                                    },
                                                    "lineHeights": Object {
                                                      "base": "1.5",
                                                      "sectionTitle": "1.23076923",
                                                      "smallTextBase": "1.71428571",
                                                      "smallTextCompressed": "1.14285714",
                                                      "smallerText": "1.33333333",
                                                      "subsectionTitle": "1.2",
                                                      "title": "1.04347826",
                                                    },
                                                    "radii": Object {
                                                      "circle": "50%",
                                                      "medium": "4px",
                                                      "small": "2px",
                                                    },
                                                    "shadows": Object {
                                                      "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                      "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                      "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                      "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                      "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                    },
                                                    "space": Object {
                                                      "half": "4px",
                                                      "none": "0px",
                                                      "x1": "8px",
                                                      "x2": "16px",
                                                      "x3": "24px",
                                                      "x4": "32px",
                                                      "x5": "40px",
                                                      "x6": "48px",
                                                      "x8": "64px",
                                                    },
                                                    "zIndex": Object {
                                                      "content": 100,
                                                      "overlay": 1000,
                                                      "tabsBar": 210,
                                                      "tabsScollIndicator": 200,
                                                    },
                                                  },
                                                },
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Box-sc-1qu1edy-0",
                                                  "isStatic": false,
                                                  "lastClassName": "fLXjLd",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "Box",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "bg": [Function],
                                                  "border": [Function],
                                                  "borderBottom": [Function],
                                                  "borderLeft": [Function],
                                                  "borderRadius": [Function],
                                                  "borderRight": [Function],
                                                  "borderTop": [Function],
                                                  "boxShadow": [Function],
                                                  "color": [Function],
                                                  "display": [Function],
                                                  "flexGrow": [Function],
                                                  "height": [Function],
                                                  "m": [Function],
                                                  "maxHeight": [Function],
                                                  "maxWidth": [Function],
                                                  "mb": [Function],
                                                  "minHeight": [Function],
                                                  "minWidth": [Function],
                                                  "ml": [Function],
                                                  "mr": [Function],
                                                  "mt": [Function],
                                                  "mx": [Function],
                                                  "my": [Function],
                                                  "order": [Function],
                                                  "p": [Function],
                                                  "pb": [Function],
                                                  "pl": [Function],
                                                  "position": [Function],
                                                  "pr": [Function],
                                                  "pt": [Function],
                                                  "px": [Function],
                                                  "py": [Function],
                                                  "textAlign": [Function],
                                                  "width": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "Box-sc-1qu1edy-0",
                                                "target": "div",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            pr="x3"
                                            textAlign="right"
                                            theme={
                                              Object {
                                                "borders": Array [],
                                                "breakpoints": Object {
                                                  "extraLarge": "1920px",
                                                  "extraSmall": "0px",
                                                  "large": "1360px",
                                                  "medium": "1024px",
                                                  "small": "768px",
                                                },
                                                "colors": Object {
                                                  "black": "#011e38",
                                                  "blackBlue": "#122b47",
                                                  "blue": "#216beb",
                                                  "darkBlue": "#00438f",
                                                  "darkGrey": "#434d59",
                                                  "green": "#008059",
                                                  "grey": "#c0c8d1",
                                                  "lightBlue": "#e1ebfa",
                                                  "lightGreen": "#e9f7f2",
                                                  "lightGrey": "#e4e7eb",
                                                  "lightRed": "#fae6ea",
                                                  "lightYellow": "#fcf5e3",
                                                  "red": "#cc1439",
                                                  "white": "#ffffff",
                                                  "whiteGrey": "#f0f2f5",
                                                  "yellow": "#ffbb00",
                                                },
                                                "fontSizes": Object {
                                                  "large": "20px",
                                                  "larger": "26px",
                                                  "largest": "46px",
                                                  "medium": "16px",
                                                  "small": "14px",
                                                  "smaller": "12px",
                                                },
                                                "fontWeights": Object {
                                                  "bold": "600",
                                                  "light": "300",
                                                  "medium": "500",
                                                  "normal": "400",
                                                },
                                                "fonts": Object {
                                                  "base": "'IBM Plex Sans', sans-serif",
                                                  "mono": "'IBM Plex Mono', monospace",
                                                },
                                                "lineHeights": Object {
                                                  "base": "1.5",
                                                  "sectionTitle": "1.23076923",
                                                  "smallTextBase": "1.71428571",
                                                  "smallTextCompressed": "1.14285714",
                                                  "smallerText": "1.33333333",
                                                  "subsectionTitle": "1.2",
                                                  "title": "1.04347826",
                                                },
                                                "radii": Object {
                                                  "circle": "50%",
                                                  "medium": "4px",
                                                  "small": "2px",
                                                },
                                                "shadows": Object {
                                                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                                                },
                                                "space": Object {
                                                  "half": "4px",
                                                  "none": "0px",
                                                  "x1": "8px",
                                                  "x2": "16px",
                                                  "x3": "24px",
                                                  "x4": "32px",
                                                  "x5": "40px",
                                                  "x6": "48px",
                                                  "x8": "64px",
                                                },
                                                "zIndex": Object {
                                                  "content": 100,
                                                  "overlay": 1000,
                                                  "tabsBar": 210,
                                                  "tabsScollIndicator": 200,
                                                },
                                              }
                                            }
                                          >
                                            <div
                                              className="Box-sc-1qu1edy-0 fLXjLd"
                                            >
                                              <MenuComponent
                                                defaultOpen={false}
                                                hideDelay="200"
                                                showDelay="100"
                                              >
                                                <MenuState
                                                  defaultOpen={false}
                                                  hideDelay="200"
                                                  showDelay="100"
                                                >
                                                  <StatelessDropdownMenu
                                                    disabled={false}
                                                    menuState={
                                                      Object {
                                                        "closeMenu": [Function],
                                                        "handleMenuKeydown": [Function],
                                                        "isOpen": false,
                                                        "openMenu": [Function],
                                                        "toggleMenu": [Function],
                                                      }
                                                    }
                                                    modifiers={
                                                      Object {
                                                        "preventOverflow": Object {
                                                          "boundariesElement": "viewport",
                                                          "enabled": true,
                                                          "padding": 8,
                                                        },
                                                      }
                                                    }
                                                    placement="bottom-start"
                                                    showArrow={true}
                                                    trigger={[Function]}
                                                  >
                                                    <Manager>
                                                      <Reference>
                                                        <InnerReference
                                                          setReferenceNode={[Function]}
                                                        >
                                                          <Styled(Component)
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-label="Open menu"
                                                            disabled={null}
                                                            icon="more"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <StyledComponent
                                                              aria-expanded={false}
                                                              aria-haspopup={true}
                                                              aria-label="Open menu"
                                                              disabled={null}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "sc-gZMcBi",
                                                                    "isStatic": false,
                                                                    "lastClassName": "giNnHm",
                                                                    "rules": Array [],
                                                                  },
                                                                  "displayName": "Styled(Component)",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "sc-gZMcBi",
                                                                  "target": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "defaultProps": Object {
                                                                      "children": null,
                                                                      "className": undefined,
                                                                      "disabled": false,
                                                                      "labelHidden": false,
                                                                    },
                                                                    "propTypes": Object {
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "disabled": [Function],
                                                                      "icon": [Function],
                                                                      "labelHidden": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  },
                                                                  "toString": [Function],
                                                                  "usesTheme": false,
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={[Function]}
                                                              icon="more"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <ForwardRef
                                                                aria-expanded={false}
                                                                aria-haspopup={true}
                                                                aria-label="Open menu"
                                                                className="sc-gZMcBi giNnHm"
                                                                disabled={null}
                                                                icon="more"
                                                                labelHidden={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <IconicButton__WrapperButton
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Open menu"
                                                                  className="sc-gZMcBi giNnHm"
                                                                  disabled={null}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <StyledComponent
                                                                    aria-expanded={false}
                                                                    aria-haspopup={true}
                                                                    aria-label="Open menu"
                                                                    className="sc-gZMcBi giNnHm"
                                                                    disabled={null}
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                          "isStatic": false,
                                                                          "lastClassName": "dmBfBQ",
                                                                          "rules": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                        "displayName": "IconicButton__WrapperButton",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                                                                        "target": "button",
                                                                        "toString": [Function],
                                                                        "usesTheme": false,
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      aria-expanded={false}
                                                                      aria-haspopup={true}
                                                                      aria-label="Open menu"
                                                                      className="IconicButton__WrapperButton-sc-1u3dojp-1 dmBfBQ sc-gZMcBi giNnHm"
                                                                      disabled={null}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <Manager>
                                                                        <Reference>
                                                                          <InnerReference
                                                                            setReferenceNode={[Function]}
                                                                          >
                                                                            <Styled(Component)
                                                                              color="currentColor"
                                                                              icon="more"
                                                                              p="half"
                                                                              size="32px"
                                                                              title={null}
                                                                            >
                                                                              <StyledComponent
                                                                                color="currentColor"
                                                                                forwardedComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "_foldedDefaultProps": Object {
                                                                                      "color": "currentColor",
                                                                                      "size": "24px",
                                                                                      "title": null,
                                                                                    },
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "sc-bwzfXH",
                                                                                      "isStatic": false,
                                                                                      "lastClassName": "bbrsYH",
                                                                                      "rules": Array [
                                                                                        [Function],
                                                                                        [Function],
                                                                                        [Function],
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "Styled(Component)",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "propTypes": Object {
                                                                                      "color": [Function],
                                                                                      "icon": [Function],
                                                                                      "size": [Function],
                                                                                      "title": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "sc-bwzfXH",
                                                                                    "target": Object {
                                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                                      "defaultProps": Object {
                                                                                        "className": undefined,
                                                                                        "color": "currentColor",
                                                                                        "focusable": false,
                                                                                        "size": "24px",
                                                                                        "title": null,
                                                                                      },
                                                                                      "propTypes": Object {
                                                                                        "className": [Function],
                                                                                        "color": [Function],
                                                                                        "focusable": [Function],
                                                                                        "icon": [Function],
                                                                                        "size": [Function],
                                                                                        "title": [Function],
                                                                                      },
                                                                                      "render": [Function],
                                                                                    },
                                                                                    "toString": [Function],
                                                                                    "usesTheme": false,
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                                forwardedRef={[Function]}
                                                                                icon="more"
                                                                                p="half"
                                                                                size="32px"
                                                                                title={null}
                                                                              >
                                                                                <ForwardRef
                                                                                  className="sc-bwzfXH bbrsYH"
                                                                                  color="currentColor"
                                                                                  focusable={false}
                                                                                  icon="more"
                                                                                  p="half"
                                                                                  size="32px"
                                                                                  title={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="sc-bwzfXH bbrsYH"
                                                                                    color="currentColor"
                                                                                    fill="currentColor"
                                                                                    focusable={false}
                                                                                    height="32px"
                                                                                    icon="more"
                                                                                    p="half"
                                                                                    size="32px"
                                                                                    title={null}
                                                                                    viewBox="0 0 24 24"
                                                                                    width="32px"
                                                                                  >
                                                                                    <path
                                                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                      key="0"
                                                                                    />
                                                                                  </svg>
                                                                                </ForwardRef>
                                                                              </StyledComponent>
                                                                            </Styled(Component)>
                                                                          </InnerReference>
                                                                        </Reference>
                                                                        <Popper
                                                                          modifiers={
                                                                            Object {
                                                                              "preventOverflow": Object {
                                                                                "boundariesElement": "viewport",
                                                                                "enabled": true,
                                                                                "padding": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                          placement="bottom"
                                                                        >
                                                                          <InnerPopper
                                                                            eventsEnabled={true}
                                                                            modifiers={
                                                                              Object {
                                                                                "preventOverflow": Object {
                                                                                  "boundariesElement": "viewport",
                                                                                  "enabled": true,
                                                                                  "padding": 8,
                                                                                },
                                                                              }
                                                                            }
                                                                            placement="bottom"
                                                                            positionFixed={false}
                                                                            referenceElement={
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                class="sc-bwzfXH bbrsYH"
                                                                                color="currentColor"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="32px"
                                                                                icon="more"
                                                                                p="half"
                                                                                viewBox="0 0 24 24"
                                                                                width="32px"
                                                                              >
                                                                                <path
                                                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                                />
                                                                              </svg>
                                                                            }
                                                                          />
                                                                        </Popper>
                                                                      </Manager>
                                                                    </button>
                                                                  </StyledComponent>
                                                                </IconicButton__WrapperButton>
                                                              </ForwardRef>
                                                            </StyledComponent>
                                                          </Styled(Component)>
                                                        </InnerReference>
                                                      </Reference>
                                                    </Manager>
                                                  </StatelessDropdownMenu>
                                                </MenuState>
                                              </MenuComponent>
                                            </div>
                                          </StyledComponent>
                                        </Box>
                                      </td>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableBody__StyledTr>
                            </TableBodyRow>
                          </tbody>
                        </TableBody>
                        <TableFoot
                          columns={
                            Array [
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "selected",
                                "headerFormatter": [Function],
                                "width": "30px",
                              },
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "expanded",
                                "width": "30px",
                              },
                              Object {
                                "cellFormatter": [Function],
                                "dataKey": "date",
                                "label": "Date",
                                "width": "15%",
                              },
                              Object {
                                "dataKey": "expectedQuantity",
                                "label": "Expected Quantity",
                                "width": "20%",
                              },
                              Object {
                                "dataKey": "actualQuantity",
                                "label": "Actual Quantity",
                                "width": "20%",
                              },
                              Object {
                                "dataKey": "note",
                                "label": "Note",
                                "width": "45%",
                              },
                              Object {
                                "cellRenderer": [Function],
                                "dataKey": "actions",
                                "label": "",
                                "width": "5%",
                              },
                            ]
                          }
                          keyField="id"
                          loading={false}
                          rows={
                            Array [
                              Object {
                                "actualQuantity": "7,725 eaches",
                                "date": "Total",
                                "expectedQuantity": "18,000 eaches",
                                "id": "f1",
                              },
                              Object {
                                "actualQuantity": "41.5%",
                                "date": "Attainment",
                                "expectedQuantity": "",
                                "id": "f2",
                              },
                            ]
                          }
                        >
                          <tfoot>
                            <TableFooterRow
                              columns={
                                Array [
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "selected",
                                    "headerFormatter": [Function],
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "expanded",
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "date",
                                    "label": "Date",
                                    "width": "15%",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "note",
                                    "label": "Note",
                                    "width": "45%",
                                  },
                                  Object {
                                    "cellRenderer": [Function],
                                    "dataKey": "actions",
                                    "label": "",
                                    "width": "5%",
                                  },
                                ]
                              }
                              key="f1"
                              loading={false}
                              row={
                                Object {
                                  "actualQuantity": "7,725 eaches",
                                  "date": "Total",
                                  "expectedQuantity": "18,000 eaches",
                                  "id": "f1",
                                }
                              }
                            >
                              <TableFoot__StyledFooterRow>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableFoot__StyledFooterRow-sc-1q56pdo-0",
                                        "isStatic": false,
                                        "lastClassName": "cRdQWl",
                                        "rules": Array [
                                          "&:first-of-type {",
                                          "border-top: 1px solid #e4e7eb;",
                                          "}",
                                        ],
                                      },
                                      "displayName": "TableFoot__StyledFooterRow",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableFoot__StyledFooterRow-sc-1q56pdo-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <tr
                                    className="TableFoot__StyledFooterRow-sc-1q56pdo-0 cRdQWl"
                                  >
                                    <StyledTh
                                      colSpan={3}
                                      key="date"
                                      scope="row"
                                    >
                                      <StyledComponent
                                        colSpan={3}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "StyledTh-sc-10nzyk9-0",
                                              "isStatic": false,
                                              "lastClassName": "PAzBv",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "StyledTh",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                            "target": "th",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        scope="row"
                                      >
                                        <th
                                          className="StyledTh-sc-10nzyk9-0 PAzBv"
                                          colSpan={3}
                                          scope="row"
                                        >
                                          Total
                                        </th>
                                      </StyledComponent>
                                    </StyledTh>
                                    <TableCell
                                      cellData="18,000 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "expectedQuantity",
                                          "label": "Expected Quantity",
                                        }
                                      }
                                      compact={false}
                                      key="expectedQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "7,725 eaches",
                                          "date": "Total",
                                          "expectedQuantity": "18,000 eaches",
                                          "id": "f1",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            18,000 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="7,725 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actualQuantity",
                                          "label": "Actual Quantity",
                                        }
                                      }
                                      compact={false}
                                      key="actualQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "7,725 eaches",
                                          "date": "Total",
                                          "expectedQuantity": "18,000 eaches",
                                          "id": "f1",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            7,725 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "note",
                                          "label": "Note",
                                        }
                                      }
                                      compact={false}
                                      key="note"
                                      row={
                                        Object {
                                          "actualQuantity": "7,725 eaches",
                                          "date": "Total",
                                          "expectedQuantity": "18,000 eaches",
                                          "id": "f1",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actions",
                                          "label": "",
                                        }
                                      }
                                      compact={false}
                                      key="actions"
                                      row={
                                        Object {
                                          "actualQuantity": "7,725 eaches",
                                          "date": "Total",
                                          "expectedQuantity": "18,000 eaches",
                                          "id": "f1",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableFoot__StyledFooterRow>
                            </TableFooterRow>
                            <TableFooterRow
                              columns={
                                Array [
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "selected",
                                    "headerFormatter": [Function],
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "expanded",
                                    "width": "30px",
                                  },
                                  Object {
                                    "cellFormatter": [Function],
                                    "dataKey": "date",
                                    "label": "Date",
                                    "width": "15%",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                    "width": "20%",
                                  },
                                  Object {
                                    "dataKey": "note",
                                    "label": "Note",
                                    "width": "45%",
                                  },
                                  Object {
                                    "cellRenderer": [Function],
                                    "dataKey": "actions",
                                    "label": "",
                                    "width": "5%",
                                  },
                                ]
                              }
                              key="f2"
                              loading={false}
                              row={
                                Object {
                                  "actualQuantity": "41.5%",
                                  "date": "Attainment",
                                  "expectedQuantity": "",
                                  "id": "f2",
                                }
                              }
                            >
                              <TableFoot__StyledFooterRow>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableFoot__StyledFooterRow-sc-1q56pdo-0",
                                        "isStatic": false,
                                        "lastClassName": "cRdQWl",
                                        "rules": Array [
                                          "&:first-of-type {",
                                          "border-top: 1px solid #e4e7eb;",
                                          "}",
                                        ],
                                      },
                                      "displayName": "TableFoot__StyledFooterRow",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableFoot__StyledFooterRow-sc-1q56pdo-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <tr
                                    className="TableFoot__StyledFooterRow-sc-1q56pdo-0 cRdQWl"
                                  >
                                    <StyledTh
                                      colSpan={3}
                                      key="date"
                                      scope="row"
                                    >
                                      <StyledComponent
                                        colSpan={3}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "StyledTh-sc-10nzyk9-0",
                                              "isStatic": false,
                                              "lastClassName": "PAzBv",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "StyledTh",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                            "target": "th",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        scope="row"
                                      >
                                        <th
                                          className="StyledTh-sc-10nzyk9-0 PAzBv"
                                          colSpan={3}
                                          scope="row"
                                        >
                                          Attainment
                                        </th>
                                      </StyledComponent>
                                    </StyledTh>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "expectedQuantity",
                                          "label": "Expected Quantity",
                                        }
                                      }
                                      compact={false}
                                      key="expectedQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "41.5%",
                                          "date": "Attainment",
                                          "expectedQuantity": "",
                                          "id": "f2",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="41.5%"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actualQuantity",
                                          "label": "Actual Quantity",
                                        }
                                      }
                                      compact={false}
                                      key="actualQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "41.5%",
                                          "date": "Attainment",
                                          "expectedQuantity": "",
                                          "id": "f2",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            41.5%
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "note",
                                          "label": "Note",
                                        }
                                      }
                                      compact={false}
                                      key="note"
                                      row={
                                        Object {
                                          "actualQuantity": "41.5%",
                                          "date": "Attainment",
                                          "expectedQuantity": "",
                                          "id": "f2",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData=""
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actions",
                                          "label": "",
                                        }
                                      }
                                      compact={false}
                                      key="actions"
                                      row={
                                        Object {
                                          "actualQuantity": "41.5%",
                                          "date": "Attainment",
                                          "expectedQuantity": "",
                                          "id": "f2",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          />
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableFoot__StyledFooterRow>
                            </TableFooterRow>
                          </tfoot>
                        </TableFoot>
                      </table>
                    </StyledComponent>
                  </BaseTable__StyledTable>
                </BaseTable>
                <Pagination
                  currentPage={1}
                  justifyContent="flex-end"
                  onNext={[Function]}
                  onPrevious={[Function]}
                  onSelectPage={[Function]}
                  pt="x2"
                  totalPages={2}
                >
                  <Styled(Box)
                    aria-label="Pagination navigation"
                    as="nav"
                    justifyContent="flex-end"
                    pt="x2"
                    theme={
                      Object {
                        "borders": Array [],
                        "breakpoints": Object {
                          "extraLarge": "1920px",
                          "extraSmall": "0px",
                          "large": "1360px",
                          "medium": "1024px",
                          "small": "768px",
                        },
                        "colors": Object {
                          "black": "#011e38",
                          "blackBlue": "#122b47",
                          "blue": "#216beb",
                          "darkBlue": "#00438f",
                          "darkGrey": "#434d59",
                          "green": "#008059",
                          "grey": "#c0c8d1",
                          "lightBlue": "#e1ebfa",
                          "lightGreen": "#e9f7f2",
                          "lightGrey": "#e4e7eb",
                          "lightRed": "#fae6ea",
                          "lightYellow": "#fcf5e3",
                          "red": "#cc1439",
                          "white": "#ffffff",
                          "whiteGrey": "#f0f2f5",
                          "yellow": "#ffbb00",
                        },
                        "fontSizes": Object {
                          "large": "20px",
                          "larger": "26px",
                          "largest": "46px",
                          "medium": "16px",
                          "small": "14px",
                          "smaller": "12px",
                        },
                        "fontWeights": Object {
                          "bold": "600",
                          "light": "300",
                          "medium": "500",
                          "normal": "400",
                        },
                        "fonts": Object {
                          "base": "'IBM Plex Sans', sans-serif",
                          "mono": "'IBM Plex Mono', monospace",
                        },
                        "lineHeights": Object {
                          "base": "1.5",
                          "sectionTitle": "1.23076923",
                          "smallTextBase": "1.71428571",
                          "smallTextCompressed": "1.14285714",
                          "smallerText": "1.33333333",
                          "subsectionTitle": "1.2",
                          "title": "1.04347826",
                        },
                        "radii": Object {
                          "circle": "50%",
                          "medium": "4px",
                          "small": "2px",
                        },
                        "shadows": Object {
                          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                        },
                        "space": Object {
                          "half": "4px",
                          "none": "0px",
                          "x1": "8px",
                          "x2": "16px",
                          "x3": "24px",
                          "x4": "32px",
                          "x5": "40px",
                          "x6": "48px",
                          "x8": "64px",
                        },
                        "zIndex": Object {
                          "content": 100,
                          "overlay": 1000,
                          "tabsBar": 210,
                          "tabsScollIndicator": 200,
                        },
                      }
                    }
                  >
                    <StyledComponent
                      aria-label="Pagination navigation"
                      as="nav"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "_foldedDefaultProps": Object {
                            "theme": Object {
                              "borders": Array [],
                              "breakpoints": Object {
                                "extraLarge": "1920px",
                                "extraSmall": "0px",
                                "large": "1360px",
                                "medium": "1024px",
                                "small": "768px",
                              },
                              "colors": Object {
                                "black": "#011e38",
                                "blackBlue": "#122b47",
                                "blue": "#216beb",
                                "darkBlue": "#00438f",
                                "darkGrey": "#434d59",
                                "green": "#008059",
                                "grey": "#c0c8d1",
                                "lightBlue": "#e1ebfa",
                                "lightGreen": "#e9f7f2",
                                "lightGrey": "#e4e7eb",
                                "lightRed": "#fae6ea",
                                "lightYellow": "#fcf5e3",
                                "red": "#cc1439",
                                "white": "#ffffff",
                                "whiteGrey": "#f0f2f5",
                                "yellow": "#ffbb00",
                              },
                              "fontSizes": Object {
                                "large": "20px",
                                "larger": "26px",
                                "largest": "46px",
                                "medium": "16px",
                                "small": "14px",
                                "smaller": "12px",
                              },
                              "fontWeights": Object {
                                "bold": "600",
                                "light": "300",
                                "medium": "500",
                                "normal": "400",
                              },
                              "fonts": Object {
                                "base": "'IBM Plex Sans', sans-serif",
                                "mono": "'IBM Plex Mono', monospace",
                              },
                              "lineHeights": Object {
                                "base": "1.5",
                                "sectionTitle": "1.23076923",
                                "smallTextBase": "1.71428571",
                                "smallTextCompressed": "1.14285714",
                                "smallerText": "1.33333333",
                                "subsectionTitle": "1.2",
                                "title": "1.04347826",
                              },
                              "radii": Object {
                                "circle": "50%",
                                "medium": "4px",
                                "small": "2px",
                              },
                              "shadows": Object {
                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                              },
                              "space": Object {
                                "half": "4px",
                                "none": "0px",
                                "x1": "8px",
                                "x2": "16px",
                                "x3": "24px",
                                "x4": "32px",
                                "x5": "40px",
                                "x6": "48px",
                                "x8": "64px",
                              },
                              "zIndex": Object {
                                "content": 100,
                                "overlay": 1000,
                                "tabsBar": 210,
                                "tabsScollIndicator": 200,
                              },
                            },
                          },
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "cXJvnk",
                            "rules": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              "display: flex;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "Styled(Box)",
                          "foldedComponentIds": Array [
                            "Box-sc-1qu1edy-0",
                          ],
                          "propTypes": Object {
                            "alignItems": [Function],
                            "flexDirection": [Function],
                            "flexWrap": [Function],
                            "justifyContent": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      justifyContent="flex-end"
                      pt="x2"
                      theme={
                        Object {
                          "borders": Array [],
                          "breakpoints": Object {
                            "extraLarge": "1920px",
                            "extraSmall": "0px",
                            "large": "1360px",
                            "medium": "1024px",
                            "small": "768px",
                          },
                          "colors": Object {
                            "black": "#011e38",
                            "blackBlue": "#122b47",
                            "blue": "#216beb",
                            "darkBlue": "#00438f",
                            "darkGrey": "#434d59",
                            "green": "#008059",
                            "grey": "#c0c8d1",
                            "lightBlue": "#e1ebfa",
                            "lightGreen": "#e9f7f2",
                            "lightGrey": "#e4e7eb",
                            "lightRed": "#fae6ea",
                            "lightYellow": "#fcf5e3",
                            "red": "#cc1439",
                            "white": "#ffffff",
                            "whiteGrey": "#f0f2f5",
                            "yellow": "#ffbb00",
                          },
                          "fontSizes": Object {
                            "large": "20px",
                            "larger": "26px",
                            "largest": "46px",
                            "medium": "16px",
                            "small": "14px",
                            "smaller": "12px",
                          },
                          "fontWeights": Object {
                            "bold": "600",
                            "light": "300",
                            "medium": "500",
                            "normal": "400",
                          },
                          "fonts": Object {
                            "base": "'IBM Plex Sans', sans-serif",
                            "mono": "'IBM Plex Mono', monospace",
                          },
                          "lineHeights": Object {
                            "base": "1.5",
                            "sectionTitle": "1.23076923",
                            "smallTextBase": "1.71428571",
                            "smallTextCompressed": "1.14285714",
                            "smallerText": "1.33333333",
                            "subsectionTitle": "1.2",
                            "title": "1.04347826",
                          },
                          "radii": Object {
                            "circle": "50%",
                            "medium": "4px",
                            "small": "2px",
                          },
                          "shadows": Object {
                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                          },
                          "space": Object {
                            "half": "4px",
                            "none": "0px",
                            "x1": "8px",
                            "x2": "16px",
                            "x3": "24px",
                            "x4": "32px",
                            "x5": "40px",
                            "x6": "48px",
                            "x8": "64px",
                          },
                          "zIndex": Object {
                            "content": 100,
                            "overlay": 1000,
                            "tabsBar": 210,
                            "tabsScollIndicator": 200,
                          },
                        }
                      }
                    >
                      <nav
                        aria-label="Pagination navigation"
                        className="Box-sc-1qu1edy-0 sc-bdVaJa cXJvnk"
                      >
                        <PreviousButton
                          disabled={true}
                          onClick={[Function]}
                        >
                          <Pagination__PaginationButton
                            disabled={true}
                            onClick={[Function]}
                          >
                            <StyledComponent
                              disabled={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                    "isStatic": false,
                                    "lastClassName": "fJtBeN",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Pagination__PaginationButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "usesTheme": false,
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <button
                                className="Pagination__PaginationButton-sc-1fsx1pp-0 JztWY"
                                disabled={true}
                                onClick={[Function]}
                              >
                                <Styled(Component)
                                  color="currentColor"
                                  icon="leftArrow"
                                  ml="-8px"
                                  size="24px"
                                  title={null}
                                >
                                  <StyledComponent
                                    color="currentColor"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "_foldedDefaultProps": Object {
                                          "color": "currentColor",
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "bbrsYH",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Styled(Component)",
                                        "foldedComponentIds": Array [],
                                        "propTypes": Object {
                                          "color": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "defaultProps": Object {
                                            "className": undefined,
                                            "color": "currentColor",
                                            "focusable": false,
                                            "size": "24px",
                                            "title": null,
                                          },
                                          "propTypes": Object {
                                            "className": [Function],
                                            "color": [Function],
                                            "focusable": [Function],
                                            "icon": [Function],
                                            "size": [Function],
                                            "title": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    icon="leftArrow"
                                    ml="-8px"
                                    size="24px"
                                    title={null}
                                  >
                                    <ForwardRef
                                      className="sc-bwzfXH coUSKf"
                                      color="currentColor"
                                      focusable={false}
                                      icon="leftArrow"
                                      ml="-8px"
                                      size="24px"
                                      title={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="sc-bwzfXH coUSKf"
                                        color="currentColor"
                                        fill="currentColor"
                                        focusable={false}
                                        height="24px"
                                        icon="leftArrow"
                                        ml="-8px"
                                        size="24px"
                                        title={null}
                                        viewBox="0 0 24 24"
                                        width="24px"
                                      >
                                        <path
                                          d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                                          key="0"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledComponent>
                                </Styled(Component)>
                                 Previous
                              </button>
                            </StyledComponent>
                          </Pagination__PaginationButton>
                        </PreviousButton>
                        <Styled(Pagination__PaginationButton)
                          aria-current={true}
                          aria-label={null}
                          currentPage={true}
                          disabled={true}
                          key="1"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={true}
                            aria-label={null}
                            currentPage={true}
                            disabled={true}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={true}
                              aria-label={null}
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik kTEgcl"
                              disabled={true}
                              onClick={[Function]}
                            >
                              1
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <Styled(Pagination__PaginationButton)
                          aria-current={false}
                          aria-label="Go to page 2"
                          currentPage={false}
                          disabled={false}
                          key="2"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={false}
                            aria-label="Go to page 2"
                            currentPage={false}
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={false}
                              aria-label="Go to page 2"
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik khatUV"
                              disabled={false}
                              onClick={[Function]}
                            >
                              2
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <NextButton
                          disabled={false}
                          onClick={[Function]}
                        >
                          <Pagination__PaginationButton
                            disabled={false}
                            onClick={[Function]}
                          >
                            <StyledComponent
                              disabled={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                    "isStatic": false,
                                    "lastClassName": "fJtBeN",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Pagination__PaginationButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "usesTheme": false,
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <button
                                className="Pagination__PaginationButton-sc-1fsx1pp-0 fJtBeN"
                                disabled={false}
                                onClick={[Function]}
                              >
                                Next 
                                <Styled(Component)
                                  color="currentColor"
                                  icon="rightArrow"
                                  mr="-8px"
                                  size="24px"
                                  title={null}
                                >
                                  <StyledComponent
                                    color="currentColor"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "_foldedDefaultProps": Object {
                                          "color": "currentColor",
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "bbrsYH",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Styled(Component)",
                                        "foldedComponentIds": Array [],
                                        "propTypes": Object {
                                          "color": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "defaultProps": Object {
                                            "className": undefined,
                                            "color": "currentColor",
                                            "focusable": false,
                                            "size": "24px",
                                            "title": null,
                                          },
                                          "propTypes": Object {
                                            "className": [Function],
                                            "color": [Function],
                                            "focusable": [Function],
                                            "icon": [Function],
                                            "size": [Function],
                                            "title": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    icon="rightArrow"
                                    mr="-8px"
                                    size="24px"
                                    title={null}
                                  >
                                    <ForwardRef
                                      className="sc-bwzfXH btpLqV"
                                      color="currentColor"
                                      focusable={false}
                                      icon="rightArrow"
                                      mr="-8px"
                                      size="24px"
                                      title={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="sc-bwzfXH btpLqV"
                                        color="currentColor"
                                        fill="currentColor"
                                        focusable={false}
                                        height="24px"
                                        icon="rightArrow"
                                        mr="-8px"
                                        size="24px"
                                        title={null}
                                        viewBox="0 0 24 24"
                                        width="24px"
                                      >
                                        <path
                                          d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                          key="0"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledComponent>
                                </Styled(Component)>
                              </button>
                            </StyledComponent>
                          </Pagination__PaginationButton>
                        </NextButton>
                      </nav>
                    </StyledComponent>
                  </Styled(Box)>
                </Pagination>
              </StatefulTable>
            </Table>
          </ThemeProvider>
        </div>
      </StyledComponent>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots Table with pagination 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <GlobalStyleComponent />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NDSProvider__GlobalStyles-f28eoq-0",
              "isStatic": false,
              "lastClassName": "gWUgWA",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "NDSProvider__GlobalStyles",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NDSProvider__GlobalStyles-f28eoq-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        theme={
          Object {
            "borders": Array [],
            "breakpoints": Object {
              "extraLarge": "1920px",
              "extraSmall": "0px",
              "large": "1360px",
              "medium": "1024px",
              "small": "768px",
            },
            "colors": Object {
              "black": "#011e38",
              "blackBlue": "#122b47",
              "blue": "#216beb",
              "darkBlue": "#00438f",
              "darkGrey": "#434d59",
              "green": "#008059",
              "grey": "#c0c8d1",
              "lightBlue": "#e1ebfa",
              "lightGreen": "#e9f7f2",
              "lightGrey": "#e4e7eb",
              "lightRed": "#fae6ea",
              "lightYellow": "#fcf5e3",
              "red": "#cc1439",
              "white": "#ffffff",
              "whiteGrey": "#f0f2f5",
              "yellow": "#ffbb00",
            },
            "fontSizes": Object {
              "large": "20px",
              "larger": "26px",
              "largest": "46px",
              "medium": "16px",
              "small": "14px",
              "smaller": "12px",
            },
            "fontWeights": Object {
              "bold": "600",
              "light": "300",
              "medium": "500",
              "normal": "400",
            },
            "fonts": Object {
              "base": "'IBM Plex Sans', sans-serif",
              "mono": "'IBM Plex Mono', monospace",
            },
            "lineHeights": Object {
              "base": "1.5",
              "sectionTitle": "1.23076923",
              "smallTextBase": "1.71428571",
              "smallTextCompressed": "1.14285714",
              "smallerText": "1.33333333",
              "subsectionTitle": "1.2",
              "title": "1.04347826",
            },
            "radii": Object {
              "circle": "50%",
              "medium": "4px",
              "small": "2px",
            },
            "shadows": Object {
              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
            },
            "space": Object {
              "half": "4px",
              "none": "0px",
              "x1": "8px",
              "x2": "16px",
              "x3": "24px",
              "x4": "32px",
              "x5": "40px",
              "x6": "48px",
              "x8": "64px",
            },
            "zIndex": Object {
              "content": 100,
              "overlay": 1000,
              "tabsBar": 210,
              "tabsScollIndicator": 200,
            },
          }
        }
      >
        <div
          className="NDSProvider__GlobalStyles-f28eoq-0 gWUgWA"
        >
          <ThemeProvider
            theme={
              Object {
                "borders": Array [],
                "breakpoints": Object {
                  "extraLarge": "1920px",
                  "extraSmall": "0px",
                  "large": "1360px",
                  "medium": "1024px",
                  "small": "768px",
                },
                "colors": Object {
                  "black": "#011e38",
                  "blackBlue": "#122b47",
                  "blue": "#216beb",
                  "darkBlue": "#00438f",
                  "darkGrey": "#434d59",
                  "green": "#008059",
                  "grey": "#c0c8d1",
                  "lightBlue": "#e1ebfa",
                  "lightGreen": "#e9f7f2",
                  "lightGrey": "#e4e7eb",
                  "lightRed": "#fae6ea",
                  "lightYellow": "#fcf5e3",
                  "red": "#cc1439",
                  "white": "#ffffff",
                  "whiteGrey": "#f0f2f5",
                  "yellow": "#ffbb00",
                },
                "fontSizes": Object {
                  "large": "20px",
                  "larger": "26px",
                  "largest": "46px",
                  "medium": "16px",
                  "small": "14px",
                  "smaller": "12px",
                },
                "fontWeights": Object {
                  "bold": "600",
                  "light": "300",
                  "medium": "500",
                  "normal": "400",
                },
                "fonts": Object {
                  "base": "'IBM Plex Sans', sans-serif",
                  "mono": "'IBM Plex Mono', monospace",
                },
                "lineHeights": Object {
                  "base": "1.5",
                  "sectionTitle": "1.23076923",
                  "smallTextBase": "1.71428571",
                  "smallTextCompressed": "1.14285714",
                  "smallerText": "1.33333333",
                  "subsectionTitle": "1.2",
                  "title": "1.04347826",
                },
                "radii": Object {
                  "circle": "50%",
                  "medium": "4px",
                  "small": "2px",
                },
                "shadows": Object {
                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                },
                "space": Object {
                  "half": "4px",
                  "none": "0px",
                  "x1": "8px",
                  "x2": "16px",
                  "x3": "24px",
                  "x4": "32px",
                  "x5": "40px",
                  "x6": "48px",
                  "x8": "64px",
                },
                "zIndex": Object {
                  "content": 100,
                  "overlay": 1000,
                  "tabsBar": 210,
                  "tabsScollIndicator": 200,
                },
              }
            }
          >
            <Table
              columns={
                Array [
                  Object {
                    "dataKey": "date",
                    "label": "Date",
                  },
                  Object {
                    "dataKey": "expectedQuantity",
                    "label": "Expected Quantity",
                  },
                  Object {
                    "dataKey": "actualQuantity",
                    "label": "Actual Quantity",
                  },
                ]
              }
              compact={false}
              footerRows={Array []}
              hasSelectableRows={false}
              isHeaderSelected={false}
              keyField="id"
              loading={false}
              noRowsContent="No records have been created for this table."
              onPageChange={[Function]}
              onRowExpansionChange={null}
              rowHovers={true}
              rows={
                Array [
                  Object {
                    "actualQuantity": "1,800 eaches",
                    "date": "2019-10-01",
                    "expectedQuantity": "2,025 eaches",
                    "id": "r1",
                  },
                  Object {
                    "actualQuantity": "2,250 eaches",
                    "date": "2019-10-02",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r2",
                  },
                  Object {
                    "actualQuantity": "1,425 eaches",
                    "date": "2019-10-03",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r3",
                  },
                  Object {
                    "actualQuantity": "675 eaches",
                    "date": "2019-10-04",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r4",
                  },
                  Object {
                    "actualQuantity": "1,575 eaches",
                    "date": "2019-10-07",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r5",
                  },
                  Object {
                    "actualQuantity": "-",
                    "date": "2019-10-22",
                    "expectedQuantity": "1,725 eaches",
                    "id": "r7",
                  },
                  Object {
                    "actualQuantity": "-",
                    "date": "2019-10-23",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r8",
                  },
                  Object {
                    "actualQuantity": "-",
                    "date": "2019-10-24",
                    "expectedQuantity": "2,475 eaches",
                    "id": "r9",
                  },
                ]
              }
              rowsPerPage={1}
              selectedRows={Array []}
            >
              <StatefulTable
                columns={
                  Array [
                    Object {
                      "dataKey": "date",
                      "label": "Date",
                    },
                    Object {
                      "dataKey": "expectedQuantity",
                      "label": "Expected Quantity",
                    },
                    Object {
                      "dataKey": "actualQuantity",
                      "label": "Actual Quantity",
                    },
                  ]
                }
                compact={false}
                footerRows={Array []}
                hasSelectableRows={false}
                isHeaderSelected={false}
                keyField="id"
                loading={false}
                noRowsContent="No records have been created for this table."
                onPageChange={[Function]}
                onRowExpansionChange={null}
                rowHovers={true}
                rows={
                  Array [
                    Object {
                      "actualQuantity": "1,800 eaches",
                      "date": "2019-10-01",
                      "expectedQuantity": "2,025 eaches",
                      "id": "r1",
                    },
                    Object {
                      "actualQuantity": "2,250 eaches",
                      "date": "2019-10-02",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r2",
                    },
                    Object {
                      "actualQuantity": "1,425 eaches",
                      "date": "2019-10-03",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r3",
                    },
                    Object {
                      "actualQuantity": "675 eaches",
                      "date": "2019-10-04",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r4",
                    },
                    Object {
                      "actualQuantity": "1,575 eaches",
                      "date": "2019-10-07",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r5",
                    },
                    Object {
                      "actualQuantity": "-",
                      "date": "2019-10-22",
                      "expectedQuantity": "1,725 eaches",
                      "id": "r7",
                    },
                    Object {
                      "actualQuantity": "-",
                      "date": "2019-10-23",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r8",
                    },
                    Object {
                      "actualQuantity": "-",
                      "date": "2019-10-24",
                      "expectedQuantity": "2,475 eaches",
                      "id": "r9",
                    },
                  ]
                }
                rowsPerPage={1}
                selectedRows={Array []}
              >
                <BaseTable
                  columns={
                    Array [
                      Object {
                        "dataKey": "date",
                        "label": "Date",
                      },
                      Object {
                        "dataKey": "expectedQuantity",
                        "label": "Expected Quantity",
                      },
                      Object {
                        "dataKey": "actualQuantity",
                        "label": "Actual Quantity",
                      },
                    ]
                  }
                  compact={false}
                  footerRows={Array []}
                  hasSelectableRows={false}
                  isHeaderSelected={false}
                  keyField="id"
                  loading={false}
                  noRowsContent="No records have been created for this table."
                  onPageChange={[Function]}
                  onRowExpansionChange={null}
                  rowHovers={true}
                  rows={
                    Array [
                      Object {
                        "actualQuantity": "1,800 eaches",
                        "date": "2019-10-01",
                        "expectedQuantity": "2,025 eaches",
                        "id": "r1",
                      },
                    ]
                  }
                  rowsPerPage={1}
                  selectedRows={Array []}
                >
                  <BaseTable__StyledTable>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "BaseTable__StyledTable-sc-10lnp9m-0",
                            "isStatic": false,
                            "lastClassName": "ycode",
                            "rules": Array [
                              "border-collapse: collapse;",
                              "width: 100%;",
                              "background: white;",
                            ],
                          },
                          "displayName": "BaseTable__StyledTable",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "BaseTable__StyledTable-sc-10lnp9m-0",
                          "target": "table",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <table
                        className="BaseTable__StyledTable-sc-10lnp9m-0 ycode"
                      >
                        <TableHead
                          columns={
                            Array [
                              Object {
                                "dataKey": "date",
                                "label": "Date",
                              },
                              Object {
                                "dataKey": "expectedQuantity",
                                "label": "Expected Quantity",
                              },
                              Object {
                                "dataKey": "actualQuantity",
                                "label": "Actual Quantity",
                              },
                            ]
                          }
                          compact={false}
                        >
                          <thead>
                            <TableHead__StyledHeaderRow>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "TableHead__StyledHeaderRow-msr3t5-0",
                                      "isStatic": false,
                                      "lastClassName": "dCTkDK",
                                      "rules": Array [
                                        "color: #434d59;",
                                        "border-bottom: 1px solid #e4e7eb;",
                                      ],
                                    },
                                    "displayName": "TableHead__StyledHeaderRow",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "TableHead__StyledHeaderRow-msr3t5-0",
                                    "target": "tr",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <tr
                                  className="TableHead__StyledHeaderRow-msr3t5-0 dCTkDK"
                                >
                                  <StyledTh
                                    compact={false}
                                    key="date"
                                    scope="col"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 PAzBv"
                                        scope="col"
                                      >
                                        Date
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="expectedQuantity"
                                    scope="col"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 PAzBv"
                                        scope="col"
                                      >
                                        Expected Quantity
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                  <StyledTh
                                    compact={false}
                                    key="actualQuantity"
                                    scope="col"
                                  >
                                    <StyledComponent
                                      compact={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StyledTh-sc-10nzyk9-0",
                                            "isStatic": false,
                                            "lastClassName": "PAzBv",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "StyledTh",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StyledTh-sc-10nzyk9-0",
                                          "target": "th",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      scope="col"
                                    >
                                      <th
                                        className="StyledTh-sc-10nzyk9-0 PAzBv"
                                        scope="col"
                                      >
                                        Actual Quantity
                                      </th>
                                    </StyledComponent>
                                  </StyledTh>
                                </tr>
                              </StyledComponent>
                            </TableHead__StyledHeaderRow>
                          </thead>
                        </TableHead>
                        <TableBody
                          columns={
                            Array [
                              Object {
                                "dataKey": "date",
                                "label": "Date",
                              },
                              Object {
                                "dataKey": "expectedQuantity",
                                "label": "Expected Quantity",
                              },
                              Object {
                                "dataKey": "actualQuantity",
                                "label": "Actual Quantity",
                              },
                            ]
                          }
                          compact={false}
                          keyField="id"
                          loading={false}
                          noRowsContent="No records have been created for this table."
                          rowHovers={true}
                          rows={
                            Array [
                              Object {
                                "actualQuantity": "1,800 eaches",
                                "date": "2019-10-01",
                                "expectedQuantity": "2,025 eaches",
                                "id": "r1",
                              },
                            ]
                          }
                        >
                          <tbody>
                            <TableBodyRow
                              columns={
                                Array [
                                  Object {
                                    "dataKey": "date",
                                    "label": "Date",
                                  },
                                  Object {
                                    "dataKey": "expectedQuantity",
                                    "label": "Expected Quantity",
                                  },
                                  Object {
                                    "dataKey": "actualQuantity",
                                    "label": "Actual Quantity",
                                  },
                                ]
                              }
                              compact={false}
                              key="r1"
                              keyField="id"
                              row={
                                Object {
                                  "actualQuantity": "1,800 eaches",
                                  "date": "2019-10-01",
                                  "expectedQuantity": "2,025 eaches",
                                  "id": "r1",
                                }
                              }
                              rowHovers={true}
                            >
                              <TableBody__StyledTr
                                rowHovers={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                        "isStatic": false,
                                        "lastClassName": "gvDwxX",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "TableBody__StyledTr",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TableBody__StyledTr-sc-1amzhx8-0",
                                      "target": "tr",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  rowHovers={true}
                                >
                                  <tr
                                    className="TableBody__StyledTr-sc-1amzhx8-0 gvDwxX"
                                  >
                                    <TableCell
                                      cellData="2019-10-01"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "date",
                                          "label": "Date",
                                        }
                                      }
                                      compact={false}
                                      key="date"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r1",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            2019-10-01
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="2,025 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "expectedQuantity",
                                          "label": "Expected Quantity",
                                        }
                                      }
                                      compact={false}
                                      key="expectedQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r1",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            2,025 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                    <TableCell
                                      cellData="1,800 eaches"
                                      colSpan={null}
                                      column={
                                        Object {
                                          "dataKey": "actualQuantity",
                                          "label": "Actual Quantity",
                                        }
                                      }
                                      compact={false}
                                      key="actualQuantity"
                                      row={
                                        Object {
                                          "actualQuantity": "1,800 eaches",
                                          "date": "2019-10-01",
                                          "expectedQuantity": "2,025 eaches",
                                          "id": "r1",
                                        }
                                      }
                                    >
                                      <TableCell__StyledTableCell
                                        compact={false}
                                      >
                                        <StyledComponent
                                          compact={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                                "isStatic": false,
                                                "lastClassName": "dlhxuq",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "TableCell__StyledTableCell",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "TableCell__StyledTableCell-sc-1t826om-0",
                                              "target": "td",
                                              "toString": [Function],
                                              "usesTheme": false,
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <td
                                            className="TableCell__StyledTableCell-sc-1t826om-0 dlhxuq"
                                          >
                                            1,800 eaches
                                          </td>
                                        </StyledComponent>
                                      </TableCell__StyledTableCell>
                                    </TableCell>
                                  </tr>
                                </StyledComponent>
                              </TableBody__StyledTr>
                            </TableBodyRow>
                          </tbody>
                        </TableBody>
                        <TableFoot
                          columns={
                            Array [
                              Object {
                                "dataKey": "date",
                                "label": "Date",
                              },
                              Object {
                                "dataKey": "expectedQuantity",
                                "label": "Expected Quantity",
                              },
                              Object {
                                "dataKey": "actualQuantity",
                                "label": "Actual Quantity",
                              },
                            ]
                          }
                          keyField="id"
                          loading={false}
                          rows={Array []}
                        >
                          <tfoot />
                        </TableFoot>
                      </table>
                    </StyledComponent>
                  </BaseTable__StyledTable>
                </BaseTable>
                <Pagination
                  currentPage={1}
                  justifyContent="flex-end"
                  onNext={[Function]}
                  onPrevious={[Function]}
                  onSelectPage={[Function]}
                  pt="x2"
                  totalPages={8}
                >
                  <Styled(Box)
                    aria-label="Pagination navigation"
                    as="nav"
                    justifyContent="flex-end"
                    pt="x2"
                    theme={
                      Object {
                        "borders": Array [],
                        "breakpoints": Object {
                          "extraLarge": "1920px",
                          "extraSmall": "0px",
                          "large": "1360px",
                          "medium": "1024px",
                          "small": "768px",
                        },
                        "colors": Object {
                          "black": "#011e38",
                          "blackBlue": "#122b47",
                          "blue": "#216beb",
                          "darkBlue": "#00438f",
                          "darkGrey": "#434d59",
                          "green": "#008059",
                          "grey": "#c0c8d1",
                          "lightBlue": "#e1ebfa",
                          "lightGreen": "#e9f7f2",
                          "lightGrey": "#e4e7eb",
                          "lightRed": "#fae6ea",
                          "lightYellow": "#fcf5e3",
                          "red": "#cc1439",
                          "white": "#ffffff",
                          "whiteGrey": "#f0f2f5",
                          "yellow": "#ffbb00",
                        },
                        "fontSizes": Object {
                          "large": "20px",
                          "larger": "26px",
                          "largest": "46px",
                          "medium": "16px",
                          "small": "14px",
                          "smaller": "12px",
                        },
                        "fontWeights": Object {
                          "bold": "600",
                          "light": "300",
                          "medium": "500",
                          "normal": "400",
                        },
                        "fonts": Object {
                          "base": "'IBM Plex Sans', sans-serif",
                          "mono": "'IBM Plex Mono', monospace",
                        },
                        "lineHeights": Object {
                          "base": "1.5",
                          "sectionTitle": "1.23076923",
                          "smallTextBase": "1.71428571",
                          "smallTextCompressed": "1.14285714",
                          "smallerText": "1.33333333",
                          "subsectionTitle": "1.2",
                          "title": "1.04347826",
                        },
                        "radii": Object {
                          "circle": "50%",
                          "medium": "4px",
                          "small": "2px",
                        },
                        "shadows": Object {
                          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                        },
                        "space": Object {
                          "half": "4px",
                          "none": "0px",
                          "x1": "8px",
                          "x2": "16px",
                          "x3": "24px",
                          "x4": "32px",
                          "x5": "40px",
                          "x6": "48px",
                          "x8": "64px",
                        },
                        "zIndex": Object {
                          "content": 100,
                          "overlay": 1000,
                          "tabsBar": 210,
                          "tabsScollIndicator": 200,
                        },
                      }
                    }
                  >
                    <StyledComponent
                      aria-label="Pagination navigation"
                      as="nav"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "_foldedDefaultProps": Object {
                            "theme": Object {
                              "borders": Array [],
                              "breakpoints": Object {
                                "extraLarge": "1920px",
                                "extraSmall": "0px",
                                "large": "1360px",
                                "medium": "1024px",
                                "small": "768px",
                              },
                              "colors": Object {
                                "black": "#011e38",
                                "blackBlue": "#122b47",
                                "blue": "#216beb",
                                "darkBlue": "#00438f",
                                "darkGrey": "#434d59",
                                "green": "#008059",
                                "grey": "#c0c8d1",
                                "lightBlue": "#e1ebfa",
                                "lightGreen": "#e9f7f2",
                                "lightGrey": "#e4e7eb",
                                "lightRed": "#fae6ea",
                                "lightYellow": "#fcf5e3",
                                "red": "#cc1439",
                                "white": "#ffffff",
                                "whiteGrey": "#f0f2f5",
                                "yellow": "#ffbb00",
                              },
                              "fontSizes": Object {
                                "large": "20px",
                                "larger": "26px",
                                "largest": "46px",
                                "medium": "16px",
                                "small": "14px",
                                "smaller": "12px",
                              },
                              "fontWeights": Object {
                                "bold": "600",
                                "light": "300",
                                "medium": "500",
                                "normal": "400",
                              },
                              "fonts": Object {
                                "base": "'IBM Plex Sans', sans-serif",
                                "mono": "'IBM Plex Mono', monospace",
                              },
                              "lineHeights": Object {
                                "base": "1.5",
                                "sectionTitle": "1.23076923",
                                "smallTextBase": "1.71428571",
                                "smallTextCompressed": "1.14285714",
                                "smallerText": "1.33333333",
                                "subsectionTitle": "1.2",
                                "title": "1.04347826",
                              },
                              "radii": Object {
                                "circle": "50%",
                                "medium": "4px",
                                "small": "2px",
                              },
                              "shadows": Object {
                                "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                                "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                                "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                                "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                                "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                              },
                              "space": Object {
                                "half": "4px",
                                "none": "0px",
                                "x1": "8px",
                                "x2": "16px",
                                "x3": "24px",
                                "x4": "32px",
                                "x5": "40px",
                                "x6": "48px",
                                "x8": "64px",
                              },
                              "zIndex": Object {
                                "content": 100,
                                "overlay": 1000,
                                "tabsBar": 210,
                                "tabsScollIndicator": 200,
                              },
                            },
                          },
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "cXJvnk",
                            "rules": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              "display: flex;",
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "Styled(Box)",
                          "foldedComponentIds": Array [
                            "Box-sc-1qu1edy-0",
                          ],
                          "propTypes": Object {
                            "alignItems": [Function],
                            "flexDirection": [Function],
                            "flexWrap": [Function],
                            "justifyContent": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      justifyContent="flex-end"
                      pt="x2"
                      theme={
                        Object {
                          "borders": Array [],
                          "breakpoints": Object {
                            "extraLarge": "1920px",
                            "extraSmall": "0px",
                            "large": "1360px",
                            "medium": "1024px",
                            "small": "768px",
                          },
                          "colors": Object {
                            "black": "#011e38",
                            "blackBlue": "#122b47",
                            "blue": "#216beb",
                            "darkBlue": "#00438f",
                            "darkGrey": "#434d59",
                            "green": "#008059",
                            "grey": "#c0c8d1",
                            "lightBlue": "#e1ebfa",
                            "lightGreen": "#e9f7f2",
                            "lightGrey": "#e4e7eb",
                            "lightRed": "#fae6ea",
                            "lightYellow": "#fcf5e3",
                            "red": "#cc1439",
                            "white": "#ffffff",
                            "whiteGrey": "#f0f2f5",
                            "yellow": "#ffbb00",
                          },
                          "fontSizes": Object {
                            "large": "20px",
                            "larger": "26px",
                            "largest": "46px",
                            "medium": "16px",
                            "small": "14px",
                            "smaller": "12px",
                          },
                          "fontWeights": Object {
                            "bold": "600",
                            "light": "300",
                            "medium": "500",
                            "normal": "400",
                          },
                          "fonts": Object {
                            "base": "'IBM Plex Sans', sans-serif",
                            "mono": "'IBM Plex Mono', monospace",
                          },
                          "lineHeights": Object {
                            "base": "1.5",
                            "sectionTitle": "1.23076923",
                            "smallTextBase": "1.71428571",
                            "smallTextCompressed": "1.14285714",
                            "smallerText": "1.33333333",
                            "subsectionTitle": "1.2",
                            "title": "1.04347826",
                          },
                          "radii": Object {
                            "circle": "50%",
                            "medium": "4px",
                            "small": "2px",
                          },
                          "shadows": Object {
                            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                          },
                          "space": Object {
                            "half": "4px",
                            "none": "0px",
                            "x1": "8px",
                            "x2": "16px",
                            "x3": "24px",
                            "x4": "32px",
                            "x5": "40px",
                            "x6": "48px",
                            "x8": "64px",
                          },
                          "zIndex": Object {
                            "content": 100,
                            "overlay": 1000,
                            "tabsBar": 210,
                            "tabsScollIndicator": 200,
                          },
                        }
                      }
                    >
                      <nav
                        aria-label="Pagination navigation"
                        className="Box-sc-1qu1edy-0 sc-bdVaJa cXJvnk"
                      >
                        <PreviousButton
                          disabled={true}
                          onClick={[Function]}
                        >
                          <Pagination__PaginationButton
                            disabled={true}
                            onClick={[Function]}
                          >
                            <StyledComponent
                              disabled={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                    "isStatic": false,
                                    "lastClassName": "fJtBeN",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Pagination__PaginationButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "usesTheme": false,
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <button
                                className="Pagination__PaginationButton-sc-1fsx1pp-0 JztWY"
                                disabled={true}
                                onClick={[Function]}
                              >
                                <Styled(Component)
                                  color="currentColor"
                                  icon="leftArrow"
                                  ml="-8px"
                                  size="24px"
                                  title={null}
                                >
                                  <StyledComponent
                                    color="currentColor"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "_foldedDefaultProps": Object {
                                          "color": "currentColor",
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "btpLqV",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Styled(Component)",
                                        "foldedComponentIds": Array [],
                                        "propTypes": Object {
                                          "color": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "defaultProps": Object {
                                            "className": undefined,
                                            "color": "currentColor",
                                            "focusable": false,
                                            "size": "24px",
                                            "title": null,
                                          },
                                          "propTypes": Object {
                                            "className": [Function],
                                            "color": [Function],
                                            "focusable": [Function],
                                            "icon": [Function],
                                            "size": [Function],
                                            "title": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    icon="leftArrow"
                                    ml="-8px"
                                    size="24px"
                                    title={null}
                                  >
                                    <ForwardRef
                                      className="sc-bwzfXH coUSKf"
                                      color="currentColor"
                                      focusable={false}
                                      icon="leftArrow"
                                      ml="-8px"
                                      size="24px"
                                      title={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="sc-bwzfXH coUSKf"
                                        color="currentColor"
                                        fill="currentColor"
                                        focusable={false}
                                        height="24px"
                                        icon="leftArrow"
                                        ml="-8px"
                                        size="24px"
                                        title={null}
                                        viewBox="0 0 24 24"
                                        width="24px"
                                      >
                                        <path
                                          d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                                          key="0"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledComponent>
                                </Styled(Component)>
                                 Previous
                              </button>
                            </StyledComponent>
                          </Pagination__PaginationButton>
                        </PreviousButton>
                        <Styled(Pagination__PaginationButton)
                          aria-current={true}
                          aria-label={null}
                          currentPage={true}
                          disabled={true}
                          key="1"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={true}
                            aria-label={null}
                            currentPage={true}
                            disabled={true}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={true}
                              aria-label={null}
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik kTEgcl"
                              disabled={true}
                              onClick={[Function]}
                            >
                              1
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <Styled(Pagination__PaginationButton)
                          aria-current={false}
                          aria-label="Go to page 2"
                          currentPage={false}
                          disabled={false}
                          key="2"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={false}
                            aria-label="Go to page 2"
                            currentPage={false}
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={false}
                              aria-label="Go to page 2"
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik khatUV"
                              disabled={false}
                              onClick={[Function]}
                            >
                              2
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <Styled(Pagination__PaginationButton)
                          aria-current={false}
                          aria-label="Go to page 3"
                          currentPage={false}
                          disabled={false}
                          key="3"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={false}
                            aria-label="Go to page 3"
                            currentPage={false}
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={false}
                              aria-label="Go to page 3"
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik khatUV"
                              disabled={false}
                              onClick={[Function]}
                            >
                              3
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <Styled(Pagination__PaginationButton)
                          aria-current={false}
                          aria-label="Go to page 4"
                          currentPage={false}
                          disabled={false}
                          key="4"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={false}
                            aria-label="Go to page 4"
                            currentPage={false}
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={false}
                              aria-label="Go to page 4"
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik khatUV"
                              disabled={false}
                              onClick={[Function]}
                            >
                              4
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <Styled(Pagination__PaginationButton)
                          aria-current={false}
                          aria-label="Go to page 5"
                          currentPage={false}
                          disabled={false}
                          key="5"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={false}
                            aria-label="Go to page 5"
                            currentPage={false}
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={false}
                              aria-label="Go to page 5"
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik khatUV"
                              disabled={false}
                              onClick={[Function]}
                            >
                              5
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <styled.p
                          color="currentColor"
                          disabled={false}
                          fontSize="small"
                          inline={false}
                          key="sep5"
                          lineHeight="smallTextBase"
                          m={0}
                          mr="x2"
                          py="x1"
                        >
                          <StyledComponent
                            color="currentColor"
                            disabled={false}
                            fontSize="small"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "_foldedDefaultProps": Object {
                                  "color": "currentColor",
                                  "disabled": false,
                                  "fontSize": "16px",
                                  "inline": false,
                                  "lineHeight": "1.5",
                                  "m": 0,
                                },
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "feTZIC",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.p",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "disabled": [Function],
                                  "inline": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "p",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={false}
                            lineHeight="smallTextBase"
                            m={0}
                            mr="x2"
                            py="x1"
                          >
                            <p
                              className="sc-bxivhb feTZIC"
                              color="currentColor"
                              disabled={false}
                              fontSize="small"
                            >
                              ...
                            </p>
                          </StyledComponent>
                        </styled.p>
                        <Styled(Pagination__PaginationButton)
                          aria-current={false}
                          aria-label="Go to page 8"
                          currentPage={false}
                          disabled={false}
                          key="8"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            aria-current={false}
                            aria-label="Go to page 8"
                            currentPage={false}
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gipzik",
                                  "isStatic": false,
                                  "lastClassName": "khatUV",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "Styled(Pagination__PaginationButton)",
                                "foldedComponentIds": Array [
                                  "Pagination__PaginationButton-sc-1fsx1pp-0",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-gipzik",
                                "target": "button",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              aria-current={false}
                              aria-label="Go to page 8"
                              className="Pagination__PaginationButton-sc-1fsx1pp-0 sc-gipzik khatUV"
                              disabled={false}
                              onClick={[Function]}
                            >
                              8
                            </button>
                          </StyledComponent>
                        </Styled(Pagination__PaginationButton)>
                        <NextButton
                          disabled={false}
                          onClick={[Function]}
                        >
                          <Pagination__PaginationButton
                            disabled={false}
                            onClick={[Function]}
                          >
                            <StyledComponent
                              disabled={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                    "isStatic": false,
                                    "lastClassName": "fJtBeN",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Pagination__PaginationButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Pagination__PaginationButton-sc-1fsx1pp-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "usesTheme": false,
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <button
                                className="Pagination__PaginationButton-sc-1fsx1pp-0 fJtBeN"
                                disabled={false}
                                onClick={[Function]}
                              >
                                Next 
                                <Styled(Component)
                                  color="currentColor"
                                  icon="rightArrow"
                                  mr="-8px"
                                  size="24px"
                                  title={null}
                                >
                                  <StyledComponent
                                    color="currentColor"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "_foldedDefaultProps": Object {
                                          "color": "currentColor",
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "btpLqV",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Styled(Component)",
                                        "foldedComponentIds": Array [],
                                        "propTypes": Object {
                                          "color": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "defaultProps": Object {
                                            "className": undefined,
                                            "color": "currentColor",
                                            "focusable": false,
                                            "size": "24px",
                                            "title": null,
                                          },
                                          "propTypes": Object {
                                            "className": [Function],
                                            "color": [Function],
                                            "focusable": [Function],
                                            "icon": [Function],
                                            "size": [Function],
                                            "title": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    icon="rightArrow"
                                    mr="-8px"
                                    size="24px"
                                    title={null}
                                  >
                                    <ForwardRef
                                      className="sc-bwzfXH btpLqV"
                                      color="currentColor"
                                      focusable={false}
                                      icon="rightArrow"
                                      mr="-8px"
                                      size="24px"
                                      title={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="sc-bwzfXH btpLqV"
                                        color="currentColor"
                                        fill="currentColor"
                                        focusable={false}
                                        height="24px"
                                        icon="rightArrow"
                                        mr="-8px"
                                        size="24px"
                                        title={null}
                                        viewBox="0 0 24 24"
                                        width="24px"
                                      >
                                        <path
                                          d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                          key="0"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledComponent>
                                </Styled(Component)>
                              </button>
                            </StyledComponent>
                          </Pagination__PaginationButton>
                        </NextButton>
                      </nav>
                    </StyledComponent>
                  </Styled(Box)>
                </Pagination>
              </StatefulTable>
            </Table>
          </ThemeProvider>
        </div>
      </StyledComponent>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;
